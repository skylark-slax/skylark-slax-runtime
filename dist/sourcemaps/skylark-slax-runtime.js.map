{"version":3,"sources":["skylark-slax-runtime.js"],"names":["define","skylark","objects","hoster","async","Xhr","eventer","_config","_rootUrl","_baseUrl","slax","prepare","config","p","slaxRoot","slaxApp","global","slaxConfig","scripts","document","getElementsByTagName","i","script","slaxDir","src","match","length","getAttribute","eval","undefined","mixin","Deferred","resolve","d","promise","get","then","slaxAppPath","apps","name","dir","start","cfg","runtime","require","boot","bootFunc","window","initApp","spa","_cfg","app","go","path","force","run","spaModule","_start","attach","caches","main"],"mappings":";;;;;;;u+BAAAA,OAAA,6BACA,mBACA,wBACA,uBACA,sBACA,uBACA,wBACA,SAAAC,QAAAC,QAAAC,OAAAC,MAAAC,IAAAC,SAEA,IAAAC,WAIAC,SAAA,GACAC,SAAA,GAIAC,MACAC,QAAA,SAAAC,QACA,IAAAC,EAAAC,SAAAC,QAIA,GAHAH,SACAA,OAAAT,OAAAa,OAAAC,aAEAL,OAIA,IAHA,IAAAM,QAAAC,SAAAC,qBAAA,UACAC,EAAA,EACAC,OAAAC,QAAAC,IAAAC,MACAJ,EAAAH,QAAAQ,QAEA,GADAJ,OAAAJ,QAAAG,MACAG,IAAAF,OAAAK,aAAA,UAAAF,MAAAD,IAAAC,MAAA,gEAAA,CAEAF,QAAAE,MAAA,IAAA,IAGAD,IAAAF,OAAAK,aAAA,qBACAf,OAAAgB,KAAA,MAAAJ,IAAA,QAEAV,SAAAQ,OAAAK,aAAA,uBACAE,GAAAf,WACAA,SAAAS,SAEAR,QAAAO,OAAAK,aAAA,kBAIA,MAKA,GAAAf,OACAV,QAAA4B,MAAAvB,QAAAK,QACAC,EAAAT,MAAA2B,SAAAC,cACA,CACA,IAAAC,EAAA,IAAA7B,MAAA2B,SACAlB,EAAAoB,EAAAC,QACA7B,IAAA8B,IAAArB,SAAA,qBAAAsB,KAAA,SAAAxB,GACA,GAAAG,QAAA,CAEA,IADA,IAAAsB,EACAhB,EAAA,EAAAA,EAAAT,EAAA0B,KAAAZ,OAAAL,IACAT,EAAA0B,KAAAjB,GAAAkB,MAAAxB,UACAsB,EAAAvB,SAAAF,EAAA0B,KAAAjB,GAAAmB,KAGAnC,IAAA8B,IAAAE,EAAA,aAAAD,KAAA,SAAAxB,GACAV,QAAA4B,MAAAvB,QAAAK,GACAqB,EAAAD,iBAGA9B,QAAA4B,MAAAvB,QAAAK,GACAqB,EAAAD,YAOA,OAAAnB,GA9EA4B,MAAA,WACA,IAAAC,EAAAnC,QAUA,GAJAmC,EAAAC,SACAC,QAAAhC,OAAA8B,EAAAC,SAGAD,EAAAG,KAAA,CACA,IAAAC,EAAAC,OAAAL,EAAAG,MACAC,EAAAJ,OACA,CACA,IAAAM,EAAA,SAAAC,EAAAC,GAGA,IAAAC,EAAAF,EAFAC,EAAAA,GAAAR,GAIAvC,OAAAa,OAAAoC,GAAA,SAAAC,EAAAC,GACAH,EAAAC,GAAAC,EAAAC,IAGAH,EAAAxC,UAAAyB,KAAA,WACAe,EAAAI,SAGAb,EAAAc,UACAZ,SAAAF,EAAAc,WAAA,SAAAP,GACAA,EAAAQ,OACAR,EAAAQ,SAAArB,KAAA,SAAAc,GACAF,EAAAC,EAAAC,KAGAF,EAAAC,KAIAD,EAAA/C,QAAAgD,QAUA,OAJAjD,OAAA,UAAA,WACA,OAAAU,OAGAT,QAAAyD,OAAA,OAAAhD,QAGAV,OAAA,+BACA,SACA,qBACA,SAAAU,EAAAiD,GAIA,OAAAjD,EAAAiD,OAAAA,IAEA3D,OAAA,gCACA,SACA,gBACA,wBACA,eACA,qBACA,sBACA,oBACA,4BACA,8BACA,8BACA,gCACA,+BACA,8BACA,8BACA,gCACA,6BACA,8BACA,+BACA,2BACA,8BACA,yBACA,wBACA,mBACA,oBACA,oBACA,qBACA,mBACA,yBACA,qBACA,wBACA,kBAEA,SAAAU,EAAAT,GACA,OAAAS,EAAAT,QAAAA,IAEAD,OAAA,6BACA,SACA,WACA,aACA,SAAAU,GACA,OAAAA,IAEAV,OAAA,wBAAA,6BAAA,SAAA4D,GAAA,OAAAA","file":"../skylark-slax-runtime.js","sourcesContent":["define('skylark-slax-runtime/slax',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-objects\",\r\n\t\"skylark-langx-hoster\",\r\n\t\"skylark-langx-async\",\r\n\t\"skylark-net-http/Xhr\",\r\n\t\"skylark-domx-eventer\"\r\n],function(skylark, objects, hoster, async, Xhr, eventer){\r\n\r\n    var _config = {\r\n\r\n\r\n    },\r\n    _rootUrl = \"\",  //The root url of slax system\r\n    _baseUrl = \"\";  //the base url of slax app\r\n\r\n\r\n\r\n    var slax = {\r\n        prepare : function(config) {\r\n            var p,slaxRoot,slaxApp;\r\n            if (!config) {\r\n                config = hoster.global.slaxConfig;\r\n            }\r\n            if (!config) {\r\n                var scripts = document.getElementsByTagName(\"script\"),\r\n                    i = 0,\r\n                    script, slaxDir, src, match;\r\n                while(i < scripts.length){\r\n                    script = scripts[i++];\r\n                    if((src = script.getAttribute(\"src\")) && (match = src.match(/(((.*)\\/)|^)skylark-slax-runtime([0-9A-Za-z\\-]*)\\.js(\\W|$)/i))){\r\n                        // sniff slaxDir and baseUrl\r\n                        slaxDir = match[3] || \"\";\r\n\r\n                        // sniff configuration on attribute in script element\r\n                        if(src = script.getAttribute(\"data-slax-config\") ){\r\n                            config = eval(\"({ \" + src + \" })\");\r\n                        } else {\r\n                            slaxRoot = script.getAttribute(\"data-slax-root\");\r\n                            if (slaxRoot == undefined) {\r\n                                slaxRoot = slaxDir;\r\n                            }\r\n                            slaxApp = script.getAttribute(\"data-slax-app\");\r\n                        }\r\n\r\n\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (config) {\r\n                objects.mixin(_config,config);\r\n                p = async.Deferred.resolve()\r\n            } else {\r\n                var d = new async.Deferred(),\r\n                    p = d.promise;\r\n                Xhr.get(slaxRoot + \"/slax-config.json\").then(function(config){\r\n                    if (slaxApp) {\r\n                        var slaxAppPath;\r\n                        for (var i=0; i<config.apps.length;i++) {\r\n                            if (config.apps[i].name == slaxApp) {\r\n                                slaxAppPath = slaxRoot + config.apps[i].dir;\r\n                            } \r\n                        }\r\n                        Xhr.get(slaxAppPath+\"/spa.json\").then(function(config){\r\n                            objects.mixin(_config,config);\r\n                            d.resolve();\r\n                        });\r\n                    } else {\r\n                        objects.mixin(_config,config);\r\n                        d.resolve();\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            return p;\r\n        },\r\n\r\n        start : function() {\r\n            var cfg = _config;\r\n\r\n            //if (cfg.contextPath) {\r\n            //  _cfg.baseUrl = cfg.contextPath;\r\n            //}\r\n\r\n            if (cfg.runtime) {\r\n                require.config(cfg.runtime);\r\n            }\r\n\r\n            if (cfg.boot) {\r\n                let bootFunc = window[cfg.boot];\r\n                bootFunc(cfg);\r\n            } else {\r\n                var initApp = function(spa, _cfg) {\r\n                    _cfg = _cfg || cfg;\r\n      \r\n                    var app = spa(_cfg);\r\n\r\n                    hoster.global.go =  function(path, force) {\r\n                        app.go(path, force);\r\n                    };\r\n\r\n                    app.prepare().then(function(){\r\n                        app.run();\r\n                    });\r\n                };\r\n                if(cfg.spaModule) {\r\n                    require([cfg.spaModule], function(spa) {\r\n                        if(spa._start) {\r\n                            spa._start().then(function(_cfg){\r\n                                initApp(spa, _cfg);\r\n                            });\r\n                        } else {\r\n                            initApp(spa);\r\n                        }\r\n                    });\r\n                } else {\r\n                    initApp(skylark.spa);\r\n                }                \r\n            }\r\n        }\r\n    };\r\n\r\n    define(\"slax\",[],function(){\r\n        return slax;\r\n    });\r\n\r\n    return skylark.attach(\"slax\",slax);\r\n\r\n});\ndefine('skylark-slax-runtime/caches',[\r\n\t\"./slax\",\r\n\t\"skylark-io-caches\"\r\n],function(slax,caches){\r\n\t//local\r\n\t//page\r\n\t//session\r\n\treturn slax.caches = caches;\r\n});\ndefine('skylark-slax-runtime/skylark',[\r\n\t\"./slax\",\r\n\t\"skylark-langx\",\r\n\t\"skylark-langx-logging\",\r\n\t\"skylark-domx\",\r\n\t\"skylark-domx-files\",\r\n\t\"skylark-domx-images\",\r\n\t\"skylark-domx-i18n\",\r\n\t\"skylark-domx-plugins-base\",\r\n\t\"skylark-domx-plugins-colors\",\r\n\t\"skylark-domx-plugins-groups\",\r\n\t\"skylark-domx-plugins-pictures\",\r\n\t\"skylark-domx-plugins-players\",\r\n\t\"skylark-domx-plugins-panels\",\r\n\t\"skylark-domx-plugins-embeds\",\r\n\t\"skylark-domx-plugins-sandboxs\",\r\n\t\"skylark-domx-plugins-menus\",\t\r\n\t\"skylark-domx-plugins-popups\",\t\r\n\t\"skylark-domx-plugins-uploads\",\r\n\t\"skylark-devices-keyboard\",\t\r\n\t\"skylark-devices-orientation\",\t\r\n\t\"skylark-devices-points\",\t\r\n\t\"skylark-devices-webgl\",\r\n\t\"skylark-io-mimes\",\r\n\t\"skylark-io-caches\",\r\n\t\"skylark-io-diskfs\",\r\n\t\"skylark-io-streams\",\r\n\t\"skylark-net-http\",\r\n\t\"skylark-appify-routers\",\r\n\t\"skylark-appify-spa\",\r\n\t\"skylark-data-entities\",\r\n\t\"skylark-jquery\"\r\n\t\r\n],function(slax,skylark){\r\n\treturn slax.skylark = skylark;\r\n});\ndefine('skylark-slax-runtime/main',[\r\n\t\"./slax\",\r\n\t\"./caches\",\r\n\t\"./skylark\"\r\n],function(slax){\r\n\treturn slax;\r\n});\ndefine('skylark-slax-runtime', ['skylark-slax-runtime/main'], function (main) { return main; });\n\n"]}