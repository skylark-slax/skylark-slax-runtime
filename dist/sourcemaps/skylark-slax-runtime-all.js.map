{"version":3,"sources":["skylark-slax-runtime-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","class2type","nativeIsArray","Array","isArray","toString","type","forEach","toLowerCase","String","call","object","constructor","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isElement","isEmpty","isNaN","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","undefined","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","self","_document","defineProperty","w","require","document","matched","ua","match","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","filter","find","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","proxy","context","unshift","TypeError","delegate","TMP","props","tmp","templateSettings","evaluate","interpolate","escape","noMatch","escapes","'","\\","\r","\n","\t"," "," ","escaper","bind","debounce","wait","timeout","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","negate","noop","returnTrue","returnFalse","template","text","data","settings","render","matcher","RegExp","join","variable","Function","e","argument","funcs","Promise","always","handler","then","done","fail","catch","Deferred","promise","makePromise2","resolve","reject","_resolve","_reject","isResolved","isPending","isRejected","v","state","notified","listeners","onResolved","onRejected","onProgress","progress","__ctx__","pipe","notify","listener","error","resolveWith","_resolved","p","reason","rejectWith","_rejected","errback","progback","all","d","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","series","waterful","createClass","_constructor","_construct","init","parent","mixins","options","innerParent","ctor","Error","clss","superclass","cls","clsMixines","serialMixins","newCtor","xtor","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","overrided","ret","extendClass","inherit","f1","klass","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","compatible","event","isDefaultPrevented","sourceMethod","Event","CustomEvent","[object Object]","super","parse","segs","Emitter","on","events","selector","one","_hub","parsed","emit","eventName","len","reCompact","isImmediatePropagationStopped","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","trigger","createEvent","Evented","http","getAbsoluteUrl","url","createElement","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","complete","accepts","script","json","xml","html","crossDomain","processData","cache","traditional","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","query","serializeData","param","toUpperCase","serialize","scope","t","hash","add","encodeURIComponent","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","JSON","Blob","xhrObj","response","reponse","statusText","evt","open","setRequestHeader","send","abort","request","get","post","patch","put","del","defaultOptions","QueryResults","results","isPromise","addIterativeMethod","method","total","ArrayStore","queryEngine","queryObject","required","execute","thisObject","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","id","getIdentity","Math","random","overwrite","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","parseMilliSeconds","str","strs","number","trim","datetimes","escapeCharMap","freeze","&","<",">","\"","`","=","replaceChar","c","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","dasherize","deserializeValue","generateUUID","r","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","strings","base64","decode","input","binary","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","_keyStr","fromCharCode","utftext","c1","c2","charCodeAt","c3","_utf8_decode","encode","_utf8_encode","Stateful","attributes","cid","cidPrefix","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","topic","_uid","langx","funcArg","payload","getQueryParams","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","nodeName","elm","chkName","enhancePlaceContent","placing","neddsFlattern","append","parentNode","appendChild","tag","createElementNS","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","ownerDocument","noder","active","doc","el","activeElement","refNode","nextSibling","insertBefore","blur","getAttribs","setAttrib","getAttrib","child","contents","contentDocument","childNodes","createFragment","$1","container","newXml","edsplit","removeSelfClosingTags","dom","removeChild","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","disabled","closest","visible","isActive","elem","isInDocument","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","prepend","reflow","offsetHeight","console","warn","children","oldNode","replaceChild","selectable","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","escapeRegExp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","checked","enabled","even","focus","tabindex","gt","sel","header","hidden","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","max","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","pluck","property","removeAttr","removeAttribute","removeData","names","removeProp","isQ","some","every","rquickExpr","wrapper_node_operation","oldValueFunc","argType","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_value","newValue","NodeList","ready","rootQuery","toArray","size","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","htmlIsFunction","wrapAll","firstElementChild","wrapInner","toggle","setting","css","show","hide","prevAll","nextAll","detach","hover","fnOver","fnOut","mouseenter","mouseleave","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","disableSelection","enableSelection","flow","isBlockNode","plugin","returnValue","plugins","instantiate","wraps","wrapper_some_chk","wrapper_every_act_firstArgFunc","newArg1","wrapper_name_value","VisualElement","_elm","velm","batch","action","HTMLElement","_delegator","ignoreProperties","readyRE","NativeEventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","readyState","keyCodeLookup","backspace","comma","delete","down","enter","home","left","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","regKey","special","stop","evented","dispatchEvent","delegateMethodNames","_config","_rootUrl","_baseUrl","slax","prepare","config","slaxRoot","slaxApp","slaxConfig","scripts","getElementsByTagName","slaxDir","slaxAppPath","apps","dir","cfg","runtime","initApp","spa","_cfg","app","go","force","spaModule","_start","cookie","sKey","unescape","list","expires","domain","secure","date","Date","now","setTime","getTime","expire","toGMTString","requestFileSystem","webkitRequestFileSystem","resolveLocalFileSystemURL","webkitResolveLocalFileSystemURL","MozBlobBuilder","WebKitBlobBuilder","BlobBuilder","errorHandler","msg","code","FileError","QUOTA_EXCEEDED_ERR","NOT_FOUND_ERR","SECURITY_ERR","INVALID_MODIFICATION_ERR","INVALID_STATE_ERR","LocalFileSystem","_fs","_isPersisted","_cwd","fs","readfileAsArrayBuffer","getFile","fileEntry","reader","FileReader","readAsArrayBuffer","readfileAsDataURL","readAsDataURL","readfileAsText","readAsText","writefile","folders","mkdir","createWriter","fileWriter","truncated","onwriteend","truncate","onerror","blob","write","rmfile","readdir","getDirectory","dirEntry","dirReader","createReader","entries","readEntries","entry","isDirectory","folderParts","createDir","rootDir","exclusive","rmdir","removeRecursively","dest","cwd","copyTo","move","moveTo","chdir","onchdir","fullPath","importFromHost","files","f","exportToHost","isSupported","isPersisted","typ","PERSISTENT","TEMPORARY","requestLocalFileSystem","storage","localStorage","setItem","defaultVal","getItem","vaules","sessiionStorage","sessionStorage","_cache","insertRuleFunc","head","sheetsByUrl","sheetsById","defaultSheetId","_createStyleSheet","defaultSheet","rulesPropName","deleteRuleFunc","deleteRule","removeRule","insertRule","_insertRule","addRule","external","media","rel","deleteSheetRule","sheetId","rule","sheet","_rule","addSheetRules","rules","isAtRule","adjust","parentName","depth","strNode","atFlg","SPACE","repeat","adjusted","addRules","createStyleSheet","insertSheetRule","loadStyleSheet","loadedCallback","errorCallback","startTime","onload","removeStyleSheet","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","view","opener","styler","autocssfix","cssHooks","addClass","re","computedStyle","getPropertyValue","removeProperty","cssText","hasClass","isInvisible","removeClass","display","defaultDisplay","toggleClass","replaceClass","newClass","oldClass","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","top","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","clientSize","dimension","width","height","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","fullCover","hor","vert","vertical","horizontal","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","feedback","important","Dimension","m","margin","cb","mb","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","throb","timer","time","throbber","overlayDiv","zIndex","overlay","textNode","update","nodeValue","toogle","css3Transform","getZoom","radian","Cos","Sin","matrix","cos","sin","M11","M12","M21","M22","toFixed","transformData","calcs","PI","rotate","degress","hZoom","vZoom","zoomin","zoomout","calcFunc","watch","imgs","totalCount","progressedCount","successedCount","faileredCount","successed","failered","isLoaded","progressed","isCompleted","naturalWidth","loaded","addBackgroundImage","elm1","Image","childImgs","background","viewer","_load","border","padding","_init","dispose","images","imagesLoaded","imagesViewer","preload","urls","elmx","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","instance","curOption","_setOptions","_setOption","getUID","domNode","shortcutName","extfn","shortcutter","args2","scriptsByUrl","scriptElementsById","rscriptType","scripter","preservedScriptAttributes","nonce","noModule","loadJavaScript","loadedCallbacks","errorCallbacks","callbacks","deleteJavaScript","diskfs","webentry","onError","isFile","relativePath","dropzone","hoverClass","droppedCallback","dropped","enterdCount","dataTransfer","webkitGetAsEntry","getAsEntry","pastezone","pastedCallback","pasted","clipboardData","getAsFile","fileInput","maxFileSize","directory","multiple","accept","title","fileSelected","picked","selectFiles","pickedFiles","onchange","webkitEntries","webkitdirectory","picker","blobSlice","webkitSlice","mozSlice","Upload","_options","debug","maxConnections","maxChunkSize","fileName","onComplete","onCancel","onFailure","_queue","_params","_files","_xhrs","_loaded","_send","sendAll","_cancel","_dequeue","cancelAll","getName","getSize","fileSize","getLoaded","curUploadingSize","chunkSize","curLoadedSize","formParamName","formData","lengthComputable","getQueue","FileUpload","MultiUploader","uploadUrl","allowedExtensions","sizeLimit","minSizeLimit","autoUpload","selectors","fileList","fileItem","nodata","startUploads","cancelUploads","_velm","_initEventHandler","_initFileHandlers","_initUpoadHandler","_updateFileList","dzSelector","pzSelector","pkSelector","_addFiles","_onProgress","_onComplete","_onCancel","_onFailure","itemSelectors","_listElement","$fileItem","fileId","$files","$item","_getItemByFileId","percent","progressHTML","_formatSize","_updateFile","_filesInProgress","doneMsg","_addToList","_formatFileName","with_files_elements","without_files_elements","when_pending","when_running","when_done","item2","_validateFile","_addFile","_isAllowedExtension","_error","messages","replacement","showMessage","ext","allowed","bytes","colors","trimLeft","trimRight","math","mathRound","mathMin","min","mathMax","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hexNames","o","flipped","rgbToRgb","g","bound01","hslToRgb","h","hue2rgb","q","hsvToRgb","floor","mod","boundAlpha","isOnePointZero","processPercent","isPercentage","parseIntFromHex","pad2","convertToPercentage","convertHexToDecimal","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","matchers","rgb","rgba","hsl","hsla","hsv","hsva","hex3","hex6","hex8","stringInputToObject","color","named","inputToRGB","ok","substr","rgbToHsl","rgbToHsv","rgbToHex","allow3Char","hex","rgbaToHex","clamp01","tinyCounter","mathRandom","Color","opts","_originalInput","_r","_g","_b","_a","_roundA","_format","_gradientType","gradientType","_ok","_tc_id","isDark","getBrightness","isLight","getOriginalInput","getFormat","getAlpha","toRgb","setAlpha","toHsv","toHsvString","toHsl","toHslString","toHex","toHexString","toHex8","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","needsAlphaFormat","_applyModification","lighten","brighten","darken","desaturate","saturate","greyscale","spin","_applyCombination","analogous","complement","monochromatic","splitcomplement","triad","tetrad","amount","hue","slices","modification","fromRatio","newColor","equals","color1","color2","mix","rgb1","rgb2","readability","brightnessA","brightnessB","colorDiff","brightness","isReadable","mostReadable","baseColor","colorList","bestColor","bestScore","bestIsReadable","readable","score","onmove","onstart","onstop","dragging","maxHeight","maxWidth","hasTouch","duringDragEvents","prevent","documentMode","t0","touches","dragX","dragY","which","draggable","defaultOpts","beforeShow","flat","showInput","allowEmpty","showButtons","clickoutFiresChange","showInitial","showPalette","showPaletteOnly","hideAfterPaletteSelect","togglePaletteOnly","showSelectionPalette","localStorageKey","maxSelectionSize","cancelText","chooseText","togglePaletteMoreText","togglePaletteLessText","clearText","noColorSelectedText","preferredFormat","containerClassName","replacerClassName","showAlpha","theme","palette","selectionPalette","pickers","replaceInput","markup","gradientFix","paletteTemplate","tiny","swatchStyle","ColorPicker","callbackContext","instanceOptions","isDragging","dragWidth","dragHeight","dragHelperHeight","slideHeight","alphaWidth","alphaSlideHelperWidth","slideHelperHeight","currentHue","currentSaturation","currentValue","currentAlpha","paletteArray","paletteLookup","draggingClass","shiftMovementDirection","boundElement","pickerContainer","dragger","dragHelper","slider","slideHelper","alphaSliderInner","alphaSlider","alphaSlideHelper","paletteContainer","initialColorContainer","cancelButton","clearButton","chooseButton","toggleButton","isInput","isInputTypeColor","inputTypeColorSupport","shouldReplace","replacer","offsetElement","previewElement","initialColor","colorOnShow","currentPreferredFormat","applyOptions","updateSelectionPaletteFromStorage","oldPalette","addColorToSelectionPalette","drawPalette","currentColor","unique","getUniqueSelectionPalette","drawInitial","initial","dragStart","dragStop","setFromTextInput","updateOriginalInput","hideAll","onkeydown","clickout","updateUI","revert","ignoreFormatChange","newHsv","updateHelperLocations","flatColor","realColor","displayColor","realHex","realRgb","realAlpha","gradient","alphaX","slideY","fireCallback","dpWidth","dpHeight","inputHeight","docElem","viewWidth","viewHeight","disable","oldDragX","oldDragY","furtherFromX","setValue","paletteElementClick","ignore","paletteEvent","initialize","spect","optionName","optionValue","enable","coord","dataID","loadOpts","localization","palettes","colorPicker","extra","Drag","gradx","oRoot","minX","maxX","minY","maxY","bSwapHorzRef","bSwapVertRef","fXMapper","fYMapper","onmousedown","hmode","vmode","xMapper","yMapper","onDragStart","onDragEnd","onDrag","current_slider_id","fixE","lastMouseX","clientX","lastMouseY","clientY","minMouseX","maxMouseX","minMouseY","maxMouseY","onmousemove","onmouseup","update_style_array","apply_style","panel","get_style_value","gx","get_rgb_obj","cp","nx","ny","ey","ex","layerX","offsetX","layerY","offsetY","ele","targets","sliders","direction","code_shown","styles","rand_RGB","rand_pos","slider_ids","slider_index","shape","slider_hovered","jQ_present","load_jQ","add_event","evt_func","event_function","attachEvent","get_random_position","get_random_rgb","R","G","B","update_target","v_len","apply_default_styles","container_width","A","style_str","suffix","load_info","set_colorpicker","log","add_slider","k","delta","containment","axis","clr","generate_options","generate_radial_options","generate_linear_options","load_gradx","option_str","$this","center","Gradienter","forms","updateKeyValueArray","updateTypes","elementIndex","valueIndex","getElementType","elementProperty","getPropertyToUpdate","fields","field","deserialize","formElm","normalized","rPlus","decodeURIComponent","normalizeData","elementsByName","getFieldsByName","serializeArray","serializeObject","jquery","parseJSON","triggerHandler","undelegate","live","die","unbind","moveto","uuid","expr","filters","createPseudo","step","opt","_default","dequeue","setOffset","curTop","curLeft","curElem","curOffset","curCSSTop","curCSSLeft","calculatePosition","curPosition","_data","propName","parseHTML","uniqueSort","jQuery","parseArguments","ajaxJSONP","responseData","abortTimeout","_callbackName","jsonpCallback","callbackName","originalCallback","errorType","ajaxSettings","ajax","hasPlaceholder","jsonp","getJSON","originalLoad","addToPrefiltersOrTransports","structure","dataTypeExpression","dataTypes","rnotwhite","ajaxPrefilter","ajaxTransport","ajaxSetup","getScript","Callbacks","memory","firing","firingStart","firingLength","firingIndex","stack","once","fire","stopOnFalse","lock","locked","fireWith","ret2","originThen","expando","core_rnotwhite","core_push","Data","owner","descriptor","unlock","defineProperties","access","stored","camel","hasData","discard","data_priv","startLength","_queueHooks","isArraylike","setter","clearQueue","pluginUuid","JqPlugin","pluginEventPrefix","eventNamespace","defaultElement","classesElementLookup","hoverable","_on","_create","_trigger","_getCreateEventData","_getCreateOptions","_superApply","_classes","full","processClassString","checkOption","isTracked","_untrackClassesElement","_off","_removeClass","_toggleClass","_addClass","suppressDisabledCheck","delegateElement","widget","handlerProxy","guid","orig","widgetEventPrefix","splugins","widgetHasOwnProperty","widgetSlice","base","existingConstructor","fullName","Widget","basePrototype","newPrototype","_proto","widgetName","widgetFullName","_childConstructors","childPrototype","inputIndex","inputLength","_setOptionClasses","_setOptionDisabled","classKey","currentElements","_hoverable","_focusable","defaultEffect","hasOptions","effect","effectName","effects","routers","Route","pathto","paramNames","paramName","substring","_setting","regex","_entering","route","_entered","exit","_exiting","_exited","Router","_curCtx","_prevCtx","_homePath","_routes","router","dispatch","useHistoryApi","history","pushState","useHashbang","newHash","noCache","finded","routes","routeName","baseUrl","homePath","host","initPath","pathname","forceRefresh","_prepared","getConfigData","getNamedValue","controllerSetting","controller","contentPath","perform","RouteController","Page","routeViewer","_rvc","_router","refresh","curCtx","hookers","isHooked","PluginController","Application","_plugins","_page","page","baseURI","getConfig","promises0","promises1","lazy","promises2","entities","emulateHTTP","emulateJSON","backends","wrapError","model","resp","Entity","sync","fetch","entity","serverAttrs","save","stopListening","urlError","Collection","comparator","_reset","setOptions","addOptions","tail","singular","removed","_removeEntitys","added","merged","_isEntity","toAdd","toMerge","toRemove","modelMap","sortable","sortAttr","_prepareEntity","_addReference","orderChanged","_removeReference","previousEntitys","_byId","entityId","where","findWhere","sortBy","callbackOpts","_onEntityEvent","prevId","providers","provides","backend","syncMethod","options2","methodMap","read","ajaxSync","_method","textStatus","errorThrown","S4","LocalStorage","records","include","jsonData","chain","errorMessage","syncDfd","DOMException","localSync","streams","Stream","arrayBuffer","dict","Uint8Array","getByte","getBytes","strEnd","subarray","lookChar","getChar","skip","moveStart","makeSubStream","buffer","isStream","DecodeStream","bufferLength","eof","ensureBuffer","requested","byteLength","buffer2","readBlock","bufEnd","Ascii85Stream","tildaCode","zCode","Lexer","isSpace","hexvalueMap","9","32","48","49","50","51","52","53","54","55","56","57","65","66","67","68","69","70","97","98","99","100","101","102","AsciiHexStream","decodeLength","gtCode","ChunkedStream","numChunks","numChunksLoaded","stream","getMissingChunks","chunks","chunk","loadedChunks","getBaseStreams","allChunksLoaded","onReceiveData","begin","assert","beginChunk","endChunk","onReceiveInitialData","initialDataLength","ensureRange","MissingDataException","nextEmptyChunk","hasChunk","peekBytes","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","DecryptStream","decrypt","FakeStream","codeLenCodeMap","Uint32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","FlateStream","bytesPos","cmf","flg","codeSize","codeBuf","getBits","bits","getCode","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","code2","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","codeLengths","bitsLength","bitsOffset","what","repeatLength","limit","code1","dist","blockLen","LZWStream","earlyChange","cachedData","bitsCached","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","PredictorStream","predictor","readBlockTiff","readBlockPng","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","compArray","bitMask","kk","prevRow","upLeft","pa","pb","pc","StreamsSequenceStream","newLength","StringStream"],"mappings":"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OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,KAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OACA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,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","file":"../skylark-slax-runtime-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var nativeIsArray = Array.isArray, \r\n        toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n \r\n    var  isArray = nativeIsArray || function(obj) {\r\n        return object && object.constructor === Array;\r\n    };\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n       return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\r\n       //return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n   // Is a given value a DOM element?\r\n    function isElement(obj) {\r\n        return !!(obj && obj.nodeType === 1);\r\n    }   \r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(obj) {\r\n        return obj === null;\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        var type = typeof obj;\r\n        return type === 'function' || type === 'object' && !!obj;        \r\n        //return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    // Is a given variable undefined?\r\n    function isUndefined(obj) {\r\n        return obj === void 0;\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isElement,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNaN : function (obj) {\r\n            return isNaN(obj);\r\n        },\r\n\r\n        isNull: isNull,\r\n\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n  var filter = Array.prototype.filter,\r\n      find = Array.prototype.find,\r\n    isArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    function find2(array,func) {\r\n      return find.call(array,func);\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n\r\n        find : find2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // By default, Underscore uses ERB-style template delimiters, change the\r\n    // following template settings to use alternative delimiters.\r\n    var templateSettings = {\r\n        evaluate: /<%([\\s\\S]+?)%>/g,\r\n        interpolate: /<%=([\\s\\S]+?)%>/g,\r\n        escape: /<%-([\\s\\S]+?)%>/g\r\n    };\r\n\r\n    // When customizing `templateSettings`, if you don't want to define an\r\n    // interpolation, evaluation or escaping regex, we need one that is\r\n    // guaranteed not to match.\r\n    var noMatch = /(.)^/;\r\n\r\n\r\n    // Certain characters need to be escaped so that they can be put into a\r\n    // string literal.\r\n    var escapes = {\r\n      \"'\":      \"'\",\r\n      '\\\\':     '\\\\',\r\n      '\\r':     'r',\r\n      '\\n':     'n',\r\n      '\\t':     't',\r\n      '\\u2028': 'u2028',\r\n      '\\u2029': 'u2029'\r\n    };\r\n\r\n    var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\r\n\r\n\r\n    function template(text, data, settings) {\r\n        var render;\r\n        settings = objects.defaults({}, settings,templateSettings);\r\n\r\n        // Combine delimiters into one regular expression via alternation.\r\n        var matcher = RegExp([\r\n          (settings.escape || noMatch).source,\r\n          (settings.interpolate || noMatch).source,\r\n          (settings.evaluate || noMatch).source\r\n        ].join('|') + '|$', 'g');\r\n\r\n        // Compile the template source, escaping string literals appropriately.\r\n        var index = 0;\r\n        var source = \"__p+='\";\r\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n          source += text.slice(index, offset)\r\n              .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\r\n\r\n          if (escape) {\r\n            source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n          }\r\n          if (interpolate) {\r\n            source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n          }\r\n          if (evaluate) {\r\n            source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n          }\r\n          index = offset + match.length;\r\n          return match;\r\n        });\r\n        source += \"';\\n\";\r\n\r\n        // If a variable is not specified, place data values in local scope.\r\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n          \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n          source + 'return __p;\\n';\r\n\r\n        try {\r\n          render = new Function(settings.variable || 'obj', '_', source);\r\n        } catch (e) {\r\n          e.source = source;\r\n          throw e;\r\n        }\r\n\r\n        if (data) {\r\n          return render(data,this)\r\n        }\r\n        var template = proxy(function(data) {\r\n          return render.call(this, data,this);\r\n        },this);\r\n\r\n        // Provide the compiled source as a convenience for precompilation.\r\n        var argument = settings.variable || 'obj';\r\n        template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n        return template;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a function that negates the result of the predicate `func`. The\r\n     * `func` predicate is invoked with the `this` binding and arguments of the\r\n     * created function.\r\n     * @category Function\r\n     * @param {Function} predicate The predicate to negate.\r\n     * @returns {Function} Returns the new negated function.\r\n     * @example\r\n     *\r\n     * function isEven(n) {\r\n     *   return n % 2 == 0\r\n     * }\r\n     *\r\n     * filter([1, 2, 3, 4, 5, 6], negate(isEven))\r\n     * // => [1, 3, 5]\r\n     */\r\n    function negate(predicate) {\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('Expected a function')\r\n      }\r\n      return function(...args) {\r\n        return !predicate.apply(this, args)\r\n      }\r\n    }\r\n\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        bind : proxy,\r\n        \r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        negate: negate,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = makePromise2(new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }));\r\n\r\n        //wrapPromise(p,self);\r\n\r\n        //this[PGLISTENERS] = [];\r\n        //this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n   \r\n    function makePromise2(promise) {\r\n        // Don't modify any promise that has been already modified.\r\n        if (promise.isResolved) return promise;\r\n\r\n        // Set initial state\r\n        var isPending = true;\r\n        var isRejected = false;\r\n        var isResolved = false;\r\n\r\n        // Observe the promise, saving the fulfillment in a closure scope.\r\n        var result = promise.then(\r\n            function(v) {\r\n                isResolved = true;\r\n                isPending = false;\r\n                return v; \r\n            }, \r\n            function(e) {\r\n                isRejected = true;\r\n                isPending = false;\r\n                throw e; \r\n            }\r\n        );\r\n\r\n        result.isResolved = function() { return isResolved; };\r\n        result.isPending = function() { return isPending; };\r\n        result.isRejected = function() { return isRejected; };\r\n\r\n        result.state = function() {\r\n            if (isResolved) {\r\n                return 'resolved';\r\n            }\r\n            if (isRejected) {\r\n                return 'rejected';\r\n            }\r\n            return 'pending';\r\n        };\r\n\r\n        var notified = [],\r\n            listeners = [];\r\n\r\n          \r\n        result.then = function(onResolved,onRejected,onProgress) {\r\n            if (onProgress) {\r\n                this.progress(onProgress);\r\n            }\r\n            return makePromise2(Promise.prototype.then.call(this,\r\n                onResolved && function(args) {\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onResolved.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onResolved(args);\r\n                    }\r\n                },\r\n                onRejected && function(args){\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onRejected.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onRejected(args);\r\n                    }\r\n                }\r\n            ));\r\n        };\r\n\r\n        result.progress = function(handler) {\r\n            notified.forEach(function (value) {\r\n                handler(value);\r\n            });\r\n            listeners.push(handler);\r\n            return this;\r\n        };\r\n\r\n        result.pipe = result.then;\r\n\r\n        result.notify = function(value) {\r\n            try {\r\n                notified.push(value);\r\n\r\n                return listeners.forEach(function (listener) {\r\n                    return listener(value);\r\n                });\r\n            } catch (error) {\r\n            this.reject(error);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n \r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        var p = result(this,\"promise\");\r\n        p.notify(value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isResolved();\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isRejected();\r\n    };\r\n\r\n    Deferred.prototype.state = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.state();\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.always  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.always.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.done.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        p.fail(errback);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return makePromise2(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n\r\n    Deferred.promise = function(callback) {\r\n        var d = new Deferred();\r\n\r\n        callback(d.resolve.bind(d),d.reject.bind(d),d.progress.bind(d));\r\n\r\n        return d.promise;\r\n    };\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-objects\",\r\n    \"./Deferred\"\r\n],function(skylark,objects,Deferred){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        Deferred : Deferred,\r\n\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn skylark.attach(\"langx.async\",async);\t\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\ndefine('skylark-langx-klass/klass',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n],function(skylark,types,objects,arrays){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return skylark.attach(\"langx.klass\",createClass);\r\n});\ndefine('skylark-langx-klass/main',[\r\n\t\"./klass\"\r\n],function(klass){\r\n\treturn klass;\r\n});\ndefine('skylark-langx-klass', ['skylark-langx-klass/main'], function (main) { return main; });\n\ndefine('skylark-langx-emitter/Event',[\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-klass\",\r\n],function(objects,funcs,klass){\r\n    var eventMethods = {\r\n        preventDefault: \"isDefaultPrevented\",\r\n        stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n        stopPropagation: \"isPropagationStopped\"\r\n     };\r\n        \r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            objects.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = funcs.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = funcs.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n\r\n    /*\r\n    var Event = klass({\r\n        _construct : function(type,props) {\r\n            CustomEvent.call(this,type.props);\r\n            objects.safeMixin(this, props);\r\n            compatible(this);\r\n        }\r\n    },CustomEvent);\r\n    */\r\n\r\n    class Event extends CustomEvent {\r\n        constructor(type,props) {\r\n            super(type,props);\r\n            objects.safeMixin(this, props);\r\n            compatible(this);\r\n        } \r\n    }\r\n\r\n\r\n    Event.compatible = compatible;\r\n\r\n    return Event;\r\n    \r\n});\ndefine('skylark-langx-emitter/Emitter',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\",\r\n  \"./Event\"\r\n],function(skylark,types,objects,arrays,klass,Event){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new Event(e); //new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                        return this;\r\n                    }\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n    Emitter.createEvent = function (type,props) {\r\n        //var e = new CustomEvent(type,props);\r\n        //return safeMixin(e, props);\r\n        return new Event(type,props);\r\n    };\r\n\r\n    Emitter.Event = Event;\r\n\r\n    return skylark.attach(\"langx.Emitter\",Emitter);\r\n\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n  \"skylark-langx-ns/ns\",\r\n\t\"./Emitter\"\r\n],function(skylark,Emitter){\r\n\treturn skylark.attach(\"langx.Evented\",Emitter);\r\n});\ndefine('skylark-net-http/http',[\r\n  \"skylark-langx-ns/ns\",\r\n],function(skylark){\r\n\treturn skylark.attach(\"net.http\",{});\r\n});\ndefine('skylark-net-http/Xhr',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-async/Deferred\",\r\n  \"skylark-langx-emitter/Evented\",\r\n  \"./http\"\r\n],function(skylark,types,objects,arrays,funcs,Deferred,Evented,http){\r\n\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: false,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            traditional : false,\r\n            \r\n            xhrFields : {\r\n                withCredentials : false\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                if (type(options.data) != \"string\") {\r\n                    options.data = param(options.data, options.traditional);\r\n                }\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n        \r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) {\r\n                  value = value();\r\n                }\r\n                if (value == null) {\r\n                  value = \"\";\r\n                }\r\n                this.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n            };\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                if (options.beforeSend) {\r\n                    options.beforeSend.call(this, xhr, options);\r\n                }                \r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = options.contentType || (isFormData ? false : 'application/x-www-form-urlencoded');\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = value;\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn http.Xhr = Xhr;\t\r\n});\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\ndefine('skylark-langx/klass',[\r\n    \"skylark-langx-klass\"\r\n],function(klass){\r\n    return klass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx-aspect/aspect',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return skylark.attach(\"langx.aspect\",{\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    });\r\n});\ndefine('skylark-langx-aspect/main',[\r\n\t\"./aspect\"\r\n],function(aspect){\r\n\treturn aspect;\r\n});\ndefine('skylark-langx-aspect', ['skylark-langx-aspect/main'], function (main) { return main; });\n\ndefine('skylark-langx/aspect',[\r\n    \"skylark-langx-aspect\"\r\n],function(aspect){\r\n  return aspect;\r\n});\ndefine('skylark-langx/async',[\r\n    \"skylark-langx-async\"\r\n],function(async){\r\n    return async;\r\n});\ndefine('skylark-langx-datetimes/datetimes',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn skylark.attach(\"langx.datetimes\",{\r\n\t\tparseMilliSeconds\r\n\t});\r\n});\ndefine('skylark-langx-datetimes/main',[\r\n\t\"./datetimes\"\r\n],function(datetimes){\r\n\treturn datetimes;\r\n});\ndefine('skylark-langx-datetimes', ['skylark-langx-datetimes/main'], function (main) { return main; });\n\ndefine('skylark-langx/datetimes',[\r\n    \"skylark-langx-datetimes\"\r\n],function(datetimes){\r\n    return datetimes;\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Emitter\",\r\n\t\"./Evented\"\r\n],function(Emitter){\r\n\treturn Emitter;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\ndefine('skylark-langx/Emitter',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"skylark-langx-funcs\"\r\n],function(funcs){\r\n    return funcs;\r\n});\ndefine('skylark-langx/hoster',[\r\n\t\"skylark-langx-hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"skylark-langx-numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx/objects',[\r\n    \"skylark-langx-objects\"\r\n],function(objects){\r\n    return objects;\r\n});\ndefine('skylark-langx-strings/strings',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/g, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        //str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        str = str.replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn skylark.attach(\"langx.strings\",{\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        //template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t}) ; \r\n\r\n});\ndefine('skylark-langx-strings/base64',[\r\n\t\"./strings\"\r\n],function(strings) {\r\n\r\n\t// private property\r\n\tconst _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n\t// private method for UTF-8 encoding\r\n\tfunction _utf8_encode(string) {\r\n\t\tstring = string.replace(/\\r\\n/g,\"\\n\");\r\n\t\tvar utftext = \"\";\r\n\r\n\t\tfor (var n = 0; n < string.length; n++) {\r\n\r\n\t\t\tvar c = string.charCodeAt(n);\r\n\r\n\t\t\tif (c < 128) {\r\n\t\t\t\tutftext += String.fromCharCode(c);\r\n\t\t\t}\r\n\t\t\telse if((c > 127) && (c < 2048)) {\r\n\t\t\t\tutftext += String.fromCharCode((c >> 6) | 192);\r\n\t\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tutftext += String.fromCharCode((c >> 12) | 224);\r\n\t\t\t\tutftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n\t\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn utftext;\r\n\t}\r\n\r\n\t// private method for UTF-8 decoding\r\n\tfunction _utf8_decode(utftext) {\r\n\t\tvar string = \"\";\r\n\t\tvar i = 0;\r\n\t\tvar c = c1 = c2 = 0;\r\n\r\n\t\twhile ( i < utftext.length ) {\r\n\r\n\t\t\tc = utftext.charCodeAt(i);\r\n\r\n\t\t\tif (c < 128) {\r\n\t\t\t\tstring += String.fromCharCode(c);\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\telse if((c > 191) && (c < 224)) {\r\n\t\t\t\tc2 = utftext.charCodeAt(i+1);\r\n\t\t\t\tstring += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n\t\t\t\ti += 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tc2 = utftext.charCodeAt(i+1);\r\n\t\t\t\tc3 = utftext.charCodeAt(i+2);\r\n\t\t\t\tstring += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n\t\t\t\ti += 3;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn string;\r\n\t}\r\n\r\n\t// public method for encoding\r\n\tfunction encode(input, binary) {\r\n\t\tbinary = (binary != null) ? binary : false;\r\n\t\tvar output = \"\";\r\n\t\tvar chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n\r\n\t\tif (!binary)\r\n\t\t{\r\n\t\t\tinput = _utf8_encode(input);\r\n\t\t}\r\n\r\n\t\twhile (i < input.length) {\r\n\r\n\t\t\tchr1 = input.charCodeAt(i++);\r\n\t\t\tchr2 = input.charCodeAt(i++);\r\n\t\t\tchr3 = input.charCodeAt(i++);\r\n\r\n\t\t\tenc1 = chr1 >> 2;\r\n\t\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n\t\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n\t\t\tenc4 = chr3 & 63;\r\n\r\n\t\t\tif (isNaN(chr2)) {\r\n\t\t\t\tenc3 = enc4 = 64;\r\n\t\t\t} else if (isNaN(chr3)) {\r\n\t\t\t\tenc4 = 64;\r\n\t\t\t}\r\n\r\n\t\t\toutput = output +\r\n\t\t\tthis._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\r\n\t\t\tthis._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t// public method for decoding\r\n\tfunction decode(input, binary) {\r\n\t\tbinary = (binary != null) ? binary : false;\r\n\t\tvar output = \"\";\r\n\t\tvar chr1, chr2, chr3;\r\n\t\tvar enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n\r\n\t\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\r\n\t\twhile (i < input.length) {\r\n\r\n\t\t\tenc1 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc2 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc3 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc4 = this._keyStr.indexOf(input.charAt(i++));\r\n\r\n\t\t\tchr1 = (enc1 << 2) | (enc2 >> 4);\r\n\t\t\tchr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n\t\t\tchr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n\t\t\toutput = output + String.fromCharCode(chr1);\r\n\r\n\t\t\tif (enc3 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr2);\r\n\t\t\t}\r\n\t\t\tif (enc4 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr3);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (!binary) {\r\n\t\t\toutput = _utf8_decode(output);\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n\r\n\treturn strings.base64 = {\r\n\t\tdecode,\r\n\t\tencode\r\n\t};\r\n\t\r\n});\ndefine('skylark-langx-strings/main',[\r\n\t\"./strings\",\r\n\t\"./base64\"\r\n],function(strings){\r\n\treturn strings;\r\n});\ndefine('skylark-langx-strings', ['skylark-langx-strings/main'], function (main) { return main; });\n\ndefine('skylark-langx/strings',[\r\n    \"skylark-langx-strings\"\r\n],function(strings){\r\n    return strings;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx-topic/topic',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-emitter/Evented\"\r\n],function(skylark,Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn skylark.attach(\"langx.topic\",{\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t});\r\n});\ndefine('skylark-langx-topic/main',[\r\n\t\"./topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx-topic', ['skylark-langx-topic/main'], function (main) { return main; });\n\ndefine('skylark-langx/topic',[\r\n\t\"skylark-langx-topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Emitter\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Emitter,Evented,funcs,hoster,klass,numbers,objects,Stateful,strings,topic,types) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : Emitter.createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Emitter: Emitter,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n       \r\n        Stateful: Stateful,\r\n\r\n        topic : topic\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\nfunction removeSelfClosingTags(xml) {\r\n    var split = xml.split(\"/>\");\r\n    var newXml = \"\";\r\n    for (var i = 0; i < split.length - 1;i++) {\r\n        var edsplit = split[i].split(\"<\");\r\n        newXml += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\r\n    }\r\n    return newXml + split[split.length-1];\r\n}\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = removeSelfClosingTags(\"\" + html);\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n    function isActive (elem) {\r\n            return elem === document.activeElement && (elem.type || elem.href);\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    function selectable(elem, selectable) {\r\n        if (elem === undefined || elem.style === undefined)\r\n            return;\r\n        elem.onselectstart = selectable ? function () {\r\n            return false;\r\n        } : function () {\r\n        };\r\n        elem.style.MozUserSelect = selectable ? 'auto' : 'none';\r\n        elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\r\n        elem.unselectable = selectable ? 'on' : 'off';\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        after: after,\r\n\r\n        append: append,\r\n\r\n        before: before,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        contains: contains,\r\n\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n     \r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isActive,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        prepend: prepend,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        selectable,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        },\r\n        'empty': function(elm) {\r\n            return !elm.hasChildNodes();\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!selector || matches(node, selector)) {\r\n              ret.push(node); \r\n            }\r\n        }\r\n\r\n        //if (selector) {\r\n        //    ret = local.filter(ret, selector);\r\n        //}\r\n        return ret;\r\n    }\r\n\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return elm.getAttribute ? elm.getAttribute(name) : elm[name];\r\n            }\r\n        } else {\r\n            elm.setAttribute ? elm.setAttribute(name, value) : elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_node_operation(func, context, oldValueFunc) {\r\n        return function(html) {\r\n            var argType, nodes = langx.map(arguments, function(arg) {\r\n                argType = type(arg)\r\n                return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                    arg : noder.createFragment(arg)\r\n            });\r\n            if (nodes.length < 1) {\r\n                return this\r\n            }\r\n            this.each(function(idx) {\r\n                func.apply(context, [this, nodes, idx > 0]);\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                } else {\r\n                    return [];\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //} else {\r\n                //    return [];\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, newArg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this;\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem,name,newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                $.ready(function() {\r\n                    selector($);\r\n                });\r\n                return rootQuery;\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        },rootQuery = $(document);\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            html: wrapper_value(noder.html, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(html) {\r\n                /*\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n                */\r\n                var htmlIsFunction = typeof html === \"function\";\r\n\r\n                return this.each( function( i ) {\r\n                    $( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\r\n                } );                \r\n            },\r\n\r\n            wrapAll: function(html) {\r\n                /*\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n                */\r\n                var wrap;\r\n\r\n                if ( this[ 0 ] ) {\r\n                    if ( typeof html === \"function\" ) {\r\n                        html = html.call( this[ 0 ] );\r\n                    }\r\n\r\n                    // The elements to wrap the target around\r\n                    wrap = $( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n                    if ( this[ 0 ].parentNode ) {\r\n                        wrap.insertBefore( this[ 0 ] );\r\n                    }\r\n\r\n                    wrap.map( function() {\r\n                        var elem = this;\r\n\r\n                        while ( elem.firstElementChild ) {\r\n                            elem = elem.firstElementChild;\r\n                        }\r\n\r\n                        return elem;\r\n                    } ).append( this );\r\n                }\r\n\r\n                return this;\r\n\r\n            },\r\n\r\n            wrapInner: function(html) {\r\n                /*\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n                */\r\n                if ( typeof html === \"function\" ) {\r\n                    return this.each( function( i ) {\r\n                        $( this ).wrapInner( html.call( this, i ) );\r\n                    } );\r\n                }\r\n\r\n                return this.each( function() {\r\n                    var self = $( this ),\r\n                        contents = self.contents();\r\n\r\n                    if ( contents.length ) {\r\n                        contents.wrapAll( html );\r\n\r\n                    } else {\r\n                        self.append( html );\r\n                    }\r\n                } );\r\n\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                /*\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n                */\r\n                this.parent(selector).not(\"body\").each( function() {\r\n                    $(this).replaceWith(this.childNodes);\r\n                });\r\n                return this;\r\n\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            }\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-domx-velm/velm',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, finder, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n\r\n    return skylark.attach(\"domx.velm\", velm);\r\n});\ndefine('skylark-domx-velm/main',[\r\n\t\"./velm\"\r\n],function(velm){\r\n\treturn velm;\r\n});\ndefine('skylark-domx-velm', ['skylark-domx-velm/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/main',[\r\n    \"./data\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"    \r\n],function(data,velm,$){\r\n    // from ./data\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], data);\r\n\r\n    $.fn.text = $.wraps.wrapper_value(data.text, data, data.text);\r\n\r\n    $.fn.attr = $.wraps.wrapper_name_value(data.attr, data, data.attr);\r\n\r\n    $.fn.removeAttr = $.wraps.wrapper_every_act(data.removeAttr, data);\r\n\r\n    $.fn.prop = $.wraps.wrapper_name_value(data.prop, data, data.prop);\r\n\r\n    $.fn.removeProp = $.wraps.wrapper_every_act(data.removeProp, data);\r\n\r\n    $.fn.data = $.wraps.wrapper_name_value(data.data, data);\r\n\r\n    $.fn.removeData = $.wraps.wrapper_every_act(data.removeData);\r\n\r\n    $.fn.val = $.wraps.wrapper_value(data.val, data, data.val);\r\n\r\n\r\n    return data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n\r\n    var NativeEventCtors = [\r\n            window[\"CustomEvent\"], // 0 default\r\n            window[\"CompositionEvent\"], // 1\r\n            window[\"DragEvent\"], // 2\r\n            window[\"Event\"], // 3\r\n            window[\"FocusEvent\"], // 4\r\n            window[\"KeyboardEvent\"], // 5\r\n            window[\"MessageEvent\"], // 6\r\n            window[\"MouseEvent\"], // 7\r\n            window[\"MouseScrollEvent\"], // 8\r\n            window[\"MouseWheelEvent\"], // 9\r\n            window[\"MutationEvent\"], // 10\r\n            window[\"ProgressEvent\"], // 11\r\n            window[\"TextEvent\"], // 12\r\n            window[\"TouchEvent\"], // 13\r\n            window[\"UIEvent\"], // 14\r\n            window[\"WheelEvent\"], // 15\r\n            window[\"ClipboardEvent\"] // 16\r\n        ],\r\n        NativeEvents = {\r\n            \"compositionstart\": 1, // CompositionEvent\r\n            \"compositionend\": 1, // CompositionEvent\r\n            \"compositionupdate\": 1, // CompositionEvent\r\n\r\n            \"beforecopy\": 16, // ClipboardEvent\r\n            \"beforecut\": 16, // ClipboardEvent\r\n            \"beforepaste\": 16, // ClipboardEvent\r\n            \"copy\": 16, // ClipboardEvent\r\n            \"cut\": 16, // ClipboardEvent\r\n            \"paste\": 16, // ClipboardEvent\r\n\r\n            \"drag\": 2, // DragEvent\r\n            \"dragend\": 2, // DragEvent\r\n            \"dragenter\": 2, // DragEvent\r\n            \"dragexit\": 2, // DragEvent\r\n            \"dragleave\": 2, // DragEvent\r\n            \"dragover\": 2, // DragEvent\r\n            \"dragstart\": 2, // DragEvent\r\n            \"drop\": 2, // DragEvent\r\n\r\n            \"abort\": 3, // Event\r\n            \"change\": 3, // Event\r\n            \"error\": 3, // Event\r\n            \"selectionchange\": 3, // Event\r\n            \"submit\": 3, // Event\r\n            \"reset\": 3, // Event\r\n\r\n            \"focus\": 4, // FocusEvent\r\n            \"blur\": 4, // FocusEvent\r\n            \"focusin\": 4, // FocusEvent\r\n            \"focusout\": 4, // FocusEvent\r\n\r\n            \"keydown\": 5, // KeyboardEvent\r\n            \"keypress\": 5, // KeyboardEvent\r\n            \"keyup\": 5, // KeyboardEvent\r\n\r\n            \"message\": 6, // MessageEvent\r\n\r\n            \"click\": 7, // MouseEvent\r\n            \"contextmenu\": 7, // MouseEvent\r\n            \"dblclick\": 7, // MouseEvent\r\n            \"mousedown\": 7, // MouseEvent\r\n            \"mouseup\": 7, // MouseEvent\r\n            \"mousemove\": 7, // MouseEvent\r\n            \"mouseover\": 7, // MouseEvent\r\n            \"mouseout\": 7, // MouseEvent\r\n            \"mouseenter\": 7, // MouseEvent\r\n            \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n            \"textInput\": 12, // TextEvent\r\n\r\n            \"touchstart\": 13, // TouchEvent\r\n            \"touchmove\": 13, // TouchEvent\r\n            \"touchend\": 13, // TouchEvent\r\n\r\n            \"load\": 14, // UIEvent\r\n            \"resize\": 14, // UIEvent\r\n            \"select\": 14, // UIEvent\r\n            \"scroll\": 14, // UIEvent\r\n            \"unload\": 14, // UIEvent,\r\n\r\n            \"wheel\": 15 // WheelEvent\r\n        };\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return NativeEventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        NativeEvents : NativeEvents,\r\n        \r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    each(NativeEvents,function(name){\r\n        eventer[name] = function(elm,selector,data,callback) {\r\n            if (arguments.length>1) {\r\n                return this.on(elm,name,selector,data,callback);\r\n            } else {\r\n                if (name == \"focus\") {\r\n                    if (elm.focus) {\r\n                        elm.focus();\r\n                    }\r\n                } else if (name == \"blur\") {\r\n                    if (elm.blur) {\r\n                        elm.blur();\r\n                    }\r\n                } else if (name == \"click\") {\r\n                    if (elm.click) {\r\n                        elm.click();\r\n                    }\r\n                } else {\r\n                    this.trigger(elm,name);\r\n                }\r\n\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,eventer,velm,$){\r\n\r\n    var delegateMethodNames = [\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"trigger\"\r\n    ];\r\n\r\n    langx.each(eventer.NativeEvents,function(name){\r\n        delegateMethodNames.push(name);\r\n    });\r\n\r\n    // from ./eventer\r\n    velm.delegate(delegateMethodNames, eventer);\r\n\r\n    langx.each(delegateMethodNames,function(i,name){\r\n        $.fn[name] = $.wraps.wrapper_every_act(eventer[name],eventer);\r\n    });\r\n\r\n\r\n    /*\r\n    $.fn.on = $.wraps.wrapper_every_act(eventer.on, eventer);\r\n\r\n    $.fn.off = $.wraps.wrapper_every_act(eventer.off, eventer);\r\n\r\n    $.fn.trigger = $.wraps.wrapper_every_act(eventer.trigger, eventer);\r\n\r\n    ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n        'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n        'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n        $.fn[event] = $.wraps.wrapper_every_act(eventer[event],eventer);\r\n    });\r\n\r\n    $.fn.one = function(event, selector, data, callback) {\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = null;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = null;\r\n        }\r\n\r\n        return this.on(event, selector, data, callback, 1)\r\n    }; \r\n    */\r\n\r\n    $.ready = eventer.ready;\r\n\r\n    return eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-slax-runtime/slax',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-objects\",\r\n\t\"skylark-langx-hoster\",\r\n\t\"skylark-langx-async\",\r\n\t\"skylark-net-http/Xhr\",\r\n\t\"skylark-domx-eventer\"\r\n],function(skylark, objects, hoster, async, Xhr, eventer){\r\n\r\n    var _config = {\r\n\r\n\r\n    },\r\n    _rootUrl = \"\",  //The root url of slax system\r\n    _baseUrl = \"\";  //the base url of slax app\r\n\r\n\r\n\r\n    var slax = {\r\n        prepare : function(config) {\r\n            var p,slaxRoot,slaxApp;\r\n            if (!config) {\r\n                config = hoster.global.slaxConfig;\r\n            }\r\n            if (!config) {\r\n                var scripts = document.getElementsByTagName(\"script\"),\r\n                    i = 0,\r\n                    script, slaxDir, src, match;\r\n                while(i < scripts.length){\r\n                    script = scripts[i++];\r\n                    if((src = script.getAttribute(\"src\")) && (match = src.match(/(((.*)\\/)|^)skylark-slax-runtime([0-9A-Za-z\\-]*)\\.js(\\W|$)/i))){\r\n                        // sniff slaxDir and baseUrl\r\n                        slaxDir = match[3] || \"\";\r\n\r\n                        // sniff configuration on attribute in script element\r\n                        if(src = script.getAttribute(\"data-slax-config\") ){\r\n                            config = eval(\"({ \" + src + \" })\");\r\n                        } else {\r\n                            slaxRoot = script.getAttribute(\"data-slax-root\");\r\n                            if (slaxRoot == undefined) {\r\n                                slaxRoot = slaxDir;\r\n                            }\r\n                            slaxApp = script.getAttribute(\"data-slax-app\");\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (config) {\r\n                objects.mixin(_config,config);\r\n                p = async.Deferred.resolve()\r\n            } else {\r\n                var d = new async.Deferred(),\r\n                    p = d.promise;\r\n                Xhr.get(slaxRoot + \"/slax-config.json\").then(function(config){\r\n                    if (slaxApp) {\r\n                        var slaxAppPath;\r\n                        for (var i=0; i<config.apps.length;i++) {\r\n                            if (config.apps[i].name == slaxApp) {\r\n                                slaxAppPath = slaxRoot + config.apps[i].dir;\r\n                            } \r\n                        }\r\n                        Xhr.get(slaxAppPath+\"/spa.json\").then(function(config){\r\n                            objects.mixin(_config,config);\r\n                            d.resolve();\r\n                        });\r\n                    } else {\r\n                        objects.mixin(_config,config);\r\n                        d.resolve();\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            return p;\r\n        },\r\n\r\n        start : function() {\r\n            var cfg = _config;\r\n\r\n            //if (cfg.contextPath) {\r\n            //  _cfg.baseUrl = cfg.contextPath;\r\n            //}\r\n\r\n             require.config(cfg.runtime);\r\n\r\n           \r\n            var initApp = function(spa, _cfg) {\r\n                _cfg = _cfg || cfg;\r\n  \r\n                var app = spa(_cfg);\r\n\r\n                hoster.global.go =  function(path, force) {\r\n                    app.go(path, force);\r\n                };\r\n\r\n                app.prepare().then(function(){\r\n                    app.run();\r\n                });\r\n            };\r\n            if(cfg.spaModule) {\r\n                require([cfg.spaModule], function(spa) {\r\n                    if(spa._start) {\r\n                        spa._start().then(function(_cfg){\r\n                            initApp(spa, _cfg);\r\n                        });\r\n                    } else {\r\n                        initApp(spa);\r\n                    }\r\n                });\r\n            } else {\r\n                initApp(skylark.spa);\r\n            }\r\n        }\r\n    };\r\n\r\n    define(\"slax\",[],function(){\r\n        return slax;\r\n    });\r\n\r\n    return skylark.attach(\"slax\",slax);\r\n\r\n});\ndefine('skylark-storages-cache/cache',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"storages.cache\",{});\r\n});\ndefine('skylark-storages-cache/cookie',[\r\n    \"skylark-langx/langx\",\r\n    \"./cache\"\r\n], function(langx,cache) {\r\n    function cookie() {\r\n        return cookie;\r\n    }\r\n\r\n    langx.mixin(cookie, {\r\n\t\tget : function(name) {\r\n\t\t    if (!sKey || !this.has(name)) { return null; }\r\n\t\t\t\treturn unescape(document.cookie.replace(new RegExp(\"(?:^|.*;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"),\"$1\"));\r\n\r\n\t\t},\r\n\r\n\t\thas : function(name) {\r\n\t\t\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(name).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\r\n\t\t},\r\n\r\n\r\n\t\tlist : function() {\r\n\t\t    var values = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\r\n\t\t    for (var i = 0; i < values.length; i++) { \r\n\t\t    \tvalues[i] = unescape(values[i]); \r\n\t\t    }\r\n\t\t    return values;\r\n\t\t},\r\n\r\n\t\tremove : function(name,path) {\r\n\t\t    if (!name || !this.has(name)) { \r\n\t\t    \treturn; \r\n\t\t   \t}\r\n\t\t    document.cookie = escape(name) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (path ? \"; path=\" + path : \"\");\r\n\t\t},\r\n\r\n\t\tset: function (name, value, expires, path, domain, secure) {\r\n\t\t    if (!name || /^(?:expires|max\\-age|path|domain|secure)$/i.test(name)) { return; }\r\n\r\n\t\t\tvar type = langx.type(expires);\r\n\t\t\tif (type === 'number') {\r\n\t\t\t\tvar date = Date.now();\r\n\t\t\t\tdate.setTime(date.getTime() + (expire * 24 * 60 * 60 * 1000));\r\n\t\t\t\texpires = date;\r\n\t\t\t} else if (type === 'string') {\r\n\t\t\t\texpires = new Date(Date.now() + langx.parseMilliSeconds(expires));\r\n\t\t\t}\r\n\r\n\t\t    document.cookie = escape(name) + \"=\" + escape(value) + (expires? \"; domain=\" + expires.toGMTString()  : \"\") + (domain ? \"; domain=\" + domain : \"\") + (path ? \"; path=\" + path : \"\") + (secure ? \"; secure\" : \"\");\r\n\t\t  }\t\r\n    });\r\n\r\n\r\n    return cache.cookie = cookie;\r\n\r\n});\r\n\r\n\ndefine('skylark-storages-cache/LocalFileSystem',[\r\n    \"skylark-langx/langx\",\r\n    \"./cache\"\r\n], function(langx,cache) {\r\n\tvar Deferred = langx.Deferred,\r\n\t\trequestFileSystem =  window.requestFileSystem || window.webkitRequestFileSystem,\r\n\t\tresolveLocalFileSystemURL = window.resolveLocalFileSystemURL || window.webkitResolveLocalFileSystemURL,\r\n     \tBlobBuilder = window.MozBlobBuilder || window.WebKitBlobBuilder || window.BlobBuilder;\r\n\r\n\r\n\tfunction errorHandler(e) {\r\n\t  var msg = '';\r\n\r\n\t  switch (e.code) {\r\n\t    case FileError.QUOTA_EXCEEDED_ERR:\r\n\t      msg = 'QUOTA_EXCEEDED_ERR';\r\n\t      break;\r\n\t    case FileError.NOT_FOUND_ERR:\r\n\t      msg = 'NOT_FOUND_ERR';\r\n\t      break;\r\n\t    case FileError.SECURITY_ERR:\r\n\t      msg = 'SECURITY_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_MODIFICATION_ERR:\r\n\t      msg = 'INVALID_MODIFICATION_ERR';\r\n\t      break;\r\n\t    case FileError.INVALID_STATE_ERR:\r\n\t      msg = 'INVALID_STATE_ERR';\r\n\t      break;\r\n\t    default:\r\n\t      msg = 'Unknown Error';\r\n\t      break;\r\n\t  };\r\n\r\n\t  return msg;\r\n\t}\r\n\t\r\n\tvar LocalFileSystem = langx.Evented.inherit({\r\n\t\t_fs : null,\r\n\t\t_isPersisted : true,\r\n\t\t_cwd : null,\r\n\r\n\t\tinit:\tfunction (fs) {\r\n\t\t\tthis._fs = fs;\r\n\t\t\tthis._cwd = fs.root;\r\n\t\t},\r\n\t\t\t\r\n\r\n\t\treadfileAsArrayBuffer :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsArrayBuffer(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsDataURL :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsDataURL(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treadfileAsText :  function (path,callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.file(function (file) {\r\n\t\t        var reader = new FileReader();\r\n\t\t        reader.onloadend = function () {\r\n\t\t          callback(null, this.result);\r\n\t\t        };\r\n\t\t        reader.readAsText(file);\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\twritefile : function (path, contents, callback,errback) {\r\n\t\t    var self = this,\r\n\t\t    \tfolders = path.split('/');\r\n\t\t    folders = folders.slice(0, folders.length - 1);\r\n\r\n\t\t    this.mkdir(folders.join('/'),function(){\r\n\t\t\t    self._cwd.getFile(path, {create: true}, function (fileEntry) {\r\n\t\t\t      fileEntry.createWriter(function (fileWriter) {\r\n\t\t\t        var truncated = false;\r\n\t\t\t        fileWriter.onwriteend = function () {\r\n\t\t\t          if (!truncated) {\r\n\t\t\t            truncated = true;\r\n\t\t\t            this.truncate(this.position);\r\n\t\t\t            return;\r\n\t\t\t          }\r\n\t\t\t          callback && callback();\r\n\t\t\t        };\r\n\t\t\t        fileWriter.onerror = errback;\r\n\t\t\t        // TODO: find a way to write as binary too\r\n\t\t\t        var blob = contents;\r\n\t\t\t        if (!blob instanceof Blob) {\r\n\t\t\t        \tblob = new Blob([contents], {type: 'text/plain'});\r\n\t\t\t        } \r\n\t\t\t        fileWriter.write(blob);\r\n\t\t\t      }, errback);\r\n\t\t\t    }, errback);\r\n\r\n\t\t    });\r\n\t\t},\r\n\r\n\t\trmfile : function (path, callback,errback) {\r\n\t\t    this._cwd.getFile(path, {}, function (fileEntry) {\r\n\t\t      fileEntry.remove(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\treaddir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      var dirReader = dirEntry.createReader();\r\n\t\t      var entries = [];\r\n\t\t      readEntries();\r\n\t\t      function readEntries() {\r\n\t\t        dirReader.readEntries(function (results) {\r\n\t\t          if (!results.length) {\r\n\t\t            callback(null, entries);\r\n\t\t          }\r\n\t\t          else {\r\n\t\t            entries = entries.concat(\r\n\t\t            \tArray.prototype.slice.call(results).map(\r\n\t\t            \t\tfunction (entry) {\r\n\t\t              \t\t\treturn entry.name + (entry.isDirectory ? \"/\" : \"\");\r\n\t\t            \t\t}\r\n\t\t            \t)\r\n\t\t            );\r\n\t\t            readEntries();\r\n\t\t          }\r\n\t\t        }, errback);\r\n\t\t      }\r\n\t\t    }, errback);\r\n\t\t},\r\n\r\n\t\tmkdir : function (path, callback,errback) {\r\n\t\t    var folderParts = path.split('/');\r\n\r\n\t\t    var createDir = function(rootDir, folders) {\r\n\t\t      // Throw out './' or '/' and move on. Prevents: '/foo/.//bar'.\r\n\t\t      if (folders[0] == '.' || folders[0] == '') {\r\n\t\t        folders = folders.slice(1);\r\n\t\t      }\r\n\r\n\t\t      if (folders.length ==0) {\r\n\t\t      \tcallback(rootDir);\r\n\t\t      \treturn;\r\n\t\t      }\r\n\t\t      rootDir.getDirectory(folders[0], {create: true, exclusive: false},\r\n\t\t        function (dirEntry) {\r\n\t\t          if (dirEntry.isDirectory) { // TODO: check shouldn't be necessary.\r\n\t\t            // Recursively add the new subfolder if we have more to create and\r\n\t\t            // There was more than one folder to create.\r\n\t\t            if (folders.length && folderParts.length != 1) {\r\n\t\t              createDir(dirEntry, folders.slice(1));\r\n\t\t            } else {\r\n\t\t              // Return the last directory that was created.\r\n\t\t              if (callback) callback(dirEntry);\r\n\t\t            }\r\n\t\t          } else {\r\n\t\t            var e = new Error(path + ' is not a directory');\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t          }\r\n\t\t        },\r\n\t\t        function(e) {\r\n\t\t            if (errback) {\r\n\t\t              errback(e);\r\n\t\t            } else {\r\n\t\t              throw e;\r\n\t\t            }\r\n\t\t        }\r\n\t\t      );\r\n\t\t    };\r\n\r\n\t\t    createDir(this._cwd, folderParts);\r\n\r\n\t\t},\r\n\r\n\t\trmdir : function (path, callback,errback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      dirEntry.removeRecursively(function () {\r\n\t\t        callback();\r\n\t\t      }, errback);\r\n\t\t    }, errback);\r\n\t\t  },\r\n\r\n\t\tcopy : function (src, dest, callback) {\r\n\t\t    // TODO: make sure works for cases where dest includes and excludes file name.\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.copyTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tmove : function(src, dest, callback) {\r\n\t\t    // TODO: handle more cases like file renames and moving/renaming directories\r\n\t\t    this._cwd.getFile(src, {}, function(fileEntry) {\r\n\t\t      cwd.getDirectory(dest, {}, function(dirEntry) {\r\n\t\t        fileEntry.moveTo(dirEntry, function () {\r\n\t\t          callback();\r\n\t\t        }, callback);\r\n\t\t      }, callback);\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\tchdir : function (path, callback) {\r\n\t\t    this._cwd.getDirectory(path, {}, function (dirEntry) {\r\n\t\t      cwd = dirEntry;\r\n\t\t      if (fs.onchdir) {\r\n\t\t        fs.onchdir(cwd.fullPath);\r\n\t\t      }\r\n\t\t      callback();\r\n\t\t    }, callback);\r\n\t\t},\r\n\r\n\t\timportFromHost : function(files) {\r\n\t\t    // Duplicate each file the user selected to the app's fs.\r\n\t\t    var deferred = new Deferred();\r\n\t\t    for (var i = 0, file; file = files[i]; ++i) {\r\n\t\t        (function(f) {\r\n\t\t\t        cwd.getFile(file.name, {create: true, exclusive: true}, function(fileEntry) {\r\n\t\t\t          fileEntry.createWriter(function(fileWriter) {\r\n\t\t\t            fileWriter.write(f); // Note: write() can take a File or Blob object.\r\n\t\t\t          }, errorHandler);\r\n\t\t\t        }, errorHandler);\r\n\t\t     \t})(file);\r\n \t   \t \t}\r\n  \t\t    return deferred.promise;\r\n\t\t  },\r\n\r\n\t\t  exportToHost : function() {\r\n\r\n\t\t  }\r\n\t\r\n\t});\r\n\t\r\n\r\n\r\n    function localfs() {\r\n        return localfs;\r\n    }\r\n\r\n    langx.mixin(LocalFileSystem, {\r\n        isSupported : function() {\r\n            return !!requestFileSystem;\r\n        },\r\n        request : function(size,isPersisted){\r\n        \tsize = size || 1024 * 1024 * 10;\r\n        \tvar typ = isPersisted ? PERSISTENT : TEMPORARY,\r\n        \t\td = new Deferred();\r\n            requestFileSystem(typ, size, function(_fs) {\r\n                var fs = new LocalFileSystem(_fs,!!isPersisted);\r\n                d.resolve(fs);\r\n            }, function(e) {\r\n            \td.reject(e);\r\n            });\r\n\r\n            return d.promise;\r\n        }\r\n    });\r\n    \r\n    cache.requestLocalFileSystem = LocalFileSystem.request;\r\n\r\n\treturn cache.LocalFileSystem = LocalFileSystem;\r\n});\ndefine('skylark-storages-cache/localStorage',[\r\n    \"skylark-langx/langx\",\r\n    \"./cache\"\r\n], function(langx,cache) {\r\n\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"localStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function localStorage() {\r\n        return localStorage;\r\n    }\r\n\r\n    langx.mixin(localStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        list : function() {\r\n            var vaules = {}\r\n            for (var i=0; i<storage.length; i++) {\r\n                vaules[key] = storage.key(i)\r\n            }\r\n\r\n            return values;\r\n        }\r\n    });\r\n\r\n    return  cache.localStorage = localStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-storages-cache/sessionStorage',[\r\n    \"skylark-langx/langx\",\r\n    \"./cache\"\r\n], function(langx,cache) {\r\n\r\n    var storage  = null;\r\n\r\n    try {\r\n        storage = window[\"sessiionStorage\"];\r\n    } catch (e){\r\n\r\n    }\r\n\r\n    function sessiionStorage() {\r\n        return sessiionStorage;\r\n    }\r\n\r\n    langx.mixin(sessiionStorage, {\r\n        isSupported : function() {\r\n            return !!storage;\r\n        },\r\n\r\n        set : function(key, val) {\r\n            if (val === undefined) { \r\n                return this.remove(key) \r\n            }\r\n            storage.setItem(key, langx.serializeValue(val));\r\n            return val\r\n        },\r\n\r\n        get : function(key, defaultVal) {\r\n            var val = langx.deserializeValue(storage.getItem(key))\r\n            return (val === undefined ? defaultVal : val)\r\n        },\r\n\r\n        remove : function(key) { \r\n            storage.removeItem(key) \r\n        },\r\n\r\n        clear : function() { \r\n            storage.clear() \r\n        },\r\n\r\n        list : function() {\r\n            var vaules = {}\r\n            for (var i=0; i<storage.length; i++) {\r\n                vaules[key] = storage.key(i)\r\n            }\r\n\r\n            return values;\r\n        }\r\n    });\r\n\r\n    return  cache.sessionStorage = sessionStorage;\r\n\r\n});\r\n\r\n\ndefine('skylark-storages-cache/main',[\r\n\t\"./cache\",\r\n\t\"./cookie\",\r\n\t\"./LocalFileSystem\",\r\n\t\"./localStorage\",\r\n\t\"./sessionStorage\"\r\n],function(cache) {\r\n\treturn cache;\r\n});\ndefine('skylark-storages-cache', ['skylark-storages-cache/main'], function (main) { return main; });\n\ndefine('skylark-slax-runtime/cache',[\r\n\t\"./slax\",\r\n\t\"skylark-storages-cache\"\r\n],function(slax,_cache){\r\n\t//local\r\n\t//page\r\n\t//session\r\n\treturn slax.cache = {};\r\n});\ndefine('skylark-langx/main',[\r\n    \"./skylark\",\r\n    \"./langx\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx', ['skylark-langx/main'], function (main) { return main; });\n\ndefine('skylark-domx/browser',[\r\n    \"skylark-domx-browser\"\r\n], function(browser) {\r\n    \"use strict\";\r\n\r\n    return browser;\r\n});\r\n\ndefine('skylark-domx-css/css',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, noder) {\r\n    \"use strict\";\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n        count = 0,\r\n        sheetsByUrl = {},\r\n        sheetsById = {},\r\n        defaultSheetId = _createStyleSheet(),\r\n        defaultSheet = sheetsById[defaultSheetId],\r\n        rulesPropName = (\"cssRules\" in defaultSheet) ? \"cssRules\" : \"rules\",\r\n        insertRuleFunc,\r\n        deleteRuleFunc = defaultSheet.deleteRule || defaultSheet.removeRule;\r\n\r\n    if (defaultSheet.insertRule) {\r\n        var _insertRule = defaultSheet.insertRule;\r\n        insertRuleFunc = function(selector, css, index) {\r\n            _insertRule.call(this, selector + \"{\" + css + \"}\", index);\r\n        };\r\n    } else {\r\n        insertRuleFunc = defaultSheet.addRule;\r\n    }\r\n\r\n    function normalizeSelector(selectorText) {\r\n        var selector = [],\r\n            last, len;\r\n        last = defaultSheet[rulesPropName].length;\r\n        insertRuleFunc.call(defaultSheet, selectorText, ';');\r\n        len = defaultSheet[rulesPropName].length;\r\n        for (var i = len - 1; i >= last; i--) {\r\n            selector.push(_sheet[_rules][i].selectorText);\r\n            deleteRuleFunc.call(defaultSheet, i);\r\n        }\r\n        return selector.reverse().join(', ');\r\n    }\r\n\r\n    /*\r\n     * create a stylesheet element.\r\n     * @param {Boolean} external\r\n     * @param {Object} options\r\n     * @param {String} [options.media = null]\r\n     */\r\n    function _createStyleSheet(external,options ) {\r\n        var node,\r\n            props = {\r\n                type : \"text/css\"\r\n            },\r\n            id = (count++);\r\n\r\n        options = options || {};\r\n        if (options.media) {\r\n            props.media = options.media;\r\n        }\r\n\r\n        if (external) {\r\n            node = noder.create(\"link\",langx.mixin(props,{\r\n                rel  : \"stylesheet\",\r\n                async : false\r\n            }));\r\n        } else {\r\n            node = noder.createElement(\"style\",props);\r\n        }\r\n\r\n        noder.append(head,node);\r\n        sheetsById[id] = {\r\n            id : id,\r\n            node :node\r\n        };\r\n\r\n        return id;\r\n    }\r\n\r\n    function createStyleSheet(css,options) {\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        var sheetId = _createStyleSheet(false,options);\r\n        if (css) {\r\n            addSheetRules(sheetId,css);\r\n        }\r\n\r\n        return sheetId;\r\n    }\r\n\r\n    function loadStyleSheet(url, options,loadedCallback, errorCallback) {\r\n        if (langx.isFunction(options)) {\r\n            errorCallback = loadedCallback;\r\n            loadedCallback = options;\r\n            options = {};\r\n        }\r\n        var sheet = sheetsByUrl[url];\r\n        if (!sheet) {\r\n            var sheetId = _createStyleSheet(true,options);\r\n\r\n            sheet = sheetsByUrl[url] = sheetsById[sheetId];\r\n            langx.mixin(sheet,{\r\n                state: 0, //0:unload,1:loaded,-1:loaderror\r\n                url : url,\r\n                deferred : new langx.Deferred()\r\n            });\r\n\r\n            var node = sheet.node;\r\n\r\n            startTime = new Date().getTime();\r\n\r\n            node.onload = function() {\r\n                sheet.state = 1;\r\n                sheet.deferred.resolve(sheet.id);\r\n            },\r\n            node.onerror = function(e) {\r\n                sheet.state = -1;\r\n                sheet.deferred.reject(e);\r\n            };\r\n\r\n            node.href = sheet.url;\r\n        }\r\n        if (loadedCallback || errorCallback) {\r\n            sheet.deferred.promise.then(loadedCallback,errorCallback);\r\n        }\r\n        return sheet.id;\r\n    }\r\n\r\n    function deleteSheetRule(sheetId, rule) {\r\n        var sheet = sheetsById[sheetId];\r\n        if (langx.isNumber(rule)) {\r\n            deleteRuleFunc.call(sheet, rule);\r\n        } else {\r\n            langx.each(sheet[rulesPropName], function(i, _rule) {\r\n                if (rule === _rule) {\r\n                    deleteRuleFunc.call(sheet, i);\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function deleteRule(rule) {\r\n        deleteSheetRule(defaultSheetId, rule);\r\n        return this;\r\n    }\r\n\r\n    function removeStyleSheet(sheetId) {\r\n        if (sheetId === defaultSheetId) {\r\n            throw new Error(\"The default stylesheet can not be deleted\");\r\n        }\r\n        var sheet = sheetsById[sheetId];\r\n        delete sheetsById[sheetId];\r\n\r\n        noder.remove(sheet.node);\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the default stylesheet.\r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertRule(selector, css, index) {\r\n        return this.insertSheetRule(defaultSheetId, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add rules to the default stylesheet.\r\n     * @param {Object} rules\r\n     */\r\n    function addRules(rules) {\r\n        return this.addRules(defaultSheetId,rules);\r\n    }\r\n\r\n    /*\r\n     * insert a rule to the stylesheet specified by sheetId.\r\n     * @param {Number} sheetId  \r\n     * @param {String} selector\r\n     * @param {String} css\r\n     * @param {Number} index \r\n     */\r\n    function insertSheetRule(sheetId, selector, css, index) {\r\n        if (!selector || !css) {\r\n            return -1;\r\n        }\r\n\r\n        var sheet = sheetsById[sheetId];\r\n        index = index || sheet[rulesPropName].length;\r\n\r\n        return insertRuleFunc.call(sheet, selector, css, index);\r\n    }\r\n\r\n    /*\r\n     * Add  rules to stylesheet.\r\n     * @param {Number} sheetId  \r\n     * @param {Object|String} rules\r\n     * @return this\r\n     * @example insertSheetRules(sheetId,{\r\n     * \r\n     * });\r\n     */\r\n    function addSheetRules(sheetId,rules) {\r\n        var sheet = sheetsById[sheetId],\r\n            css;\r\n        if (langx.isString(rules)) {\r\n            css = rules;\r\n        } else {\r\n            css = toString(rules);\r\n        }\r\n\r\n        noder.append(sheet.node,noder.createTextNode(css));\r\n        \r\n        return this;\r\n    }\r\n\r\n    function isAtRule(str) {\r\n        return str.startsWith(\"@\");\r\n    }\r\n\r\n    function toString(json){\r\n        var adjust = function(parentName,name,depth) {\r\n            if (parentName) {\r\n                if (isAtRule(parentName)) {\r\n                    depth += 1;\r\n                } else {\r\n                    name =  parentName + \" \" + name;\r\n                }                \r\n            }\r\n            return {\r\n                name : name,\r\n                depth : depth\r\n            }\r\n        };\r\n\r\n        var strNode = function (name, values, depth) {\r\n            var str = \"\",\r\n                atFlg = isAtRule(name);\r\n\r\n\r\n            if (isAtRule(name)) {\r\n                // at rule\r\n                if (langx.isString(values)) {\r\n                    // an at rule without block\r\n                    // ex: (1) @charset 'utf8';\r\n                    str = css.SPACE.repeat(depth) + name.trim() + \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                } else {\r\n                    // an at rule with block, ex :\r\n                    //  @media 'screen' {\r\n                    //  }\r\n                    str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n                    str += strNode(\"\",values,depth+1);\r\n                    str += css.SPACE.repeat(depth) + \" }\\n\";\r\n                }\r\n            } else {\r\n                // a selector or a property\r\n                if (langx.isString(values)) {\r\n                    // a css property \r\n                    // ex : (1) font-color : red;\r\n                    str = css.SPACE.repeat(depth) + name.trim() ;\r\n                    if (atFlg) {\r\n                        str = str +  \" \\\"\" + values.trim() + \" \\\";\\n\";\r\n                    } else {\r\n                        str = str + ': ' + values.trim() + \";\\n\";\r\n                    }\r\n\r\n                } else {\r\n                    // a selector rule \r\n                    // ex : (1) .class1 : {\r\n                    //            font-color : red;\r\n                    //          }\r\n                    if (langx.isArray(values)) {\r\n                        // array for ordering\r\n                        for (var n =0; n<values.length; n ++) {\r\n                           str +=  strNode(name,values[n],depth);\r\n                        }\r\n                    } else {\r\n                        // plain object\r\n\r\n                        if (name) {\r\n                            str += css.SPACE.repeat(depth) + name.trim() + \" {\\n\";\r\n\r\n                            for (var n in values) {\r\n                                var value =values[n];\r\n                                if (langx.isString(value)) {\r\n                                    // css property\r\n                                    str += strNode(n,value,depth+1)\r\n                                }\r\n                            }\r\n\r\n                            str += css.SPACE.repeat(depth) + \"}\\n\";\r\n                        }\r\n\r\n                        for (var n in values) {\r\n                            var value =values[n];\r\n                            if (!langx.isString(value)) {\r\n                                var adjusted = adjust(name,n,depth);\r\n                                str +=  strNode(adjusted.name,value,adjusted.depth);\r\n                            } \r\n                        }\r\n\r\n                    }\r\n                }\r\n            }   \r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        return strNode(\"\",json,0);\r\n    }\r\n \r\n\r\n    function css() {\r\n        return css;\r\n    }\r\n\r\n    langx.mixin(css, {\r\n        SPACE : \"\\t\",\r\n\r\n        addRules : addRules,\r\n\r\n        addSheetRules : addSheetRules,\r\n\r\n        createStyleSheet: createStyleSheet,\r\n\r\n        deleteSheetRule : deleteSheetRule,\r\n\r\n        deleteRule : deleteRule,\r\n\r\n        insertRule : insertRule,\r\n\r\n        insertSheetRule : insertSheetRule,\r\n\r\n        loadStyleSheet : loadStyleSheet,\r\n\r\n        removeStyleSheet : removeStyleSheet,\r\n\r\n        toString : toString\r\n    });\r\n\r\n    return skylark.attach(\"domx.css\", css);\r\n});\r\n\ndefine('skylark-domx-css/main',[\r\n\t\"./css\"\r\n],function(css){\r\n\treturn css;\r\n});\ndefine('skylark-domx-css', ['skylark-domx-css/main'], function (main) { return main; });\n\ndefine('skylark-domx/css',[\r\n    \"skylark-domx-css\"\r\n], function( css) {\r\n    \"use strict\";\r\n\r\n     return css;\r\n});\r\n\ndefine('skylark-domx/data',[\r\n    \"skylark-domx-data\"\r\n], function( datax) {\r\n \r\n    return datax;\r\n});\ndefine('skylark-domx/eventer',[\r\n    \"skylark-domx-eventer\"\r\n], function( eventer) {\r\n \r\n    return eventer;\r\n});\ndefine('skylark-domx/finder',[\r\n    \"skylark-domx-finder\"\r\n], function( finder) {\r\n\r\n    return finder;\r\n});\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(styler,velm,$){\r\n\t\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        velm.VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n\r\n    $.fn.style = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    $.fn.css = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    //hasClass(name)\r\n    $.fn.hasClass = $.wraps.wrapper_some_chk(styler.hasClass, styler);\r\n\r\n    //addClass(name)\r\n    $.fn.addClass = $.wraps.wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className);\r\n\r\n    //removeClass(name)\r\n    $.fn.removeClass = $.wraps.wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className);\r\n\r\n    //toogleClass(name,when)\r\n    $.fn.toggleClass = $.wraps.wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className);\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n        \r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function fullCover(elem, hor, vert) {\r\n        let vertical = vert;\r\n        let horizontal = hor;\r\n        if (langx.isUndefined(horizontal)) {\r\n            horizontal = true;\r\n        }\r\n        if (langx.isUndefined(vertical)) {\r\n            vertical = true;\r\n        }\r\n        elem.style.position = 'absolute';\r\n        if (horizontal) {\r\n            elem.style.left = 0;\r\n            elem.style.right = 0;\r\n        }\r\n        if (vertical) {\r\n            elem.style.top = 0;\r\n            elem.style.bottom = 0;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        fullCover,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./geom\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,geom,velm,$){\r\n   // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    $.fn.offset = $.wraps.wrapper_value(geom.pagePosition, geom, geom.pagePosition);\r\n\r\n    $.fn.scrollTop = $.wraps.wrapper_value(geom.scrollTop, geom);\r\n\r\n    $.fn.scrollLeft = $.wraps.wrapper_value(geom.scrollLeft, geom);\r\n\r\n    $.fn.position =  function(options) {\r\n        if (!this.length) {\r\n            return this;\r\n        }\r\n\r\n        if (options) {\r\n            if (options.of && options.of.length) {\r\n                options = langx.clone(options);\r\n                options.of = options.of[0];\r\n            }\r\n            return this.each( function() {\r\n                geom.posit(this,options);\r\n            });\r\n        } else {\r\n            var elem = this[0];\r\n\r\n            return geom.relativePosition(elem);\r\n\r\n        }             \r\n    };\r\n\r\n    $.fn.offsetParent = $.wraps.wrapper_map(geom.offsetParent, geom);\r\n\r\n\r\n    $.fn.size = $.wraps.wrapper_value(geom.size, geom);\r\n\r\n    $.fn.width = $.wraps.wrapper_value(geom.width, geom, geom.width);\r\n\r\n    $.fn.height = $.wraps.wrapper_value(geom.height, geom, geom.height);\r\n\r\n    $.fn.clientSize = $.wraps.wrapper_value(geom.clientSize, geom.clientSize);\r\n    \r\n    ['width', 'height'].forEach(function(dimension) {\r\n        var offset, Dimension = dimension.replace(/./, function(m) {\r\n            return m[0].toUpperCase()\r\n        });\r\n\r\n        $.fn['outer' + Dimension] = function(margin, value) {\r\n            if (arguments.length) {\r\n                if (typeof margin !== 'boolean') {\r\n                    value = margin;\r\n                    margin = false;\r\n                }\r\n            } else {\r\n                margin = false;\r\n                value = undefined;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                var el = this[0];\r\n                if (!el) {\r\n                    return undefined;\r\n                }\r\n                var cb = geom.size(el);\r\n                if (margin) {\r\n                    var me = geom.marginExtents(el);\r\n                    cb.width = cb.width + me.left + me.right;\r\n                    cb.height = cb.height + me.top + me.bottom;\r\n                }\r\n                return dimension === \"width\" ? cb.width : cb.height;\r\n            } else {\r\n                return this.each(function(idx, el) {\r\n                    var mb = {};\r\n                    var me = geom.marginExtents(el);\r\n                    if (dimension === \"width\") {\r\n                        mb.width = value;\r\n                        if (margin) {\r\n                            mb.width = mb.width - me.left - me.right\r\n                        }\r\n                    } else {\r\n                        mb.height = value;\r\n                        if (margin) {\r\n                            mb.height = mb.height - me.top - me.bottom;\r\n                        }\r\n                    }\r\n                    geom.size(el, mb);\r\n                })\r\n\r\n            }\r\n        };\r\n    })\r\n\r\n    $.fn.innerWidth = $.wraps.wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n    $.fn.innerHeight = $.wraps.wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n    return geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\"\r\n], function(skylark, langx, browser, noder, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = noder.createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = noder.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = noder.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        throb,\r\n        toggle\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(fx,velm,$){\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"emulateTransitionEnd\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"slideDown\",\r\n        \"slideToggle\",\r\n        \"slideUp\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n    $.fn.hide =  $.wraps.wrapper_every_act(fx.hide, fx);\r\n\r\n    $.fn.animate = $.wraps.wrapper_every_act(fx.animate, fx);\r\n    $.fn.emulateTransitionEnd = $.wraps.wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n    $.fn.show = $.wraps.wrapper_every_act(fx.show, fx);\r\n    $.fn.hide = $.wraps.wrapper_every_act(fx.hide, fx);\r\n    $.fn.toogle = $.wraps.wrapper_every_act(fx.toogle, fx);\r\n    $.fn.fadeTo = $.wraps.wrapper_every_act(fx.fadeTo, fx);\r\n    $.fn.fadeIn = $.wraps.wrapper_every_act(fx.fadeIn, fx);\r\n    $.fn.fadeOut = $.wraps.wrapper_every_act(fx.fadeOut, fx);\r\n    $.fn.fadeToggle = $.wraps.wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n    $.fn.slideDown = $.wraps.wrapper_every_act(fx.slideDown, fx);\r\n    $.fn.slideToggle = $.wraps.wrapper_every_act(fx.slideToggle, fx);\r\n    $.fn.slideUp = $.wraps.wrapper_every_act(fx.slideUp, fx);\r\n\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\ndefine('skylark-domx/fx',[\r\n    \"skylark-domx-fx\"\r\n], function( fx) {\r\n    return fx;\r\n});\ndefine('skylark-domx/geom',[\r\n    \"skylark-domx-geom\"\r\n], function( geom) {\r\n\r\n    return geom;\r\n});\ndefine('skylark-domx-transforms/transforms',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark,langx,browser,datax,styler) {\r\n  var css3Transform = browser.normalizeCssProperty(\"transform\");\r\n\r\n  function getMatrix(radian, x, y) {\r\n    var Cos = Math.cos(radian), Sin = Math.sin(radian);\r\n    return {\r\n      M11: Cos * x, \r\n      M12: -Sin * y,\r\n      M21: Sin * x, \r\n      M22: Cos * y\r\n    };\r\n  }\r\n\r\n  function getZoom(scale, zoom) {\r\n      return scale > 0 && scale > -zoom ? zoom :\r\n        scale < 0 && scale < zoom ? -zoom : 0;\r\n  }\r\n\r\n    function change(el,d) {\r\n      var matrix = getMatrix(d.radian, d.y, d.x);\r\n      styler.css(el,css3Transform, \"matrix(\"\r\n        + matrix.M11.toFixed(16) + \",\" + matrix.M21.toFixed(16) + \",\"\r\n        + matrix.M12.toFixed(16) + \",\" + matrix.M22.toFixed(16) + \", 0, 0)\"\r\n      );      \r\n  }\r\n\r\n  function transformData(el,d) {\r\n    if (d) {\r\n      datax.data(el,\"transform\",d);\r\n    } else {\r\n      d = datax.data(el,\"transform\") || {};\r\n      d.radian = d.radian || 0;\r\n      d.x = d.x || 1;\r\n      d.y = d.y || 1;\r\n      d.zoom = d.zoom || 1;\r\n      return d;     \r\n    }\r\n  }\r\n\r\n  var calcs = {\r\n    //Vertical flip\r\n    vertical : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.y *= -1;\r\n    },\r\n\r\n   //Horizontal flip\r\n    horizontal : function (d) {\r\n        d.radian = Math.PI - d.radian; \r\n        d.x *= -1;\r\n    },\r\n\r\n    //Rotate according to angle\r\n    rotate : function (d,degress) {\r\n        d.radian = degress * Math.PI / 180;; \r\n    },\r\n\r\n    //Turn left 90 degrees\r\n    left : function (d) {\r\n        d.radian -= Math.PI / 2; \r\n    },\r\n\r\n    //Turn right 90 degrees\r\n    right : function (d) {\r\n        d.radian += Math.PI / 2; \r\n    },\r\n \r\n    //zoom\r\n    scale: function (d,zoom) {\r\n        var hZoom = getZoom(d.y, zoom), vZoom = getZoom(d.x, zoom);\r\n        if (hZoom && vZoom) {\r\n          d.y += hZoom; \r\n          d.x += vZoom;\r\n        }\r\n    }, \r\n\r\n    //zoom in\r\n    zoomin: function (d) { \r\n      calcs.scale(d,0.1); \r\n    },\r\n    \r\n    //zoom out\r\n    zoomout: function (d) { \r\n      calcs.scale(d,-0.1); \r\n    }\r\n\r\n  };\r\n  \r\n  \r\n  function _createApiMethod(calcFunc) {\r\n    return function() {\r\n      var args = langx.makeArray(arguments),\r\n        el = args.shift(),\r\n          d = transformData(el);\r\n        args.unshift(d);\r\n        calcFunc.apply(this,args)\r\n        change(el,d);\r\n        transformData(el,d);\r\n    }\r\n  }\r\n  \r\n  function transforms() {\r\n    return transforms;\r\n  }\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\"].forEach(function(name){\r\n    transforms[name] = _createApiMethod(calcs[name]);\r\n  });\r\n\r\n  langx.mixin(transforms, {\r\n    reset : function(el) {\r\n      var d = {\r\n        x : 1,\r\n        y : 1,\r\n        radian : 0,\r\n      }\r\n      change(el,d);\r\n      transformData(el,d);\r\n    }\r\n  });\r\n\r\n\r\n  return skylark.attach(\"domx.transforms\", transforms);\r\n});\r\n\ndefine('skylark-domx-transforms/main',[\r\n\t\"./transforms\"\r\n],function(transforms){\r\n\treturn transforms;\r\n});\ndefine('skylark-domx-transforms', ['skylark-domx-transforms/main'], function (main) { return main; });\n\ndefine('skylark-domx-images/images',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-transforms\",\r\n    \"skylark-domx-query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.attach(\"domx.images\" , images);\r\n});\r\n\ndefine('skylark-domx-images/main',[\r\n\t\"./images\"\r\n],function(images){\r\n\treturn images;\r\n});\ndefine('skylark-domx-images', ['skylark-domx-images/main'], function (main) { return main; });\n\ndefine('skylark-domx/images',[\r\n    \"skylark-domx-images\"\r\n], function(images) {\r\n  return images;\r\n});\r\n\ndefine('skylark-domx/noder',[\r\n    \"skylark-domx-noder\"\r\n], function( noder) {\r\n\r\n    return noder;\r\n});\ndefine('skylark-domx-plugins/plugins',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n                if (typeof options != \"string\") {\r\n                  return this;\r\n                }\r\n            } \r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        var ret = plugin[methodName].apply(plugin,args);\r\n                        if (ret == plugin) {\r\n                          ret = undefined;\r\n                        }\r\n\r\n                        return ret;\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        getUID : function (prefix) {\r\n            prefix = prefix || \"plugin\";\r\n            do prefix += ~~(Math.random() * 1000000)\r\n            while (document.getElementById(prefix))\r\n            return prefix;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});\ndefine('skylark-domx-plugins/main',[\r\n\t\"./plugins\"\r\n],function(plugins){\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins', ['skylark-domx-plugins/main'], function (main) { return main; });\n\ndefine('skylark-domx/plugins',[\r\n    \"skylark-domx-plugins\"\r\n], function( plugins) {\r\n    \"use strict\";\r\n    return plugins;\r\n});\ndefine('skylark-domx/styler',[\r\n    \"skylark-domx-styler\"\r\n], function( styler) {\r\n\r\n    return styler;\r\n});\ndefine('skylark-domx/query',[\r\n    \"skylark-domx-query\",\r\n    \"./data\",\r\n    \"./eventer\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./styler\"\r\n], function( query) {\r\n\r\n    return query;\r\n\r\n});\ndefine('skylark-domx-scripter/scripter',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    var rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n\r\n    var preservedScriptAttributes = {\r\n        type: true,\r\n        src: true,\r\n        nonce: true,\r\n        noModule: true\r\n    };\r\n\r\n    function evaluate(code,node, doc ) {\r\n        doc = doc || document;\r\n\r\n        var i, val,\r\n            script = doc.createElement(\"script\");\r\n\r\n        script.text = code;\r\n        if ( node ) {\r\n            for ( i in preservedScriptAttributes ) {\r\n\r\n                // Support: Firefox 64+, Edge 18+\r\n                // Some browsers don't support the \"nonce\" property on scripts.\r\n                // On the other hand, just using `getAttribute` is not enough as\r\n                // the `nonce` attribute is reset to an empty string whenever it\r\n                // becomes browsing-context connected.\r\n                // See https://github.com/whatwg/html/issues/2369\r\n                // See https://html.spec.whatwg.org/#nonce-attributes\r\n                // The `node.getAttribute` check was added for the sake of\r\n                // `jQuery.globalEval` so that it can fake a nonce-containing node\r\n                // via an object.\r\n                val = node[ i ] || node.getAttribute && node.getAttribute( i );\r\n                if ( val ) {\r\n                    script.setAttribute( i, val );\r\n                }\r\n            }\r\n        }\r\n        doc.head.appendChild( script ).parentNode.removeChild( script );\r\n\r\n        return this;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        },\r\n\r\n        evaluate : evaluate,\r\n\r\n        html : function(node,value) {\r\n\r\n            var result = noder.html(node,value);\r\n\r\n            if (value !== undefined) {\r\n                var scripts = node.querySelectorAll('script');\r\n\r\n                for (var i =0; i<scripts.length; i++) {\r\n                    var node1 = scripts[i];\r\n                    if (rscriptType.test( node1.type || \"\" ) ) {\r\n                      evaluate(node1.textContent,node1);\r\n                    }\r\n                }       \r\n                return this;         \r\n            } else {\r\n                return result;\r\n            }\r\n\r\n\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.attach(\"domx.scripter\", scripter);\r\n});\ndefine('skylark-domx-scripter/main',[\r\n\t\"./scripter\",\r\n\t\"skylark-domx-query\"\r\n],function(scripter,$){\r\n\r\n    $.fn.html = $.wraps.wrapper_value(scripter.html, scripter, scripter.html);\r\n\r\n\treturn scripter;\r\n});\ndefine('skylark-domx-scripter', ['skylark-domx-scripter/main'], function (main) { return main; });\n\ndefine('skylark-domx/scripter',[\r\n    \"skylark-domx-scripter\"\r\n], function( scripter) {\r\n\r\n    return dom.scripter = scripter;\r\n});\ndefine('skylark-domx/transforms',[\r\n    \"skylark-domx-transforms\"\r\n], function(transforms) {\r\n  return dom.transforms = transforms;\r\n});\r\n\ndefine('skylark-domx/velm',[\r\n    \"skylark-domx-velm\"\r\n], function( velm) {\r\n     return velm;\r\n});\ndefine('skylark-domx/main',[\r\n    \"./browser\",\r\n    \"./css\",\r\n    \"./data\",\r\n    \"./eventer\",\r\n    \"./finder\",\r\n    \"./fx\",\r\n    \"./geom\",\r\n    \"./images\",\r\n    \"./noder\",\r\n    \"./plugins\",\r\n    \"./query\",\r\n    \"./scripter\",\r\n    \"./styler\",\r\n    \"./transforms\",\r\n    \"./velm\"\r\n], function(browser,css,data,eventer,finder,fx,geom,images,noder,plugins,query,scripter,styler,transforms,velm) {\r\n    return {\r\n        browser,\r\n        css,\r\n        data,\r\n        eventer,\r\n        finder,\r\n        geom,\r\n        images,\r\n        noder,\r\n        plugins,\r\n        query,\r\n        scripter,\r\n        styler,\r\n        transforms,\r\n        velm\r\n    };\r\n})\r\n;\ndefine('skylark-domx', ['skylark-domx/main'], function (main) { return main; });\n\ndefine('skylark-domx-files/files',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var files = function() {\r\n        return files;\r\n    };\r\n\r\n    return skylark.attach(\"domx.files\", files);\r\n});\ndefine('skylark-io-diskfs/diskfs',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var diskfs = function() {\r\n        return diskfs;\r\n    };\r\n\r\n    return skylark.attach(\"storages.diskfs\", diskfs);\r\n});\n define('skylark-io-diskfs/webentry',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"./diskfs\"\r\n],function(arrays,Deferred, diskfs){\r\n    var concat = Array.prototype.concat;\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                arrays.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    return diskfs.webentry = webentry;\r\n});\n  define('skylark-domx-files/dropzone',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-io-diskfs/webentry\"\r\n],function(arrays,Deferred, styler, eventer, files, webentry){  /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        eventer.on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            arrays.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n     return files.dropzone = dropzone;\r\n});\ndefine('skylark-domx-files/pastezone',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\"\r\n],function(objects, eventer, files){\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        eventer.on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                objects.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    return files.pastezone = pastezone;\r\n\r\n});\r\n\ndefine('skylark-io-diskfs/select',[\r\n    \"./diskfs\"\r\n],function(diskfs){\r\n    var fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            accept = params.accept || \"\", //'image/gif,image/jpeg,image/jpg,image/png,image/svg'\r\n            title = params.title || \"\",\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\";\r\n            input.style.left = 0;\r\n            input.style.top = 0;\r\n            input.style.opacity = .001;\r\n            document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.accept = accept;\r\n        fileInput.title = title;\r\n\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    return diskfs.select = select;\r\n});\r\n\r\n\ndefine('skylark-domx-files/picker',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-io-diskfs/select\"\r\n],function(objects, eventer, files, select){\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        eventer.on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    return files.picker = picker;\r\n\r\n});\r\n\r\n\r\n\ndefine('skylark-net-http/Upload',[\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-objects\",\r\n    \"skylark-langx-arrays\",\r\n    \"skylark-langx-async/Deferred\",\r\n    \"skylark-langx-emitter/Evented\",    \r\n    \"./Xhr\",\r\n    \"./http\"\r\n],function(types, objects, arrays, Deferred, Evented,Xhr, http){\r\n\r\n    var blobSlice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n\r\n\r\n    /*\r\n     *Class for uploading files using xhr.\r\n     */\r\n    var Upload = Evented.inherit({\r\n        klassName : \"Upload\",\r\n\r\n        _construct : function(options) {\r\n            this._options = objects.mixin({\r\n                debug: false,\r\n                url: '/upload',\r\n                // maximum number of concurrent uploads\r\n                maxConnections: 999,\r\n                // To upload large files in smaller chunks, set the following option\r\n                // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n                // or the browser does not support the required Blob API, files will\r\n                // be uploaded as a whole.\r\n                maxChunkSize: undefined,\r\n\r\n                onProgress: function(id, fileName, loaded, total){\r\n                },\r\n                onComplete: function(id, fileName){\r\n                },\r\n                onCancel: function(id, fileName){\r\n                },\r\n                onFailure : function(id,fileName,e) {                    \r\n                }\r\n            },options);\r\n\r\n            this._queue = [];\r\n            // params for files in queue\r\n            this._params = [];\r\n\r\n            this._files = [];\r\n            this._xhrs = [];\r\n\r\n            // current loaded size in bytes for each file\r\n            this._loaded = [];\r\n\r\n        },\r\n\r\n        /**\r\n         * Adds file to the queue\r\n         * Returns id to use with upload, cancel\r\n         **/\r\n        add: function(file){\r\n            return this._files.push(file) - 1;\r\n        },\r\n\r\n        /**\r\n         * Sends the file identified by id and additional query params to the server.\r\n         */\r\n        send: function(id, params){\r\n            if (!this._files[id]) {\r\n                // Already sended or canceled\r\n                return ;\r\n            }\r\n            if (this._queue.indexOf(id)>-1) {\r\n                // Already in the queue\r\n                return;\r\n            }\r\n            var len = this._queue.push(id);\r\n\r\n            var copy = objects.clone(params);\r\n\r\n            this._params[id] = copy;\r\n\r\n            // if too many active uploads, wait...\r\n            if (len <= this._options.maxConnections){\r\n                this._send(id, this._params[id]);\r\n            }     \r\n        },\r\n\r\n        /**\r\n         * Sends all files  and additional query params to the server.\r\n         */\r\n        sendAll: function(params){\r\n           for( var id = 0; id <this._files.length; id++) {\r\n                this.send(id,params);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels file upload by id\r\n         */\r\n        cancel: function(id){\r\n            this._cancel(id);\r\n            this._dequeue(id);\r\n        },\r\n\r\n        /**\r\n         * Cancells all uploads\r\n         */\r\n        cancelAll: function(){\r\n            for (var i=0; i<this._queue.length; i++){\r\n                this._cancel(this._queue[i]);\r\n            }\r\n            this._queue = [];\r\n        },\r\n\r\n        getName: function(id){\r\n            var file = this._files[id];\r\n            return file.fileName != null ? file.fileName : file.name;\r\n        },\r\n\r\n        getSize: function(id){\r\n            var file = this._files[id];\r\n            return file.fileSize != null ? file.fileSize : file.size;\r\n        },\r\n\r\n        /**\r\n         * Returns uploaded bytes for file identified by id\r\n         */\r\n        getLoaded: function(id){\r\n            return this._loaded[id] || 0;\r\n        },\r\n\r\n\r\n        /**\r\n         * Sends the file identified by id and additional query params to the server\r\n         * @param {Object} params name-value string pairs\r\n         */\r\n        _send: function(id, params){\r\n            var options = this._options,\r\n                name = this.getName(id),\r\n                size = this.getSize(id),\r\n                chunkSize = options.maxChunkSize || 0,\r\n                curUploadingSize,\r\n                curLoadedSize = 0,\r\n                file = this._files[id],\r\n                args = {\r\n                    headers : {\r\n                    }                    \r\n                };\r\n\r\n            this._loaded[id] = this._loaded[id] || 0;\r\n\r\n            var xhr = this._xhrs[id] = new Xhr({\r\n                url : options.url\r\n            });\r\n\r\n            if (chunkSize)  {\r\n\r\n                args.data = blobSlice.call(\r\n                    file,\r\n                    this._loaded[id],\r\n                    this._loaded[id] + chunkSize,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                curUploadingSize = args.data.size;\r\n                // Expose the chunk bytes position range:\r\n                args.headers[\"content-range\"] = 'bytes ' + this._loaded[id] + '-' +\r\n                    (this._loaded[id] + curUploadingSize - 1) + '/' + size;\r\n                args.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            }  else {\r\n                curUploadingSize = size;\r\n                var formParamName =  params.formParamName,\r\n                    formData = params.formData;\r\n\r\n                if (formParamName) {\r\n                    if (!formData) {\r\n                        formData = new FormData();\r\n                    }\r\n                    formData.append(formParamName,file);\r\n                    args.data = formData;\r\n    \r\n                } else {\r\n                    args.headers[\"Content-Type\"] = file.type || \"application/octet-stream\";\r\n                    args.data = file;\r\n                }\r\n            }\r\n\r\n\r\n            var self = this;\r\n            xhr.post(\r\n                args\r\n            ).progress(function(e){\r\n                if (e.lengthComputable){\r\n                    curLoadedSize = curLoadedSize + e.loaded;\r\n                    self._loaded[id] = self._loaded[id] + e.loaded;\r\n                    self._options.onProgress(id, name, self._loaded[id], size);\r\n                }\r\n            }).then(function(){\r\n                if (!self._files[id]) {\r\n                    // the request was aborted/cancelled\r\n                    return;\r\n                }\r\n\r\n                if (curLoadedSize < curUploadingSize) {\r\n                    // Create a progress event if no final progress event\r\n                    // with loaded equaling total has been triggered\r\n                    // for this chunk:\r\n                    self._loaded[id] = self._loaded[id] + curUploadingSize - curLoadedSize;\r\n                    self._options.onProgress(id, name, self._loaded[id], size);                    \r\n                }\r\n\r\n                if (self._loaded[id] <size) {\r\n                    // File upload not yet complete,\r\n                    // continue with the next chunk:\r\n                    self._send(id,params);\r\n                } else {\r\n                    self._options.onComplete(id,name);\r\n\r\n                    self._files[id] = null;\r\n                    self._xhrs[id] = null;\r\n                    self._dequeue(id);\r\n                }\r\n\r\n\r\n            }).catch(function(e){\r\n                self._options.onFailure(id,name,e);\r\n\r\n                self._files[id] = null;\r\n                self._xhrs[id] = null;\r\n                self._dequeue(id);\r\n            });\r\n        },\r\n\r\n        _cancel: function(id){\r\n            this._options.onCancel(id, this.getName(id));\r\n\r\n            this._files[id] = null;\r\n\r\n            if (this._xhrs[id]){\r\n                this._xhrs[id].abort();\r\n                this._xhrs[id] = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns id of files being uploaded or\r\n         * waiting for their turn\r\n         */\r\n        getQueue: function(){\r\n            return this._queue;\r\n        },\r\n\r\n\r\n        /**\r\n         * Removes element from queue, starts upload of next\r\n         */\r\n        _dequeue: function(id){\r\n            var i = arrays.inArray(id,this._queue);\r\n            this._queue.splice(i, 1);\r\n\r\n            var max = this._options.maxConnections;\r\n\r\n            if (this._queue.length >= max && i < max){\r\n                var nextId = this._queue[max-1];\r\n                this._send(nextId, this._params[nextId]);\r\n            }\r\n        }\r\n    });\r\n\r\n    return http.Upload = Upload;    \r\n});\ndefine('skylark-domx-files/MultiUploader',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-net-http/Upload\",\r\n  \"skylark-domx-plugins\",\r\n  \"./files\"\r\n]  ,function(skylark,langx,$, elmx,FileUpload, plugins,files){\r\n\r\n    var fileListTemplate = '<div class=\"lark-multiuploader\">' + \r\n        '    <h3 class=\"popover-title\">Upload files</h3>' + \r\n        '    <div class=\"popover-content container-fluid\" class=\"file-list file-dropzone file-pastezone\">' + \r\n        '        <div class=\"no-data\"><em>Add files.</em></div>' + \r\n        '    </div>' + \r\n        '    <footer>' + \r\n        '        <button class=\"btn btn-warning pull-right btn-sm\" id=\"cancel-uploads-button\"><i class=\"icon-cancel\"></i>Cancel uploads</button>' + \r\n        '        <span class=\"btn btn-success fileinput-button btn-sm\" id=\"fileinput-button\">' + \r\n        '            <i class=\"icon-plus\"></i>' + \r\n        '            <span>Add files...</span>' + \r\n        '            <input id=\"fileupload\" type=\"file\" name=\"files[]\" multiple=\"multiple\">' + \r\n        '        </span>' + \r\n        '        <button class=\"btn btn-primary btn-sm\" id=\"start-uploads-button\"><i class=\"icon-start\"></i>Start uploads</button>' + \r\n        '    </footer>' + \r\n        '</div>',\r\n        fileItemTemplate = '<div class=\"file-item row\">' +\r\n        '   <div class=\"col-md-6\"><span class=\"name\"></span></div>' + \r\n        '   <div class=\"col-md-3\">' +\r\n        '    <span class=\"size\"></span>' +\r\n        '    <div class=\"progress hidden\">' +\r\n        '        <div class=\"progress-label\"></div>' +\r\n        '        <div class=\"bar\"></div>' +\r\n        '    </div>' +\r\n        '    <span class=\"message hidden\"></span>' +\r\n        '   </div>' +\r\n        '   <div class=\"col-md-3\">' +\r\n        '    <button class=\"btn btn-warning btn-xs cancel\"><i class=\"icon-remove\"></i>Cancel</button>' +\r\n        '    <button class=\"btn btn-xs clear hidden\">Clear</button>' +\r\n        '   </div>' +\r\n        '</div>';\r\n\r\n    var MultiUploader =  plugins.Plugin.inherit({\r\n        klassName : \"Uploader\",\r\n        pluginName : \"lark.multiuploader\",\r\n\r\n        options: {\r\n            uploadUrl: '/upload',\r\n\r\n        \tparams: {\r\n                formParamName : \"file\"\r\n            },\r\n\r\n    \t    maxConnections: 3,\r\n        \t// validation\r\n        \tallowedExtensions: [],\r\n        \tsizeLimit: 0,\r\n        \tminSizeLimit: 0,\r\n\r\n            autoUpload: false,\r\n            selectors : {\r\n              fileList : \".file-list\",\r\n              fileItem : \".file-item\",\r\n              nodata : \".file-list .no-data\",\r\n\r\n              picker   : \".file-picker\",\r\n              dropzone : \".file-dropzone\",\r\n              pastezone: \".file-pastezone\",\r\n\r\n              startUploads: '.start-uploads',\r\n              cancelUploads: '.cancel-uploads',\r\n            },\r\n\r\n            template : fileListTemplate,\r\n\r\n            dataType: 'json',\r\n\r\n            fileItem : {\r\n            \tselectors : {\r\n                    name : \".name\",\r\n                    size : \".size\",\r\n                    cancel: \".cancel\",\r\n                    clear : \".clear\",\r\n                    progress : \".progress\",\r\n                    message : \".message\"                   \r\n            \t},\r\n\r\n            \ttemplate : fileItemTemplate\r\n            }\r\n        },\r\n\r\n\r\n        _construct : function(elm,options) {\r\n            var self = this;\r\n\r\n\r\n            // Render current files\r\n            /*\r\n            this.files.forEach(function (file) {\r\n                self.renderFile(file);\r\n            });\r\n            */\r\n\r\n            //this._refresh({files:true});\r\n        \r\n\r\n            //this._files.on('all', function(){\r\n            //  self._refresh({files:true});\r\n            //});\r\n\r\n\r\n           this.overrided(elm,options);\r\n\r\n\r\n           this._velm = elmx(this._elm);\r\n        \r\n\r\n\r\n            this._initEventHandler();\r\n            this._initFileHandlers();\r\n            this._initUpoadHandler();\r\n            this._updateFileList();\r\n        },\r\n\r\n        _initFileHandlers : function() {\r\n            var self = this;\r\n\r\n            var selectors = this.options.selectors,\r\n            \tdzSelector = selectors.dropzone,\r\n            \tpzSelector = selectors.pastezone,\r\n            \tpkSelector = selectors.picker;\r\n\r\n            if (dzSelector) {\r\n\t\t\t\tthis._velm.$(dzSelector).dropzone({\r\n\t                dropped : function (files) {\r\n                        self._addFiles(files);\r\n\t                }\r\n\t\t\t\t});\r\n            }\r\n\r\n\r\n            if (pzSelector) {\r\n                this._velm.$(pzSelector).pastezone({\r\n                    pasted : function (files) {\r\n                        self._addFiles(files);\r\n                    }\r\n                });                \r\n            }\r\n\r\n            if (pkSelector) {\r\n                this._velm.$(pkSelector).picker({\r\n                    multiple: true,\r\n                    picked : function (files) {\r\n                        self._addFiles(files);\r\n                    }\r\n                });                \r\n            }\r\n        },\r\n\r\n        _initUpoadHandler: function(){\r\n            var self = this,\r\n                handlerClass;\r\n\r\n            this._handler = new FileUpload({\r\n                url: this.options.uploadUrl,\r\n                maxConnections: this.options.maxConnections,\r\n                onProgress: function(id, fileName, loaded, total){\r\n                    self._onProgress(id, fileName, loaded, total);\r\n                },\r\n                onComplete: function(id, fileName, result){\r\n                    self._onComplete(id, fileName, result);\r\n                },\r\n                onCancel: function(id, fileName){\r\n                    self._onCancel(id, fileName);\r\n                },\r\n                onFailure: function(id,fileName,e){\r\n                    self._onFailure(id,fileName,e);\r\n                }\r\n            });\r\n        },\r\n        \r\n         /**\r\n         * delegate click event for cancel link\r\n         **/\r\n        _initEventHandler: function(){\r\n            var self = this,\r\n               selectors = this.options.selectors,\r\n               itemSelectors = this.options.fileItem.selectors, \r\n               list = this._listElement;\r\n\r\n            // Add cancel handler\r\n            this._velm.$(selectors.fileList).on(\"click\",itemSelectors.cancel,function(e){\r\n                var $fileItem = $(this).closest(selectors.fileItem),\r\n                    fileId = $fileItem.data(\"fileId\");\r\n                self._handler.cancel(fileId);\r\n                $fileItem.remove();\r\n                self._updateFileList();\r\n            });\r\n\r\n            // Add clear handler\r\n            this._velm.$(selectors.fileList).on(\"click\",itemSelectors.clear,function(e){\r\n                var $fileItem = $(this).closest(selectors.fileItem),\r\n                    fileId = $fileItem.data(\"fileId\");\r\n                $fileItem.remove();\r\n                self._updateFileList();\r\n            });\r\n\r\n            // Add cancel all handler\r\n            this._velm.$(selectors.cancelUploads).click(function(){\r\n                var $files = self._velm.$(selectors.fileList).find(selectors.fileItem);           \r\n                $files.forEach(function(fileItem){\r\n                    var $fileItem = $(fileItem),\r\n                        fileId = $fileItem.data(\"fileId\");\r\n                    self._handler.cancel(fileId);\r\n                    $fileItem.remove();\r\n                });\r\n                self._updateFileList();\r\n\r\n            });\r\n\r\n            // Add start uploads handler\r\n            this._velm.$(selectors.startUploads).click(function(){\r\n                var $files = self._velm.$(selectors.fileList).find(selectors.fileItem);           \r\n                $files.forEach(function(fileItem){\r\n                    var $fileItem = $(fileItem),\r\n                        fileId = $fileItem.data(\"fileId\");\r\n                    if (!$fileItem.data(\"status\")) {\r\n                        // The file has not yet been sent\r\n                        self._handler.send(fileId,self.options.params);\r\n                    }\r\n                });\r\n\r\n            });\r\n            \r\n\r\n        },       \r\n\r\n        _onProgress: function(id, fileName, loaded, total){          \r\n            var $item = this._getItemByFileId(id);\r\n\r\n            var percent = parseInt(loaded / total * 100, 10);\r\n            var progressHTML = this._formatSize(loaded)+' of '+ this._formatSize(total);\r\n\r\n            $item.data(\"status\",\"running\");\r\n            $item.find('.progress')\r\n                .find('.bar')\r\n                .css('width', percent+'%')\r\n                .parent()\r\n                .find('.progress-label')\r\n                .html(progressHTML);\r\n            this._updateFile($item);\r\n\r\n        },\r\n\r\n        _onComplete: function(id, fileName, result){\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"done\");\r\n            $item.find('.message').html('<i class=\"icon-success\"></i> ' + (this.doneMsg || 'Uploaded'));\r\n            this._updateFile($item);\r\n        },\r\n\r\n        _onFailure : function(id,fileName,e) {\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"error\");\r\n            $item.find('.message').html('<i class=\"icon-error\"></i> ');;\r\n            this._updateFile($item)\r\n\r\n        },\r\n\r\n        _onCancel: function(id, fileName){\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"cancel\");\r\n            this._updateFile($item)\r\n        },\r\n\r\n        _addToList: function(id, fileName){\r\n            var self = this;\r\n\r\n\r\n            var fileName = this._handler.getName(id),\r\n                fileSize = this._handler.getSize(id);\r\n\r\n            var item = $(this.options.fileItem.template);\r\n            item.data(\"fileId\",id);\r\n\r\n            item.find(this.options.fileItem.selectors.name).html(this._formatFileName(fileName));\r\n            item.find(this.options.fileItem.selectors.size).html(this._formatSize(fileSize));\r\n\r\n            this._velm.$(this.options.selectors.fileList).append(item);\r\n\r\n            this._updateFileList();\r\n        },\r\n    \r\n        _updateFileList : function ()  {\r\n            var selectors = this.options.selectors,\r\n                itemSelectors = this.options.fileItem.selectors,\r\n                files = this._velm.$(selectors.fileList).find(selectors.fileItem);\r\n\r\n            var with_files_elements = this._velm.$(selectors.cancelUploads + ',' + selectors.startUploads);\r\n            var without_files_elements = this._velm.$(selectors.nodata);\r\n            if (files.length > 0) {\r\n                with_files_elements.removeClass('hidden');\r\n                without_files_elements.addClass('hidden');\r\n            } else {\r\n                with_files_elements.addClass('hidden');\r\n                without_files_elements.removeClass('hidden');\r\n            }\r\n        },\r\n        \r\n        _updateFile: function ($item) {\r\n            var selectors = this.options.fileItem.selectors,\r\n                when_pending = $item.find(selectors.size + \",\" + selectors.cancel),\r\n                when_running = $item.find(selectors.progress + \",\" + selectors.cancel),\r\n                when_done = $item.find(selectors.message + \",\" + selectors.clear);\r\n\r\n            var status = $item.data(\"status\");    \r\n            if (status == \"pending\") {\r\n                when_running.add(when_done).addClass('hidden');\r\n                when_pending.removeClass('hidden');\r\n            } else if (status == \"running\") {\r\n                when_pending.add(when_done).addClass('hidden');\r\n                when_running.removeClass('hidden');\r\n            } else if (status == \"done\" || status == \"error\") {\r\n                when_pending.add(when_running).addClass('hidden');\r\n                when_done.removeClass('hidden');\r\n            }\r\n        },\r\n\r\n        _getItemByFileId: function(id){\r\n            var selectors = this.options.selectors,\r\n                files = this._velm.$(selectors.fileList).find(selectors.fileItem),\r\n                item;\r\n\r\n            // there can't be txt nodes in dynamically created list\r\n            // and we can  use nextSibling\r\n\r\n            for (var i = 0; i<files.length;i++){\r\n                var item2 = files[i];\r\n                if ($(item2).data(\"fileId\") == id) {\r\n                    item = item2;\r\n                    break;\r\n                }\r\n            }\r\n            if (item) {\r\n                return $(item);\r\n            }\r\n        },\r\n\r\n\r\n            \r\n        _addFiles: function(files){\r\n            for (var i=0; i<files.length; i++){\r\n                if ( !this._validateFile(files[i])){\r\n                    return;\r\n                }\r\n            }\r\n\r\n            for (var i=0; i<files.length; i++){\r\n                this._addFile(files[i]);\r\n            }\r\n        },\r\n\r\n        _addFile: function(file){\r\n            var id = this._handler.add(file);\r\n\r\n            this._filesInProgress++;\r\n            this._addToList(id);\r\n\r\n            //this._handler.upload(id, this.options.params);\r\n        },\r\n\r\n        _validateFile: function(file){\r\n            var name, size;\r\n\r\n            if (file.value){\r\n                // it is a file input\r\n                // get input value and remove path to normalize\r\n                name = file.value.replace(/.*(\\/|\\\\)/, \"\");\r\n            } else {\r\n                // fix missing properties in Safari\r\n                name = file.fileName != null ? file.fileName : file.name;\r\n                size = file.fileSize != null ? file.fileSize : file.size;\r\n            }\r\n\r\n            if (! this._isAllowedExtension(name)){\r\n                this._error('typeError', name);\r\n                return false;\r\n\r\n            } else if (size === 0){\r\n                this._error('emptyError', name);\r\n                return false;\r\n\r\n            } else if (size && this.options.sizeLimit && size > this.options.sizeLimit){\r\n                this._error('sizeError', name);\r\n                return false;\r\n\r\n            } else if (size && size < this.options.minSizeLimit){\r\n                this._error('minSizeError', name);\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        _error: function(code, fileName){\r\n            var message = this.options.messages[code];\r\n            function r(name, replacement){ message = message.replace(name, replacement); }\r\n\r\n            r('{file}', this._formatFileName(fileName));\r\n            r('{extensions}', this.options.allowedExtensions.join(', '));\r\n            r('{sizeLimit}', this._formatSize(this.options.sizeLimit));\r\n            r('{minSizeLimit}', this._formatSize(this.options.minSizeLimit));\r\n\r\n            this.options.showMessage(message);\r\n        },\r\n\r\n        _formatFileName: function(name){\r\n            if (name.length > 33){\r\n                name = name.slice(0, 19) + '...' + name.slice(-13);\r\n            }\r\n            return name;\r\n        },\r\n\r\n        _isAllowedExtension: function(fileName){\r\n            var ext = (-1 !== fileName.indexOf('.')) ? fileName.replace(/.*[.]/, '').toLowerCase() : '';\r\n            var allowed = this.options.allowedExtensions;\r\n\r\n            if (!allowed.length){return true;}\r\n\r\n            for (var i=0; i<allowed.length; i++){\r\n                if (allowed[i].toLowerCase() == ext){ return true;}\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        _formatSize: function(bytes){\r\n            var i = -1;\r\n            do {\r\n                bytes = bytes / 1024;\r\n                i++;\r\n            } while (bytes > 99);\r\n\r\n            return Math.max(bytes, 0.1).toFixed(1) + ['KB', 'MB', 'GB', 'TB', 'PB', 'EB'][i];\r\n        }\r\n\r\n    });\r\n\r\n   plugins.register(MultiUploader);\r\n\r\n\r\n\r\n\treturn files.MultiUploader = MultiUploader;\r\n});\ndefine('skylark-domx-files/main',[\r\n\t\"./files\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\",\r\n\t\"./dropzone\",\r\n\t\"./pastezone\",\r\n\t\"./picker\",\r\n\t\"./MultiUploader\"\r\n],function(files,velm,$){\r\n\tvelm.delegate([\r\n\t\t\"dropzone\",\r\n\t\t\"pastezone\",\r\n\t\t\"picker\"\r\n\t],files);\r\n\r\n    $.fn.pastezone = $.wraps.wrapper_every_act(files.pastezone, files);\r\n    $.fn.dropzone = $.wraps.wrapper_every_act(files.dropzone, files);\r\n    $.fn.picker = $.wraps.wrapper_every_act(files.picker, files);\r\n\r\n\treturn files;\r\n});\ndefine('skylark-domx-files', ['skylark-domx-files/main'], function (main) { return main; });\n\ndefine('skylark-data-color/colors',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n],function(skylark,langx) {\r\n    /*\r\n     * This module uses the following open source code:\r\n     *   TinyColor v1.1.2\r\n     *     https://github.com/bgrins/TinyColor\r\n     *     Brian Grinstead, MIT License\r\n     */\r\n\r\n    var colors = skylark.colors =  skylark.colors || {};\r\n\r\n    var trimLeft = /^[\\s,#]+/,\r\n        trimRight = /\\s+$/,\r\n        math = Math,\r\n        mathRound = math.round,\r\n        mathMin = math.min,\r\n        mathMax = math.max,\r\n        mathRandom = math.random;\r\n\r\n\r\n     // Big List of Colors\r\n    // ------------------\r\n    // <http://www.w3.org/TR/css3-color/#svg-color>\r\n    var names = colors.names = {\r\n        aliceblue: \"f0f8ff\",\r\n        antiquewhite: \"faebd7\",\r\n        aqua: \"0ff\",\r\n        aquamarine: \"7fffd4\",\r\n        azure: \"f0ffff\",\r\n        beige: \"f5f5dc\",\r\n        bisque: \"ffe4c4\",\r\n        black: \"000\",\r\n        blanchedalmond: \"ffebcd\",\r\n        blue: \"00f\",\r\n        blueviolet: \"8a2be2\",\r\n        brown: \"a52a2a\",\r\n        burlywood: \"deb887\",\r\n        burntsienna: \"ea7e5d\",\r\n        cadetblue: \"5f9ea0\",\r\n        chartreuse: \"7fff00\",\r\n        chocolate: \"d2691e\",\r\n        coral: \"ff7f50\",\r\n        cornflowerblue: \"6495ed\",\r\n        cornsilk: \"fff8dc\",\r\n        crimson: \"dc143c\",\r\n        cyan: \"0ff\",\r\n        darkblue: \"00008b\",\r\n        darkcyan: \"008b8b\",\r\n        darkgoldenrod: \"b8860b\",\r\n        darkgray: \"a9a9a9\",\r\n        darkgreen: \"006400\",\r\n        darkgrey: \"a9a9a9\",\r\n        darkkhaki: \"bdb76b\",\r\n        darkmagenta: \"8b008b\",\r\n        darkolivegreen: \"556b2f\",\r\n        darkorange: \"ff8c00\",\r\n        darkorchid: \"9932cc\",\r\n        darkred: \"8b0000\",\r\n        darksalmon: \"e9967a\",\r\n        darkseagreen: \"8fbc8f\",\r\n        darkslateblue: \"483d8b\",\r\n        darkslategray: \"2f4f4f\",\r\n        darkslategrey: \"2f4f4f\",\r\n        darkturquoise: \"00ced1\",\r\n        darkviolet: \"9400d3\",\r\n        deeppink: \"ff1493\",\r\n        deepskyblue: \"00bfff\",\r\n        dimgray: \"696969\",\r\n        dimgrey: \"696969\",\r\n        dodgerblue: \"1e90ff\",\r\n        firebrick: \"b22222\",\r\n        floralwhite: \"fffaf0\",\r\n        forestgreen: \"228b22\",\r\n        fuchsia: \"f0f\",\r\n        gainsboro: \"dcdcdc\",\r\n        ghostwhite: \"f8f8ff\",\r\n        gold: \"ffd700\",\r\n        goldenrod: \"daa520\",\r\n        gray: \"808080\",\r\n        green: \"008000\",\r\n        greenyellow: \"adff2f\",\r\n        grey: \"808080\",\r\n        honeydew: \"f0fff0\",\r\n        hotpink: \"ff69b4\",\r\n        indianred: \"cd5c5c\",\r\n        indigo: \"4b0082\",\r\n        ivory: \"fffff0\",\r\n        khaki: \"f0e68c\",\r\n        lavender: \"e6e6fa\",\r\n        lavenderblush: \"fff0f5\",\r\n        lawngreen: \"7cfc00\",\r\n        lemonchiffon: \"fffacd\",\r\n        lightblue: \"add8e6\",\r\n        lightcoral: \"f08080\",\r\n        lightcyan: \"e0ffff\",\r\n        lightgoldenrodyellow: \"fafad2\",\r\n        lightgray: \"d3d3d3\",\r\n        lightgreen: \"90ee90\",\r\n        lightgrey: \"d3d3d3\",\r\n        lightpink: \"ffb6c1\",\r\n        lightsalmon: \"ffa07a\",\r\n        lightseagreen: \"20b2aa\",\r\n        lightskyblue: \"87cefa\",\r\n        lightslategray: \"789\",\r\n        lightslategrey: \"789\",\r\n        lightsteelblue: \"b0c4de\",\r\n        lightyellow: \"ffffe0\",\r\n        lime: \"0f0\",\r\n        limegreen: \"32cd32\",\r\n        linen: \"faf0e6\",\r\n        magenta: \"f0f\",\r\n        maroon: \"800000\",\r\n        mediumaquamarine: \"66cdaa\",\r\n        mediumblue: \"0000cd\",\r\n        mediumorchid: \"ba55d3\",\r\n        mediumpurple: \"9370db\",\r\n        mediumseagreen: \"3cb371\",\r\n        mediumslateblue: \"7b68ee\",\r\n        mediumspringgreen: \"00fa9a\",\r\n        mediumturquoise: \"48d1cc\",\r\n        mediumvioletred: \"c71585\",\r\n        midnightblue: \"191970\",\r\n        mintcream: \"f5fffa\",\r\n        mistyrose: \"ffe4e1\",\r\n        moccasin: \"ffe4b5\",\r\n        navajowhite: \"ffdead\",\r\n        navy: \"000080\",\r\n        oldlace: \"fdf5e6\",\r\n        olive: \"808000\",\r\n        olivedrab: \"6b8e23\",\r\n        orange: \"ffa500\",\r\n        orangered: \"ff4500\",\r\n        orchid: \"da70d6\",\r\n        palegoldenrod: \"eee8aa\",\r\n        palegreen: \"98fb98\",\r\n        paleturquoise: \"afeeee\",\r\n        palevioletred: \"db7093\",\r\n        papayawhip: \"ffefd5\",\r\n        peachpuff: \"ffdab9\",\r\n        peru: \"cd853f\",\r\n        pink: \"ffc0cb\",\r\n        plum: \"dda0dd\",\r\n        powderblue: \"b0e0e6\",\r\n        purple: \"800080\",\r\n        rebeccapurple: \"663399\",\r\n        red: \"f00\",\r\n        rosybrown: \"bc8f8f\",\r\n        royalblue: \"4169e1\",\r\n        saddlebrown: \"8b4513\",\r\n        salmon: \"fa8072\",\r\n        sandybrown: \"f4a460\",\r\n        seagreen: \"2e8b57\",\r\n        seashell: \"fff5ee\",\r\n        sienna: \"a0522d\",\r\n        silver: \"c0c0c0\",\r\n        skyblue: \"87ceeb\",\r\n        slateblue: \"6a5acd\",\r\n        slategray: \"708090\",\r\n        slategrey: \"708090\",\r\n        snow: \"fffafa\",\r\n        springgreen: \"00ff7f\",\r\n        steelblue: \"4682b4\",\r\n        tan: \"d2b48c\",\r\n        teal: \"008080\",\r\n        thistle: \"d8bfd8\",\r\n        tomato: \"ff6347\",\r\n        turquoise: \"40e0d0\",\r\n        violet: \"ee82ee\",\r\n        wheat: \"f5deb3\",\r\n        white: \"fff\",\r\n        whitesmoke: \"f5f5f5\",\r\n        yellow: \"ff0\",\r\n        yellowgreen: \"9acd32\"\r\n    };\r\n\r\n    // Make it easy to access colors via `hexNames[hex]`\r\n    var hexNames = colors.hexNames = flip(names);\r\n\r\n\r\n    // Utilities\r\n    // ---------\r\n\r\n    // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\r\n    function flip(o) {\r\n        var flipped = { };\r\n        for (var i in o) {\r\n            if (o.hasOwnProperty(i)) {\r\n                flipped[o[i]] = i;\r\n            }\r\n        }\r\n        return flipped;\r\n    }\r\n       \r\n\r\n\r\n    // Given a string or object, convert that input to RGB\r\n    // Possible string inputs:\r\n    //\r\n    //     \"red\"\r\n    //     \"#f00\" or \"f00\"\r\n    //     \"#ff0000\" or \"ff0000\"\r\n    //     \"#ff000000\" or \"ff000000\"\r\n    //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\r\n    //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\r\n    //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\r\n    //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\r\n    //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\r\n    //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\r\n    //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\r\n    //\r\n    function inputToRGB(color) {\r\n\r\n        var rgb = { r: 0, g: 0, b: 0 };\r\n        var a = 1;\r\n        var ok = false;\r\n        var format = false;\r\n\r\n        if (typeof color == \"string\") {\r\n            color = stringInputToObject(color);\r\n        }\r\n\r\n        if (typeof color == \"object\") {\r\n            if (color.hasOwnProperty(\"r\") && color.hasOwnProperty(\"g\") && color.hasOwnProperty(\"b\")) {\r\n                rgb = rgbToRgb(color.r, color.g, color.b);\r\n                ok = true;\r\n                format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\r\n            }\r\n            else if (color.hasOwnProperty(\"h\") && color.hasOwnProperty(\"s\") && color.hasOwnProperty(\"v\")) {\r\n                color.s = convertToPercentage(color.s);\r\n                color.v = convertToPercentage(color.v);\r\n                rgb = hsvToRgb(color.h, color.s, color.v);\r\n                ok = true;\r\n                format = \"hsv\";\r\n            }\r\n            else if (color.hasOwnProperty(\"h\") && color.hasOwnProperty(\"s\") && color.hasOwnProperty(\"l\")) {\r\n                color.s = convertToPercentage(color.s);\r\n                color.l = convertToPercentage(color.l);\r\n                rgb = hslToRgb(color.h, color.s, color.l);\r\n                ok = true;\r\n                format = \"hsl\";\r\n            }\r\n\r\n            if (color.hasOwnProperty(\"a\")) {\r\n                a = color.a;\r\n            }\r\n        }\r\n\r\n        a = boundAlpha(a);\r\n\r\n        return {\r\n            ok: ok,\r\n            format: color.format || format,\r\n            r: mathMin(255, mathMax(rgb.r, 0)),\r\n            g: mathMin(255, mathMax(rgb.g, 0)),\r\n            b: mathMin(255, mathMax(rgb.b, 0)),\r\n            a: a\r\n        };\r\n    }\r\n\r\n\r\n    // Conversion Functions\r\n    // --------------------\r\n\r\n    // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\r\n    // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\r\n\r\n    // `rgbToRgb`\r\n    // Handle bounds / percentage checking to conform to CSS color spec\r\n    // <http://www.w3.org/TR/css3-color/>\r\n    // *Assumes:* r, g, b in [0, 255] or [0, 1]\r\n    // *Returns:* { r, g, b } in [0, 255]\r\n    function rgbToRgb(r, g, b){\r\n        return {\r\n            r: bound01(r, 255) * 255,\r\n            g: bound01(g, 255) * 255,\r\n            b: bound01(b, 255) * 255\r\n        };\r\n    }\r\n\r\n    // `rgbToHsl`\r\n    // Converts an RGB color value to HSL.\r\n    // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\r\n    // *Returns:* { h, s, l } in [0,1]\r\n    function rgbToHsl(r, g, b) {\r\n\r\n        r = bound01(r, 255);\r\n        g = bound01(g, 255);\r\n        b = bound01(b, 255);\r\n\r\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if(max == min) {\r\n            h = s = 0; // achromatic\r\n        }\r\n        else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch(max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n\r\n            h /= 6;\r\n        }\r\n\r\n        return { h: h, s: s, l: l };\r\n    }\r\n\r\n    // `hslToRgb`\r\n    // Converts an HSL color value to RGB.\r\n    // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\r\n    // *Returns:* { r, g, b } in the set [0, 255]\r\n    function hslToRgb(h, s, l) {\r\n        var r, g, b;\r\n\r\n        h = bound01(h, 360);\r\n        s = bound01(s, 100);\r\n        l = bound01(l, 100);\r\n\r\n        function hue2rgb(p, q, t) {\r\n            if(t < 0) t += 1;\r\n            if(t > 1) t -= 1;\r\n            if(t < 1/6) return p + (q - p) * 6 * t;\r\n            if(t < 1/2) return q;\r\n            if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        if(s === 0) {\r\n            r = g = b = l; // achromatic\r\n        }\r\n        else {\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n\r\n        return { r: r * 255, g: g * 255, b: b * 255 };\r\n    }\r\n\r\n    // `rgbToHsv`\r\n    // Converts an RGB color value to HSV\r\n    // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\r\n    // *Returns:* { h, s, v } in [0,1]\r\n    function rgbToHsv(r, g, b) {\r\n\r\n        r = bound01(r, 255);\r\n        g = bound01(g, 255);\r\n        b = bound01(b, 255);\r\n\r\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\r\n        var h, s, v = max;\r\n\r\n        var d = max - min;\r\n        s = max === 0 ? 0 : d / max;\r\n\r\n        if(max == min) {\r\n            h = 0; // achromatic\r\n        }\r\n        else {\r\n            switch(max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n        return { h: h, s: s, v: v };\r\n    }\r\n\r\n    // `hsvToRgb`\r\n    // Converts an HSV color value to RGB.\r\n    // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\r\n    // *Returns:* { r, g, b } in the set [0, 255]\r\n     function hsvToRgb(h, s, v) {\r\n\r\n        h = bound01(h, 360) * 6;\r\n        s = bound01(s, 100);\r\n        v = bound01(v, 100);\r\n\r\n        var i = math.floor(h),\r\n            f = h - i,\r\n            p = v * (1 - s),\r\n            q = v * (1 - f * s),\r\n            t = v * (1 - (1 - f) * s),\r\n            mod = i % 6,\r\n            r = [v, q, p, p, t, v][mod],\r\n            g = [t, v, v, q, p, p][mod],\r\n            b = [p, p, t, v, v, q][mod];\r\n\r\n        return { r: r * 255, g: g * 255, b: b * 255 };\r\n    }\r\n\r\n    // `rgbToHex`\r\n    // Converts an RGB color to hex\r\n    // Assumes r, g, and b are contained in the set [0, 255]\r\n    // Returns a 3 or 6 character hex\r\n    function rgbToHex(r, g, b, allow3Char) {\r\n\r\n        var hex = [\r\n            pad2(mathRound(r).toString(16)),\r\n            pad2(mathRound(g).toString(16)),\r\n            pad2(mathRound(b).toString(16))\r\n        ];\r\n\r\n        // Return a 3 character hex if possible\r\n        if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\r\n            return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\r\n        }\r\n\r\n        return hex.join(\"\");\r\n    }\r\n\r\n    // `rgbaToHex`\r\n    // Converts an RGBA color plus alpha transparency to hex\r\n    // Assumes r, g, b and a are contained in the set [0, 255]\r\n    // Returns an 8 character hex\r\n    function rgbaToHex(r, g, b, a) {\r\n\r\n        var hex = [\r\n            pad2(convertDecimalToHex(a)),\r\n            pad2(mathRound(r).toString(16)),\r\n            pad2(mathRound(g).toString(16)),\r\n            pad2(mathRound(b).toString(16))\r\n        ];\r\n\r\n        return hex.join(\"\");\r\n    }\r\n\r\n\r\n\r\n    // Return a valid alpha value [0,1] with all invalid values being set to 1\r\n    function boundAlpha(a) {\r\n        a = parseFloat(a);\r\n\r\n        if (isNaN(a) || a < 0 || a > 1) {\r\n            a = 1;\r\n        }\r\n\r\n        return a;\r\n    }\r\n\r\n    // Take input from [0, n] and return it as [0, 1]\r\n    function bound01(n, max) {\r\n        if (isOnePointZero(n)) { n = \"100%\"; }\r\n\r\n        var processPercent = isPercentage(n);\r\n        n = mathMin(max, mathMax(0, parseFloat(n)));\r\n\r\n        // Automatically convert percentage into number\r\n        if (processPercent) {\r\n            n = parseInt(n * max, 10) / 100;\r\n        }\r\n\r\n        // Handle floating point rounding errors\r\n        if ((math.abs(n - max) < 0.000001)) {\r\n            return 1;\r\n        }\r\n\r\n        // Convert into [0, 1] range if it isn't already\r\n        return (n % max) / parseFloat(max);\r\n    }\r\n\r\n    // Force a number between 0 and 1\r\n    function clamp01(val) {\r\n        return mathMin(1, mathMax(0, val));\r\n    }\r\n\r\n    // Parse a base-16 hex value into a base-10 integer\r\n    function parseIntFromHex(val) {\r\n        return parseInt(val, 16);\r\n    }\r\n\r\n    // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\r\n    // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\r\n    function isOnePointZero(n) {\r\n        return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\r\n    }\r\n\r\n    // Check to see if string passed in is a percentage\r\n    function isPercentage(n) {\r\n        return typeof n === \"string\" && n.indexOf('%') != -1;\r\n    }\r\n\r\n    // Force a hex value to have 2 characters\r\n    function pad2(c) {\r\n        return c.length == 1 ? '0' + c : '' + c;\r\n    }\r\n\r\n    // Replace a decimal with it's percentage value\r\n    function convertToPercentage(n) {\r\n        if (n <= 1) {\r\n            n = (n * 100) + \"%\";\r\n        }\r\n\r\n        return n;\r\n    }\r\n\r\n    // Converts a decimal to a hex value\r\n    function convertDecimalToHex(d) {\r\n        return Math.round(parseFloat(d) * 255).toString(16);\r\n    }\r\n    // Converts a hex value to a decimal\r\n    function convertHexToDecimal(h) {\r\n        return (parseIntFromHex(h) / 255);\r\n    }\r\n\r\n    var matchers = (function() {\r\n\r\n        // <http://www.w3.org/TR/css3-values/#integers>\r\n        var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\r\n\r\n        // <http://www.w3.org/TR/css3-values/#number-value>\r\n        var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\r\n\r\n        // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\r\n        var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\r\n\r\n        // Actual matching.\r\n        // Parentheses and commas are optional, but not required.\r\n        // Whitespace can take the place of commas or opening paren\r\n        var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\r\n        var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\r\n\r\n        return {\r\n            rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\r\n            rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\r\n            hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\r\n            hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\r\n            hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\r\n            hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\r\n            hex3: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n            hex6: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\r\n            hex8: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\r\n        };\r\n    })();\r\n\r\n    // `stringInputToObject`\r\n    // Permissive string parsing.  Take in a number of formats, and output an object\r\n    // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\r\n    function stringInputToObject(color) {\r\n\r\n        color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\r\n        var named = false;\r\n        if (names[color]) {\r\n            color = names[color];\r\n            named = true;\r\n        }\r\n        else if (color == 'transparent') {\r\n            return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\r\n        }\r\n\r\n        // Try to match string input using regular expressions.\r\n        // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\r\n        // Just return an object and let the conversion functions handle that.\r\n        // This way the result will be the same whether the tinycolor is initialized with string or object.\r\n        var match;\r\n        if ((match = matchers.rgb.exec(color))) {\r\n            return { r: match[1], g: match[2], b: match[3] };\r\n        }\r\n        if ((match = matchers.rgba.exec(color))) {\r\n            return { r: match[1], g: match[2], b: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hsl.exec(color))) {\r\n            return { h: match[1], s: match[2], l: match[3] };\r\n        }\r\n        if ((match = matchers.hsla.exec(color))) {\r\n            return { h: match[1], s: match[2], l: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hsv.exec(color))) {\r\n            return { h: match[1], s: match[2], v: match[3] };\r\n        }\r\n        if ((match = matchers.hsva.exec(color))) {\r\n            return { h: match[1], s: match[2], v: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hex8.exec(color))) {\r\n            return {\r\n                a: convertHexToDecimal(match[1]),\r\n                r: parseIntFromHex(match[2]),\r\n                g: parseIntFromHex(match[3]),\r\n                b: parseIntFromHex(match[4]),\r\n                format: named ? \"name\" : \"hex8\"\r\n            };\r\n        }\r\n        if ((match = matchers.hex6.exec(color))) {\r\n            return {\r\n                r: parseIntFromHex(match[1]),\r\n                g: parseIntFromHex(match[2]),\r\n                b: parseIntFromHex(match[3]),\r\n                format: named ? \"name\" : \"hex\"\r\n            };\r\n        }\r\n        if ((match = matchers.hex3.exec(color))) {\r\n            return {\r\n                r: parseIntFromHex(match[1] + '' + match[1]),\r\n                g: parseIntFromHex(match[2] + '' + match[2]),\r\n                b: parseIntFromHex(match[3] + '' + match[3]),\r\n                format: named ? \"name\" : \"hex\"\r\n            };\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    langx.mixin(colors,{\r\n        inputToRGB : inputToRGB,\r\n        rgbToRgb : rgbToRgb,\r\n        rgbToHsl : rgbToHsl,\r\n        hslToRgb : hslToRgb,\r\n        rgbToHsv : rgbToHsv,\r\n        hsvToRgb : hsvToRgb,\r\n        rgbToHex : rgbToHex,\r\n        rgbaToHex : rgbaToHex,\r\n        boundAlpha : boundAlpha,\r\n        bound01 : bound01,\r\n        clamp01 : clamp01,\r\n        parseIntFromHex : parseIntFromHex,\r\n        isOnePointZero : isOnePointZero,\r\n        isPercentage : isPercentage,\r\n        pad2 : pad2,\r\n        convertToPercentage : convertToPercentage,\r\n        convertHexToDecimal : convertHexToDecimal,\r\n        stringInputToObject : stringInputToObject\r\n\r\n    });\r\n\r\n    return skylark.attach(\"data.colors\",colors);\r\n\r\n});\r\n\ndefine('skylark-data-color/Color',[\r\n    \"skylark-langx/langx\",\r\n    \"./colors\"\r\n],function(langx,colors) {\r\n    /*\r\n     * This module uses the following open source code:\r\n     *   TinyColor v1.1.2\r\n     *     https://github.com/bgrins/TinyColor\r\n     *     Brian Grinstead, MIT License\r\n     */\r\n\r\n    var inputToRGB = colors.inputToRGB,\r\n        rgbToRgb = colors.rgbToRgb,\r\n        rgbToHsl = colors.rgbToHsl,\r\n        hslToRgb = colors.hslToRgb,\r\n        rgbToHsv = colors.rgbToHsv,\r\n        rgbToHex = colors.rgbToHex,\r\n        rgbaToHex = colors.rgbaToHex,\r\n        boundAlpha = colors.boundAlpha,\r\n        bound01 = colors.bound01,\r\n        clamp01 = colors.clamp01,\r\n        parseIntFromHex = colors.parseIntFromHex,\r\n        isOnePointZero = colors.isOnePointZero,\r\n        isPercentage = colors.isPercentage,\r\n        pad2 = colors.pad2,\r\n        convertToPercentage = colors.convertToPercentage,\r\n        convertHexToDecimal = colors.convertHexToDecimal,\r\n        stringInputToObject = colors.stringInputToObject,\r\n        hexNames = colors.hexNames;\r\n\r\n    var tinyCounter = 0,\r\n        math = Math,\r\n        mathRound = math.round,\r\n        mathMin = math.min,\r\n        mathMax = math.max,\r\n        mathRandom = math.random;\r\n\r\n\tvar Color = colors.Color = langx.klass({\r\n\t\tinit : function(color, opts) {\r\n\t        color = (color) ? color : '';\r\n    \t    opts = opts || { };\r\n\r\n\t        // If input is already a Color, return itself\r\n\t        if (color instanceof Color) {\r\n\t           return color;\r\n\t        }\r\n\r\n\t        var rgb = inputToRGB(color);\r\n\t        this._originalInput = color,\r\n\t        this._r = rgb.r,\r\n\t        this._g = rgb.g,\r\n\t        this._b = rgb.b,\r\n\t        this._a = rgb.a,\r\n\t        this._roundA = mathRound(1000 * this._a) / 1000,\r\n\t        this._format = opts.format || rgb.format;\r\n\t        this._gradientType = opts.gradientType;\r\n\r\n\t        // Don't let the range of [0,255] come back in [0,1].\r\n\t        // Potentially lose a little bit of precision here, but will fix issues where\r\n\t        // .5 gets interpreted as half of the total, instead of half of 1\r\n\t        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\r\n\t        if (this._r < 1) { this._r = mathRound(this._r); }\r\n\t        if (this._g < 1) { this._g = mathRound(this._g); }\r\n\t        if (this._b < 1) { this._b = mathRound(this._b); }\r\n\r\n\t        this._ok = rgb.ok;\r\n\t        this._tc_id = tinyCounter++;\r\n\t    },\r\n\r\n        isDark: function() {\r\n            return this.getBrightness() < 128;\r\n        },\r\n        isLight: function() {\r\n            return !this.isDark();\r\n        },\r\n        isValid: function() {\r\n            return this._ok;\r\n        },\r\n        getOriginalInput: function() {\r\n          return this._originalInput;\r\n        },\r\n        getFormat: function() {\r\n            return this._format;\r\n        },\r\n        getAlpha: function() {\r\n            return this._a;\r\n        },\r\n        getBrightness: function() {\r\n            var rgb = this.toRgb();\r\n            return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\r\n        },\r\n        setAlpha: function(value) {\r\n            this._a = boundAlpha(value);\r\n            this._roundA = mathRound(1000 * this._a) / 1000;\r\n            return this;\r\n        },\r\n        toHsv: function() {\r\n            var hsv = rgbToHsv(this._r, this._g, this._b);\r\n            return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\r\n        },\r\n        toHsvString: function() {\r\n            var hsv = rgbToHsv(this._r, this._g, this._b);\r\n            var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\r\n            return (this._a == 1) ?\r\n              \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\r\n              \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\r\n        },\r\n        toHsl: function() {\r\n            var hsl = rgbToHsl(this._r, this._g, this._b);\r\n            return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\r\n        },\r\n        toHslString: function() {\r\n            var hsl = rgbToHsl(this._r, this._g, this._b);\r\n            var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\r\n            return (this._a == 1) ?\r\n              \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\r\n              \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\r\n        },\r\n        toHex: function(allow3Char) {\r\n            return rgbToHex(this._r, this._g, this._b, allow3Char);\r\n        },\r\n        toHexString: function(allow3Char) {\r\n            return '#' + this.toHex(allow3Char);\r\n        },\r\n        toHex8: function() {\r\n            return rgbaToHex(this._r, this._g, this._b, this._a);\r\n        },\r\n        toHex8String: function() {\r\n            return '#' + this.toHex8();\r\n        },\r\n        toRgb: function() {\r\n            return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\r\n        },\r\n        toRgbString: function() {\r\n            return (this._a == 1) ?\r\n              \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\r\n              \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\r\n        },\r\n        toPercentageRgb: function() {\r\n            return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\r\n        },\r\n        toPercentageRgbString: function() {\r\n            return (this._a == 1) ?\r\n              \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\r\n              \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\r\n        },\r\n        toName: function() {\r\n            if (this._a === 0) {\r\n                return \"transparent\";\r\n            }\r\n\r\n            if (this._a < 1) {\r\n                return false;\r\n            }\r\n\r\n            return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\r\n        },\r\n        toFilter: function(secondColor) {\r\n            var hex8String = '#' + rgbaToHex(this._r, this._g, this._b, this._a);\r\n            var secondHex8String = hex8String;\r\n            var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\r\n\r\n            if (secondColor) {\r\n                var s = Color(secondColor);\r\n                secondHex8String = s.toHex8String();\r\n            }\r\n\r\n            return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\r\n        },\r\n        toString: function(format) {\r\n            var formatSet = !!format;\r\n            format = format || this._format;\r\n\r\n            var formattedString = false;\r\n            var hasAlpha = this._a < 1 && this._a >= 0;\r\n            var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"name\");\r\n\r\n            if (needsAlphaFormat) {\r\n                // Special case for \"transparent\", all other non-alpha formats\r\n                // will return rgba when there is transparency.\r\n                if (format === \"name\" && this._a === 0) {\r\n                    return this.toName();\r\n                }\r\n                return this.toRgbString();\r\n            }\r\n            if (format === \"rgb\") {\r\n                formattedString = this.toRgbString();\r\n            }\r\n            if (format === \"prgb\") {\r\n                formattedString = this.toPercentageRgbString();\r\n            }\r\n            if (format === \"hex\" || format === \"hex6\") {\r\n                formattedString = this.toHexString();\r\n            }\r\n            if (format === \"hex3\") {\r\n                formattedString = this.toHexString(true);\r\n            }\r\n            if (format === \"hex8\") {\r\n                formattedString = this.toHex8String();\r\n            }\r\n            if (format === \"name\") {\r\n                formattedString = this.toName();\r\n            }\r\n            if (format === \"hsl\") {\r\n                formattedString = this.toHslString();\r\n            }\r\n            if (format === \"hsv\") {\r\n                formattedString = this.toHsvString();\r\n            }\r\n\r\n            return formattedString || this.toHexString();\r\n        },\r\n\r\n        _applyModification: function(fn, args) {\r\n            var color = fn.apply(null, [this].concat([].slice.call(args)));\r\n            this._r = color._r;\r\n            this._g = color._g;\r\n            this._b = color._b;\r\n            this.setAlpha(color._a);\r\n            return this;\r\n        },\r\n        lighten: function() {\r\n            return this._applyModification(lighten, arguments);\r\n        },\r\n        brighten: function() {\r\n            return this._applyModification(brighten, arguments);\r\n        },\r\n        darken: function() {\r\n            return this._applyModification(darken, arguments);\r\n        },\r\n        desaturate: function() {\r\n            return this._applyModification(desaturate, arguments);\r\n        },\r\n        saturate: function() {\r\n            return this._applyModification(saturate, arguments);\r\n        },\r\n        greyscale: function() {\r\n            return this._applyModification(greyscale, arguments);\r\n        },\r\n        spin: function() {\r\n            return this._applyModification(spin, arguments);\r\n        },\r\n\r\n        _applyCombination: function(fn, args) {\r\n            return fn.apply(null, [this].concat([].slice.call(args)));\r\n        },\r\n        analogous: function() {\r\n            return this._applyCombination(analogous, arguments);\r\n        },\r\n        complement: function() {\r\n            return this._applyCombination(complement, arguments);\r\n        },\r\n        monochromatic: function() {\r\n            return this._applyCombination(monochromatic, arguments);\r\n        },\r\n        splitcomplement: function() {\r\n            return this._applyCombination(splitcomplement, arguments);\r\n        },\r\n        triad: function() {\r\n            return this._applyCombination(triad, arguments);\r\n        },\r\n        tetrad: function() {\r\n            return this._applyCombination(tetrad, arguments);\r\n        }\r\n\t});\r\n\r\n\r\n\r\n    // If input is an object, force 1 into \"1.0\" to handle ratios properly\r\n    // String input requires \"1.0\" as input, so 1 will be treated as 1\r\n    Color.fromRatio = function(color, opts) {\r\n        if (typeof color == \"object\") {\r\n            var newColor = {};\r\n            for (var i in color) {\r\n                if (color.hasOwnProperty(i)) {\r\n                    if (i === \"a\") {\r\n                        newColor[i] = color[i];\r\n                    }\r\n                    else {\r\n                        newColor[i] = convertToPercentage(color[i]);\r\n                    }\r\n                }\r\n            }\r\n            color = newColor;\r\n        }\r\n\r\n        return Color(color, opts);\r\n    };\r\n\r\n    // `equals`\r\n    // Can be called with any Color input\r\n    Color.equals = function (color1, color2) {\r\n        if (!color1 || !color2) { return false; }\r\n        return Color(color1).toRgbString() == Color(color2).toRgbString();\r\n    };\r\n    \r\n    Color.random = function() {\r\n        return Color.fromRatio({\r\n            r: mathRandom(),\r\n            g: mathRandom(),\r\n            b: mathRandom()\r\n        });\r\n    };\r\n\r\n   // Modification Functions\r\n    // ----------------------\r\n    // Thanks to less.js for some of the basics here\r\n    // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\r\n\r\n    function desaturate(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = Color(color).toHsl();\r\n        hsl.s -= amount / 100;\r\n        hsl.s = clamp01(hsl.s);\r\n        return Color(hsl);\r\n    }\r\n\r\n    function saturate(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = Color(color).toHsl();\r\n        hsl.s += amount / 100;\r\n        hsl.s = clamp01(hsl.s);\r\n        return Color(hsl);\r\n    }\r\n\r\n    function greyscale(color) {\r\n        return Color(color).desaturate(100);\r\n    }\r\n\r\n    function lighten (color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = Color(color).toHsl();\r\n        hsl.l += amount / 100;\r\n        hsl.l = clamp01(hsl.l);\r\n        return Color(hsl);\r\n    }\r\n\r\n    function brighten(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var rgb = Color(color).toRgb();\r\n        rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\r\n        rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\r\n        rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\r\n        return Color(rgb);\r\n    }\r\n\r\n    function darken (color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = Color(color).toHsl();\r\n        hsl.l -= amount / 100;\r\n        hsl.l = clamp01(hsl.l);\r\n        return Color(hsl);\r\n    }\r\n\r\n    // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\r\n    // Values outside of this range will be wrapped into this range.\r\n    function spin(color, amount) {\r\n        var hsl = Color(color).toHsl();\r\n        var hue = (mathRound(hsl.h) + amount) % 360;\r\n        hsl.h = hue < 0 ? 360 + hue : hue;\r\n        return Color(hsl);\r\n    }\r\n\r\n    // Combination Functions\r\n    // ---------------------\r\n    // Thanks to jQuery xColor for some of the ideas behind these\r\n    // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\r\n\r\n    function complement(color) {\r\n        var hsl = Color(color).toHsl();\r\n        hsl.h = (hsl.h + 180) % 360;\r\n        return Color(hsl);\r\n    }\r\n\r\n    function triad(color) {\r\n        var hsl = Color(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            Color(color),\r\n            Color({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\r\n            Color({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\r\n        ];\r\n    }\r\n\r\n    function tetrad(color) {\r\n        var hsl = Color(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            Color(color),\r\n            Color({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\r\n            Color({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\r\n            Color({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\r\n        ];\r\n    }\r\n\r\n    function splitcomplement(color) {\r\n        var hsl = Color(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            Color(color),\r\n            Color({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\r\n            Color({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\r\n        ];\r\n    }\r\n\r\n    function analogous(color, results, slices) {\r\n        results = results || 6;\r\n        slices = slices || 30;\r\n\r\n        var hsl = Color(color).toHsl();\r\n        var part = 360 / slices;\r\n        var ret = [Color(color)];\r\n\r\n        for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\r\n            hsl.h = (hsl.h + part) % 360;\r\n            ret.push(Color(hsl));\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function monochromatic(color, results) {\r\n        results = results || 6;\r\n        var hsv = Color(color).toHsv();\r\n        var h = hsv.h, s = hsv.s, v = hsv.v;\r\n        var ret = [];\r\n        var modification = 1 / results;\r\n\r\n        while (results--) {\r\n            ret.push(Color({ h: h, s: s, v: v}));\r\n            v = (v + modification) % 1;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    // Utility Functions\r\n    // ---------------------\r\n\r\n    Color.mix = function(color1, color2, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 50);\r\n\r\n        var rgb1 = Color(color1).toRgb();\r\n        var rgb2 = Color(color2).toRgb();\r\n\r\n        var p = amount / 100;\r\n        var w = p * 2 - 1;\r\n        var a = rgb2.a - rgb1.a;\r\n\r\n        var w1;\r\n\r\n        if (w * a == -1) {\r\n            w1 = w;\r\n        } else {\r\n            w1 = (w + a) / (1 + w * a);\r\n        }\r\n\r\n        w1 = (w1 + 1) / 2;\r\n\r\n        var w2 = 1 - w1;\r\n\r\n        var rgba = {\r\n            r: rgb2.r * w1 + rgb1.r * w2,\r\n            g: rgb2.g * w1 + rgb1.g * w2,\r\n            b: rgb2.b * w1 + rgb1.b * w2,\r\n            a: rgb2.a * p  + rgb1.a * (1 - p)\r\n        };\r\n\r\n        return Color(rgba);\r\n    };\r\n\r\n\r\n    // Readability Functions\r\n    // ---------------------\r\n    // <http://www.w3.org/TR/AERT#color-contrast>\r\n\r\n    // `readability`\r\n    // Analyze the 2 colors and returns an object with the following properties:\r\n    //    `brightness`: difference in brightness between the two colors\r\n    //    `color`: difference in color/hue between the two colors\r\n    Color.readability = function(color1, color2) {\r\n        var c1 = Color(color1);\r\n        var c2 = Color(color2);\r\n        var rgb1 = c1.toRgb();\r\n        var rgb2 = c2.toRgb();\r\n        var brightnessA = c1.getBrightness();\r\n        var brightnessB = c2.getBrightness();\r\n        var colorDiff = (\r\n            Math.max(rgb1.r, rgb2.r) - Math.min(rgb1.r, rgb2.r) +\r\n            Math.max(rgb1.g, rgb2.g) - Math.min(rgb1.g, rgb2.g) +\r\n            Math.max(rgb1.b, rgb2.b) - Math.min(rgb1.b, rgb2.b)\r\n        );\r\n\r\n        return {\r\n            brightness: Math.abs(brightnessA - brightnessB),\r\n            color: colorDiff\r\n        };\r\n    };\r\n\r\n    // `readable`\r\n    // http://www.w3.org/TR/AERT#color-contrast\r\n    // Ensure that foreground and background color combinations provide sufficient contrast.\r\n    // *Example*\r\n    //    Color.isReadable(\"#000\", \"#111\") => false\r\n    Color.isReadable = function(color1, color2) {\r\n        var readability = Color.readability(color1, color2);\r\n        return readability.brightness > 125 && readability.color > 500;\r\n    };\r\n\r\n    // `mostReadable`\r\n    // Given a base color and a list of possible foreground or background\r\n    // colors for that base, returns the most readable color.\r\n    // *Example*\r\n    //    Color.mostReadable(\"#123\", [\"#fff\", \"#000\"]) => \"#000\"\r\n    Color.mostReadable = function(baseColor, colorList) {\r\n        var bestColor = null;\r\n        var bestScore = 0;\r\n        var bestIsReadable = false;\r\n        for (var i=0; i < colorList.length; i++) {\r\n\r\n            // We normalize both around the \"acceptable\" breaking point,\r\n            // but rank brightness constrast higher than hue.\r\n\r\n            var readability = Color.readability(baseColor, colorList[i]);\r\n            var readable = readability.brightness > 125 && readability.color > 500;\r\n            var score = 3 * (readability.brightness / 125) + (readability.color / 500);\r\n\r\n            if ((readable && ! bestIsReadable) ||\r\n                (readable && bestIsReadable && score > bestScore) ||\r\n                ((! readable) && (! bestIsReadable) && score > bestScore)) {\r\n                bestIsReadable = readable;\r\n                bestScore = score;\r\n                bestColor = Color(colorList[i]);\r\n            }\r\n        }\r\n        return bestColor;\r\n    };\r\n\r\n\r\n\treturn Color;\r\n});\r\n\ndefine('skylark-domx-colorpicker/draggable',[\r\n   \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\"\r\n],function(skylark, langx, browser, noder, eventer,finder, $) {\r\n    /**\r\n    * Lightweight drag helper.  Handles containment within the element, so that\r\n    * when dragging, the x is within [0,element.width] and y is within [0,element.height]\r\n    */\r\n    function draggable(element, onmove, onstart, onstop) {\r\n        onmove = onmove || function () { };\r\n        onstart = onstart || function () { };\r\n        onstop = onstop || function () { };\r\n        var doc = document;\r\n        var dragging = false;\r\n        var offset = {};\r\n        var maxHeight = 0;\r\n        var maxWidth = 0;\r\n        var hasTouch = ('ontouchstart' in window);\r\n\r\n        var duringDragEvents = {};\r\n        duringDragEvents[\"selectstart\"] = prevent;\r\n        duringDragEvents[\"dragstart\"] = prevent;\r\n        duringDragEvents[\"touchmove mousemove\"] = move;\r\n        duringDragEvents[\"touchend mouseup\"] = stop;\r\n\r\n        function prevent(e) {\r\n            if (e.stopPropagation) {\r\n                e.stopPropagation();\r\n            }\r\n            if (e.preventDefault) {\r\n                e.preventDefault();\r\n            }\r\n            e.returnValue = false;\r\n        }\r\n\r\n        function move(e) {\r\n            if (dragging) {\r\n                // Mouseup happened outside of window\r\n                if (browser.isIE && doc.documentMode < 9 && !e.button) {\r\n                    return stop();\r\n                }\r\n\r\n                var t0 = e.originalEvent && e.originalEvent.touches && e.originalEvent.touches[0];\r\n                var pageX = t0 && t0.pageX || e.pageX;\r\n                var pageY = t0 && t0.pageY || e.pageY;\r\n\r\n                var dragX = Math.max(0, Math.min(pageX - offset.left, maxWidth));\r\n                var dragY = Math.max(0, Math.min(pageY - offset.top, maxHeight));\r\n\r\n                if (hasTouch) {\r\n                    // Stop scrolling in iOS\r\n                    prevent(e);\r\n                }\r\n\r\n                onmove.apply(element, [dragX, dragY, e]);\r\n            }\r\n        }\r\n\r\n        function start(e) {\r\n            var rightclick = (e.which) ? (e.which == 3) : (e.button == 2);\r\n\r\n            if (!rightclick && !dragging) {\r\n                if (onstart.apply(element, arguments) !== false) {\r\n                    dragging = true;\r\n                    maxHeight = $(element).height();\r\n                    maxWidth = $(element).width();\r\n                    offset = $(element).offset();\r\n\r\n                    $(doc).on(duringDragEvents);\r\n                    $(doc.body).addClass(\"sp-dragging\");\r\n\r\n                    move(e);\r\n\r\n                    prevent(e);\r\n                }\r\n            }\r\n        }\r\n\r\n        function stop() {\r\n            if (dragging) {\r\n                $(doc).off(duringDragEvents);\r\n                $(doc.body).removeClass(\"sp-dragging\");\r\n\r\n                // Wait a tick before notifying observers to allow the click event\r\n                // to fire in Chrome.\r\n                setTimeout(function() {\r\n                    onstop.apply(element, arguments);\r\n                }, 0);\r\n            }\r\n            dragging = false;\r\n        }\r\n\r\n        $(element).on(\"touchstart mousedown\", start);\r\n    }\r\n\t\r\n\treturn draggable;\r\n});\ndefine('skylark-domx-colorpicker/ColorPicker',[\r\n   \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-data-color/colors\",\r\n    \"skylark-data-color/Color\",\r\n    \"./draggable\"\r\n],function(skylark, langx, browser, noder, finder, $,eventer, styler,fx,colors, Color,draggable) {\r\n    \"use strict\";\r\n\r\n    var noop = langx.noop;\r\n\r\n    var defaultOpts = {\r\n\r\n        // Callbacks\r\n        beforeShow: noop,\r\n        move: noop,\r\n        change: noop,\r\n        show: noop,\r\n        hide: noop,\r\n\r\n        // Options\r\n        color: false,\r\n        flat: false,\r\n        showInput: false,\r\n        allowEmpty: false,\r\n        showButtons: true,\r\n        clickoutFiresChange: true,\r\n        showInitial: false,\r\n        showPalette: false,\r\n        showPaletteOnly: false,\r\n        hideAfterPaletteSelect: false,\r\n        togglePaletteOnly: false,\r\n        showSelectionPalette: true,\r\n        localStorageKey: false,\r\n        appendTo: \"body\",\r\n        maxSelectionSize: 7,\r\n        cancelText: \"cancel\",\r\n        chooseText: \"choose\",\r\n        togglePaletteMoreText: \"more\",\r\n        togglePaletteLessText: \"less\",\r\n        clearText: \"Clear Color Selection\",\r\n        noColorSelectedText: \"No Color Selected\",\r\n        preferredFormat: false,\r\n        className: \"\", // Deprecated - use containerClassName and replacerClassName instead.\r\n        containerClassName: \"\",\r\n        replacerClassName: \"\",\r\n        showAlpha: false,\r\n        theme: \"sp-light\",\r\n        palette: [[\"#ffffff\", \"#000000\", \"#ff0000\", \"#ff8000\", \"#ffff00\", \"#008000\", \"#0000ff\", \"#4b0082\", \"#9400d3\"]],\r\n        selectionPalette: [],\r\n        disabled: false,\r\n        offset: null\r\n    },\r\n    pickers = [],\r\n    replaceInput = [\r\n        \"<div class='sp-replacer'>\",\r\n            \"<div class='sp-preview'><div class='sp-preview-inner'></div></div>\",\r\n            \"<div class='sp-dd'>&#9660;</div>\",\r\n        \"</div>\"\r\n    ].join(''),\r\n    \r\n    markup = (function () {\r\n\r\n        // IE7-10 does not support gradients with multiple stops, so we need to simulate\r\n        //  that for the rainbow slider with 8 divs that each have a single gradient\r\n        var gradientFix = \"\";\r\n        if (browser.isIE) {\r\n            for (var i = 1; i <= 6; i++) {\r\n                gradientFix += \"<div class='sp-\" + i + \"'></div>\";\r\n            }\r\n        }\r\n\r\n        return [\r\n            \"<div class='sp-container sp-hidden'>\",\r\n                \"<div class='sp-palette-container'>\",\r\n                    \"<div class='sp-palette sp-thumb sp-cf'></div>\",\r\n                    \"<div class='sp-palette-button-container sp-cf'>\",\r\n                        \"<button type='button' class='sp-palette-toggle'></button>\",\r\n                    \"</div>\",\r\n                \"</div>\",\r\n                \"<div class='sp-picker-container'>\",\r\n                    \"<div class='sp-top sp-cf'>\",\r\n                        \"<div class='sp-fill'></div>\",\r\n                        \"<div class='sp-top-inner'>\",\r\n                            \"<div class='sp-color'>\",\r\n                                \"<div class='sp-sat'>\",\r\n                                    \"<div class='sp-val'>\",\r\n                                        \"<div class='sp-dragger'></div>\",\r\n                                    \"</div>\",\r\n                                \"</div>\",\r\n                            \"</div>\",\r\n                            \"<div class='sp-clear sp-clear-display'>\",\r\n                            \"</div>\",\r\n                            \"<div class='sp-hue'>\",\r\n                                \"<div class='sp-slider'></div>\",\r\n                                gradientFix,\r\n                            \"</div>\",\r\n                        \"</div>\",\r\n                        \"<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>\",\r\n                    \"</div>\",\r\n                    \"<div class='sp-input-container sp-cf'>\",\r\n                        \"<input class='sp-input' type='text' spellcheck='false'  />\",\r\n                    \"</div>\",\r\n                    \"<div class='sp-initial sp-thumb sp-cf'></div>\",\r\n                    \"<div class='sp-button-container sp-cf'>\",\r\n                        \"<a class='sp-cancel' href='#'></a>\",\r\n                        \"<button type='button' class='sp-choose'></button>\",\r\n                    \"</div>\",\r\n                \"</div>\",\r\n            \"</div>\"\r\n        ].join(\"\");\r\n    })();\r\n\r\n    function paletteTemplate (p, color, className, opts) {\r\n        var html = [];\r\n        for (var i = 0; i < p.length; i++) {\r\n            var current = p[i];\r\n            if(current) {\r\n                var tiny = colors.Color(current);\r\n                var c = tiny.toHsl().l < 0.5 ? \"sp-thumb-el sp-thumb-dark\" : \"sp-thumb-el sp-thumb-light\";\r\n                c += (Color.equals(color, current)) ? \" sp-thumb-active\" : \"\";\r\n                var formattedString = tiny.toString(opts.preferredFormat || \"rgb\");\r\n                var swatchStyle = \"background-color:\" + tiny.toRgbString();\r\n                html.push('<span title=\"' + formattedString + '\" data-color=\"' + tiny.toRgbString() + '\" class=\"' + c + '\"><span class=\"sp-thumb-inner\" style=\"' + swatchStyle + ';\" /></span>');\r\n            } else {\r\n                var cls = 'sp-clear-display';\r\n                html.push($('<div />')\r\n                    .append($('<span data-color=\"\" style=\"background-color:transparent;\" class=\"' + cls + '\"></span>')\r\n                        .attr('title', opts.noColorSelectedText)\r\n                    )\r\n                    .html()\r\n                );\r\n            }\r\n        }\r\n        return \"<div class='sp-cf \" + className + \"'>\" + html.join('') + \"</div>\";\r\n    }\r\n\r\n    function hideAll() {\r\n        for (var i = 0; i < pickers.length; i++) {\r\n            if (pickers[i]) {\r\n                pickers[i].hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    function instanceOptions(o, callbackContext) {\r\n        var opts = langx.mixin({}, defaultOpts, o);\r\n        opts.callbacks = {\r\n            'move': bind(opts.move, callbackContext),\r\n            'change': bind(opts.change, callbackContext),\r\n            'show': bind(opts.show, callbackContext),\r\n            'hide': bind(opts.hide, callbackContext),\r\n            'beforeShow': bind(opts.beforeShow, callbackContext)\r\n        };\r\n\r\n        return opts;\r\n    }\r\n\r\n\r\n\r\n    var ColorPicker = langx.Evented.inherit({\r\n        klassName : \"ColorPicker\",\r\n\r\n        init:function (element, o) {\r\n\r\n            var opts = instanceOptions(o, element),\r\n                flat = opts.flat,\r\n                showSelectionPalette = opts.showSelectionPalette,\r\n                localStorageKey = opts.localStorageKey,\r\n                theme = opts.theme,\r\n                callbacks = opts.callbacks,\r\n                resize = langx.debounce(reflow, 10),\r\n                visible = false,\r\n                isDragging = false,\r\n                dragWidth = 0,\r\n                dragHeight = 0,\r\n                dragHelperHeight = 0,\r\n                slideHeight = 0,\r\n                slideWidth = 0,\r\n                alphaWidth = 0,\r\n                alphaSlideHelperWidth = 0,\r\n                slideHelperHeight = 0,\r\n                currentHue = 0,\r\n                currentSaturation = 0,\r\n                currentValue = 0,\r\n                currentAlpha = 1,\r\n                palette = [],\r\n                paletteArray = [],\r\n                paletteLookup = {},\r\n                selectionPalette = opts.selectionPalette.slice(0),\r\n                maxSelectionSize = opts.maxSelectionSize,\r\n                draggingClass = \"sp-dragging\",\r\n                shiftMovementDirection = null;\r\n\r\n            var doc = element.ownerDocument,\r\n                body = doc.body,\r\n                boundElement = $(element),\r\n                disabled = false,\r\n                container = $(markup, doc).addClass(theme),\r\n                pickerContainer = container.find(\".sp-picker-container\"),\r\n                dragger = container.find(\".sp-color\"),\r\n                dragHelper = container.find(\".sp-dragger\"),\r\n                slider = container.find(\".sp-hue\"),\r\n                slideHelper = container.find(\".sp-slider\"),\r\n                alphaSliderInner = container.find(\".sp-alpha-inner\"),\r\n                alphaSlider = container.find(\".sp-alpha\"),\r\n                alphaSlideHelper = container.find(\".sp-alpha-handle\"),\r\n                textInput = container.find(\".sp-input\"),\r\n                paletteContainer = container.find(\".sp-palette\"),\r\n                initialColorContainer = container.find(\".sp-initial\"),\r\n                cancelButton = container.find(\".sp-cancel\"),\r\n                clearButton = container.find(\".sp-clear\"),\r\n                chooseButton = container.find(\".sp-choose\"),\r\n                toggleButton = container.find(\".sp-palette-toggle\"),\r\n                isInput = boundElement.is(\"input\"),\r\n                isInputTypeColor = isInput && boundElement.attr(\"type\") === \"color\" && inputTypeColorSupport(),\r\n                shouldReplace = isInput && !flat,\r\n                replacer = (shouldReplace) ? $(replaceInput).addClass(theme).addClass(opts.className).addClass(opts.replacerClassName) : $([]),\r\n                offsetElement = (shouldReplace) ? replacer : boundElement,\r\n                previewElement = replacer.find(\".sp-preview-inner\"),\r\n                initialColor = opts.color || (isInput && boundElement.val()),\r\n                colorOnShow = false,\r\n                currentPreferredFormat = opts.preferredFormat,\r\n                clickoutFiresChange = !opts.showButtons || opts.clickoutFiresChange,\r\n                isEmpty = !initialColor,\r\n                allowEmpty = opts.allowEmpty && !isInputTypeColor;\r\n\r\n            function applyOptions() {\r\n\r\n                if (opts.showPaletteOnly) {\r\n                    opts.showPalette = true;\r\n                }\r\n\r\n                toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\r\n\r\n                if (opts.palette) {\r\n                    palette = opts.palette.slice(0);\r\n                    paletteArray = langx.isArray(palette[0]) ? palette : [palette];\r\n                    paletteLookup = {};\r\n                    for (var i = 0; i < paletteArray.length; i++) {\r\n                        for (var j = 0; j < paletteArray[i].length; j++) {\r\n                            var rgb = Color(paletteArray[i][j]).toRgbString();\r\n                            paletteLookup[rgb] = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                container.toggleClass(\"sp-flat\", flat);\r\n                container.toggleClass(\"sp-input-disabled\", !opts.showInput);\r\n                container.toggleClass(\"sp-alpha-enabled\", opts.showAlpha);\r\n                container.toggleClass(\"sp-clear-enabled\", allowEmpty);\r\n                container.toggleClass(\"sp-buttons-disabled\", !opts.showButtons);\r\n                container.toggleClass(\"sp-palette-buttons-disabled\", !opts.togglePaletteOnly);\r\n                container.toggleClass(\"sp-palette-disabled\", !opts.showPalette);\r\n                container.toggleClass(\"sp-palette-only\", opts.showPaletteOnly);\r\n                container.toggleClass(\"sp-initial-disabled\", !opts.showInitial);\r\n                container.addClass(opts.className).addClass(opts.containerClassName);\r\n\r\n                reflow();\r\n            }\r\n\r\n            function initialize() {\r\n\r\n                if (browser.isIE) {\r\n                    container.find(\"*:not(input)\").attr(\"unselectable\", \"on\");\r\n                }\r\n\r\n                applyOptions();\r\n\r\n                if (shouldReplace) {\r\n                    boundElement.after(replacer).hide();\r\n                }\r\n\r\n                if (!allowEmpty) {\r\n                    clearButton.hide();\r\n                }\r\n\r\n                if (flat) {\r\n                    boundElement.after(container).hide();\r\n                }\r\n                else {\r\n\r\n                    var appendTo = opts.appendTo === \"parent\" ? boundElement.parent() : $(opts.appendTo);\r\n                    if (appendTo.length !== 1) {\r\n                        appendTo = $(\"body\");\r\n                    }\r\n\r\n                    appendTo.append(container);\r\n                }\r\n\r\n                updateSelectionPaletteFromStorage();\r\n\r\n                offsetElement.on(\"click.ColorPicker touchstart.ColorPicker\", function (e) {\r\n                    if (!disabled) {\r\n                        toggle();\r\n                    }\r\n\r\n                    e.stopPropagation();\r\n\r\n                    if (!$(e.target).is(\"input\")) {\r\n                        e.preventDefault();\r\n                    }\r\n                });\r\n\r\n                if(boundElement.is(\":disabled\") || (opts.disabled === true)) {\r\n                    disable();\r\n                }\r\n\r\n                // Prevent clicks from bubbling up to document.  This would cause it to be hidden.\r\n                container.click(stopPropagation);\r\n\r\n                // Handle user typed input\r\n                textInput.change(setFromTextInput);\r\n                textInput.on(\"paste\", function () {\r\n                    setTimeout(setFromTextInput, 1);\r\n                });\r\n                textInput.keydown(function (e) { if (e.keyCode == 13) { setFromTextInput(); } });\r\n\r\n                cancelButton.text(opts.cancelText);\r\n                cancelButton.on(\"click.ColorPicker\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    revert();\r\n                    hide();\r\n                });\r\n\r\n                clearButton.attr(\"title\", opts.clearText);\r\n                clearButton.on(\"click.ColorPicker\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    isEmpty = true;\r\n                    move();\r\n\r\n                    if(flat) {\r\n                        //for the flat style, this is a change event\r\n                        updateOriginalInput(true);\r\n                    }\r\n                });\r\n\r\n                chooseButton.text(opts.chooseText);\r\n                chooseButton.on(\"click.ColorPicker\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n\r\n                    if (browser.isIE && textInput.is(\":focus\")) {\r\n                        textInput.trigger('change');\r\n                    }\r\n\r\n                    if (isValid()) {\r\n                        updateOriginalInput(true);\r\n                        hide();\r\n                    }\r\n                });\r\n\r\n                toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\r\n                toggleButton.on(\"click.spectrum\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n\r\n                    opts.showPaletteOnly = !opts.showPaletteOnly;\r\n\r\n                    // To make sure the Picker area is drawn on the right, next to the\r\n                    // Palette area (and not below the palette), first move the Palette\r\n                    // to the left to make space for the picker, plus 5px extra.\r\n                    // The 'applyOptions' function puts the whole container back into place\r\n                    // and takes care of the button-text and the sp-palette-only CSS class.\r\n                    if (!opts.showPaletteOnly && !flat) {\r\n                        container.css('left', '-=' + (pickerContainer.outerWidth(true) + 5));\r\n                    }\r\n                    applyOptions();\r\n                });\r\n\r\n                draggable(alphaSlider, function (dragX, dragY, e) {\r\n                    currentAlpha = (dragX / alphaWidth);\r\n                    isEmpty = false;\r\n                    if (e.shiftKey) {\r\n                        currentAlpha = Math.round(currentAlpha * 10) / 10;\r\n                    }\r\n\r\n                    move();\r\n                }, dragStart, dragStop);\r\n\r\n                draggable(slider, function (dragX, dragY) {\r\n                    currentHue = parseFloat(dragY / slideHeight);\r\n                    isEmpty = false;\r\n                    if (!opts.showAlpha) {\r\n                        currentAlpha = 1;\r\n                    }\r\n                    move();\r\n                }, dragStart, dragStop);\r\n\r\n                draggable(dragger, function (dragX, dragY, e) {\r\n\r\n                    // shift+drag should snap the movement to either the x or y axis.\r\n                    if (!e.shiftKey) {\r\n                        shiftMovementDirection = null;\r\n                    }\r\n                    else if (!shiftMovementDirection) {\r\n                        var oldDragX = currentSaturation * dragWidth;\r\n                        var oldDragY = dragHeight - (currentValue * dragHeight);\r\n                        var furtherFromX = Math.abs(dragX - oldDragX) > Math.abs(dragY - oldDragY);\r\n\r\n                        shiftMovementDirection = furtherFromX ? \"x\" : \"y\";\r\n                    }\r\n\r\n                    var setSaturation = !shiftMovementDirection || shiftMovementDirection === \"x\";\r\n                    var setValue = !shiftMovementDirection || shiftMovementDirection === \"y\";\r\n\r\n                    if (setSaturation) {\r\n                        currentSaturation = parseFloat(dragX / dragWidth);\r\n                    }\r\n                    if (setValue) {\r\n                        currentValue = parseFloat((dragHeight - dragY) / dragHeight);\r\n                    }\r\n\r\n                    isEmpty = false;\r\n                    if (!opts.showAlpha) {\r\n                        currentAlpha = 1;\r\n                    }\r\n\r\n                    move();\r\n\r\n                }, dragStart, dragStop);\r\n\r\n                if (!!initialColor) {\r\n                    set(initialColor);\r\n\r\n                    // In case color was black - update the preview UI and set the format\r\n                    // since the set function will not run (default color is black).\r\n                    updateUI();\r\n                    currentPreferredFormat = opts.preferredFormat || Color(initialColor).format;\r\n\r\n                    addColorToSelectionPalette(initialColor);\r\n                }\r\n                else {\r\n                    updateUI();\r\n                }\r\n\r\n                if (flat) {\r\n                    show();\r\n                }\r\n\r\n                function paletteElementClick(e) {\r\n                    if (e.data && e.data.ignore) {\r\n                        set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\r\n                        move();\r\n                    }\r\n                    else {\r\n                        set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\r\n                        move();\r\n\r\n                        // If the picker is going to close immediately, a palette selection\r\n                        // is a change.  Otherwise, it's a move only.\r\n                        if (opts.hideAfterPaletteSelect) {\r\n                            updateOriginalInput(true);\r\n                            hide();\r\n                        } else {\r\n                            updateOriginalInput();\r\n                        }\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n\r\n                var paletteEvent = browser.isIE ? \"mousedown.ColorPicker\" : \"click.ColorPicker touchstart.ColorPicker\";\r\n                paletteContainer.on(paletteEvent, \".sp-thumb-el\", paletteElementClick);\r\n                initialColorContainer.on(paletteEvent, \".sp-thumb-el:nth-child(1)\", { ignore: true }, paletteElementClick);\r\n            }\r\n\r\n            function updateSelectionPaletteFromStorage() {\r\n\r\n                if (localStorageKey && window.localStorage) {\r\n\r\n                    // Migrate old palettes over to new format.  May want to remove this eventually.\r\n                    try {\r\n                        var oldPalette = window.localStorage[localStorageKey].split(\",#\");\r\n                        if (oldPalette.length > 1) {\r\n                            delete window.localStorage[localStorageKey];\r\n                            langx.each(oldPalette, function(i, c) {\r\n                                 addColorToSelectionPalette(c);\r\n                            });\r\n                        }\r\n                    }\r\n                    catch(e) { }\r\n\r\n                    try {\r\n                        selectionPalette = window.localStorage[localStorageKey].split(\";\");\r\n                    }\r\n                    catch (e) { }\r\n                }\r\n            }\r\n\r\n            function addColorToSelectionPalette(color) {\r\n                if (showSelectionPalette) {\r\n                    var rgb = Color(color).toRgbString();\r\n                    if (!paletteLookup[rgb] && langx.inArray(rgb, selectionPalette) === -1) {\r\n                        selectionPalette.push(rgb);\r\n                        while(selectionPalette.length > maxSelectionSize) {\r\n                            selectionPalette.shift();\r\n                        }\r\n                    }\r\n\r\n                    if (localStorageKey && window.localStorage) {\r\n                        try {\r\n                            window.localStorage[localStorageKey] = selectionPalette.join(\";\");\r\n                        }\r\n                        catch(e) { }\r\n                    }\r\n                }\r\n            }\r\n\r\n            function getUniqueSelectionPalette() {\r\n                var unique = [];\r\n                if (opts.showPalette) {\r\n                    for (var i = 0; i < selectionPalette.length; i++) {\r\n                        var rgb = Color(selectionPalette[i]).toRgbString();\r\n\r\n                        if (!paletteLookup[rgb]) {\r\n                            unique.push(selectionPalette[i]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return unique.reverse().slice(0, opts.maxSelectionSize);\r\n            }\r\n\r\n            function drawPalette() {\r\n\r\n                var currentColor = get();\r\n\r\n                var html = langx.map(paletteArray, function (palette, i) {\r\n                    return paletteTemplate(palette, currentColor, \"sp-palette-row sp-palette-row-\" + i, opts);\r\n                });\r\n\r\n                updateSelectionPaletteFromStorage();\r\n\r\n                if (selectionPalette) {\r\n                    html.push(paletteTemplate(getUniqueSelectionPalette(), currentColor, \"sp-palette-row sp-palette-row-selection\", opts));\r\n                }\r\n\r\n                paletteContainer.html(html.join(\"\"));\r\n            }\r\n\r\n            function drawInitial() {\r\n                if (opts.showInitial) {\r\n                    var initial = colorOnShow;\r\n                    var current = get();\r\n                    initialColorContainer.html(paletteTemplate([initial, current], current, \"sp-palette-row-initial\", opts));\r\n                }\r\n            }\r\n\r\n            function dragStart() {\r\n                if (dragHeight <= 0 || dragWidth <= 0 || slideHeight <= 0) {\r\n                    reflow();\r\n                }\r\n                isDragging = true;\r\n                container.addClass(draggingClass);\r\n                shiftMovementDirection = null;\r\n                boundElement.trigger('dragstart.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function dragStop() {\r\n                isDragging = false;\r\n                container.removeClass(draggingClass);\r\n                boundElement.trigger('dragstop.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function setFromTextInput() {\r\n\r\n                var value = textInput.val();\r\n\r\n                if ((value === null || value === \"\") && allowEmpty) {\r\n                    set(null);\r\n                    move();\r\n                    updateOriginalInput();\r\n                }\r\n                else {\r\n                    var tiny = Color(value);\r\n                    if (tiny.isValid()) {\r\n                        set(tiny);\r\n                        move();\r\n                        updateOriginalInput();\r\n                    }\r\n                    else {\r\n                        textInput.addClass(\"sp-validation-error\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            function toggle() {\r\n                if (visible) {\r\n                    hide();\r\n                }\r\n                else {\r\n                    show();\r\n                }\r\n            }\r\n\r\n            function show() {\r\n                var event = eventer.create('beforeShow.ColorPicker');\r\n\r\n                if (visible) {\r\n                    reflow();\r\n                    return;\r\n                }\r\n\r\n                boundElement.trigger(event, [ get() ]);\r\n\r\n                if (callbacks.beforeShow(get()) === false || event.isDefaultPrevented()) {\r\n                    return;\r\n                }\r\n\r\n                hideAll();\r\n                visible = true;\r\n\r\n                $(doc).on(\"keydown.ColorPicker\", onkeydown);\r\n                $(doc).on(\"click.ColorPicker\", clickout);\r\n                $(window).on(\"resize.ColorPicker\", resize);\r\n                replacer.addClass(\"sp-active\");\r\n                container.removeClass(\"sp-hidden\");\r\n\r\n                reflow();\r\n                updateUI();\r\n\r\n                colorOnShow = get();\r\n\r\n                drawInitial();\r\n                callbacks.show(colorOnShow);\r\n                boundElement.trigger('show.ColorPicker', [ colorOnShow ]);\r\n            }\r\n\r\n            function onkeydown(e) {\r\n                // Close on ESC\r\n                if (e.keyCode === 27) {\r\n                    hide();\r\n                }\r\n            }\r\n\r\n            function clickout(e) {\r\n                // Return on right click.\r\n                if (e.button == 2) { return; }\r\n\r\n                // If a drag event was happening during the mouseup, don't hide\r\n                // on click.\r\n                if (isDragging) { return; }\r\n\r\n                if (clickoutFiresChange) {\r\n                    updateOriginalInput(true);\r\n                }\r\n                else {\r\n                    revert();\r\n                }\r\n                hide();\r\n            }\r\n\r\n            function hide() {\r\n                // Return if hiding is unnecessary\r\n                if (!visible || flat) { return; }\r\n                visible = false;\r\n\r\n                $(doc).off(\"keydown.ColorPicker\", onkeydown);\r\n                $(doc).off(\"click.ColorPicker\", clickout);\r\n                $(window).off(\"resize.ColorPicker\", resize);\r\n\r\n                replacer.removeClass(\"sp-active\");\r\n                container.addClass(\"sp-hidden\");\r\n\r\n                callbacks.hide(get());\r\n                boundElement.trigger('hide.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function revert() {\r\n                set(colorOnShow, true);\r\n                updateOriginalInput(true);\r\n            }\r\n\r\n            function set(color, ignoreFormatChange) {\r\n                if (Color.equals(color, get())) {\r\n                    // Update UI just in case a validation error needs\r\n                    // to be cleared.\r\n                    updateUI();\r\n                    return;\r\n                }\r\n\r\n                var newColor, newHsv;\r\n                if (!color && allowEmpty) {\r\n                    isEmpty = true;\r\n                } else {\r\n                    isEmpty = false;\r\n                    newColor = colors.Color(color);\r\n                    newHsv = newColor.toHsv();\r\n\r\n                    currentHue = (newHsv.h % 360) / 360;\r\n                    currentSaturation = newHsv.s;\r\n                    currentValue = newHsv.v;\r\n                    currentAlpha = newHsv.a;\r\n                }\r\n                updateUI();\r\n\r\n                if (newColor && newColor.isValid() && !ignoreFormatChange) {\r\n                    currentPreferredFormat = opts.preferredFormat || newColor.getFormat();\r\n                }\r\n            }\r\n\r\n            function get(opts) {\r\n                opts = opts || { };\r\n\r\n                if (allowEmpty && isEmpty) {\r\n                    return null;\r\n                }\r\n\r\n                return Color.fromRatio({\r\n                    h: currentHue,\r\n                    s: currentSaturation,\r\n                    v: currentValue,\r\n                    a: Math.round(currentAlpha * 1000) / 1000\r\n                }, { format: opts.format || currentPreferredFormat });\r\n            }\r\n\r\n            function isValid() {\r\n                return !textInput.hasClass(\"sp-validation-error\");\r\n            }\r\n\r\n            function move() {\r\n                updateUI();\r\n\r\n                callbacks.move(get());\r\n                boundElement.trigger('move.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function updateUI() {\r\n\r\n                textInput.removeClass(\"sp-validation-error\");\r\n\r\n                updateHelperLocations();\r\n\r\n                // Update dragger background color (gradients take care of saturation and value).\r\n                var flatColor = Color.fromRatio({ h: currentHue, s: 1, v: 1 });\r\n                dragger.css(\"background-color\", flatColor.toHexString());\r\n\r\n                // Get a format that alpha will be included in (hex and names ignore alpha)\r\n                var format = currentPreferredFormat;\r\n                if (currentAlpha < 1 && !(currentAlpha === 0 && format === \"name\")) {\r\n                    if (format === \"hex\" || format === \"hex3\" || format === \"hex6\" || format === \"name\") {\r\n                        format = \"rgb\";\r\n                    }\r\n                }\r\n\r\n                var realColor = get({ format: format }),\r\n                    displayColor = '';\r\n\r\n                 //reset background info for preview element\r\n                previewElement.removeClass(\"sp-clear-display\");\r\n                previewElement.css('background-color', 'transparent');\r\n\r\n                if (!realColor && allowEmpty) {\r\n                    // Update the replaced elements background with icon indicating no color selection\r\n                    previewElement.addClass(\"sp-clear-display\");\r\n                }\r\n                else {\r\n                    var realHex = realColor.toHexString(),\r\n                        realRgb = realColor.toRgbString();\r\n\r\n                    // Update the replaced elements background color (with actual selected color)\r\n                    previewElement.css(\"background-color\", realRgb);\r\n\r\n                    if (opts.showAlpha) {\r\n                        var rgb = realColor.toRgb();\r\n                        rgb.a = 0;\r\n                        var realAlpha = Color(rgb).toRgbString();\r\n                        var gradient = \"linear-gradient(left, \" + realAlpha + \", \" + realHex + \")\";\r\n\r\n                        if (browser.isIE) {\r\n                            alphaSliderInner.css(\"filter\", Color(realAlpha).toFilter({ gradientType: 1 }, realHex));\r\n                        }\r\n                        else {\r\n                            alphaSliderInner.css(\"background\", \"-webkit-\" + gradient);\r\n                            alphaSliderInner.css(\"background\", \"-moz-\" + gradient);\r\n                            alphaSliderInner.css(\"background\", \"-ms-\" + gradient);\r\n                            // Use current syntax gradient on unprefixed property.\r\n                            alphaSliderInner.css(\"background\",\r\n                                \"linear-gradient(to right, \" + realAlpha + \", \" + realHex + \")\");\r\n                        }\r\n                    }\r\n\r\n                    displayColor = realColor.toString(format);\r\n                }\r\n\r\n                // Update the text entry input as it changes happen\r\n                if (opts.showInput) {\r\n                    textInput.val(displayColor);\r\n                }\r\n\r\n                if (opts.showPalette) {\r\n                    drawPalette();\r\n                }\r\n\r\n                drawInitial();\r\n            }\r\n\r\n            function updateHelperLocations() {\r\n                var s = currentSaturation;\r\n                var v = currentValue;\r\n\r\n                if(allowEmpty && isEmpty) {\r\n                    //if selected color is empty, hide the helpers\r\n                    alphaSlideHelper.hide();\r\n                    slideHelper.hide();\r\n                    dragHelper.hide();\r\n                }\r\n                else {\r\n                    //make sure helpers are visible\r\n                    alphaSlideHelper.show();\r\n                    slideHelper.show();\r\n                    dragHelper.show();\r\n\r\n                    // Where to show the little circle in that displays your current selected color\r\n                    var dragX = s * dragWidth;\r\n                    var dragY = dragHeight - (v * dragHeight);\r\n                    dragX = Math.max(\r\n                        -dragHelperHeight,\r\n                        Math.min(dragWidth - dragHelperHeight, dragX - dragHelperHeight)\r\n                    );\r\n                    dragY = Math.max(\r\n                        -dragHelperHeight,\r\n                        Math.min(dragHeight - dragHelperHeight, dragY - dragHelperHeight)\r\n                    );\r\n                    dragHelper.css({\r\n                        \"top\": dragY + \"px\",\r\n                        \"left\": dragX + \"px\"\r\n                    });\r\n\r\n                    var alphaX = currentAlpha * alphaWidth;\r\n                    alphaSlideHelper.css({\r\n                        \"left\": (alphaX - (alphaSlideHelperWidth / 2)) + \"px\"\r\n                    });\r\n\r\n                    // Where to show the bar that displays your current selected hue\r\n                    var slideY = (currentHue) * slideHeight;\r\n                    slideHelper.css({\r\n                        \"top\": (slideY - slideHelperHeight) + \"px\"\r\n                    });\r\n                }\r\n            }\r\n\r\n            function updateOriginalInput(fireCallback) {\r\n                var color = get(),\r\n                    displayColor = '',\r\n                    hasChanged = !Color.equals(color, colorOnShow);\r\n\r\n                if (color) {\r\n                    displayColor = color.toString(currentPreferredFormat);\r\n                    // Update the selection palette with the current color\r\n                    addColorToSelectionPalette(color);\r\n                }\r\n\r\n                if (isInput) {\r\n                    boundElement.val(displayColor);\r\n                }\r\n\r\n                if (fireCallback && hasChanged) {\r\n                    callbacks.change(color);\r\n                    boundElement.trigger('change', [ color ]);\r\n                }\r\n            }\r\n\r\n            function reflow() {\r\n                if (!visible) {\r\n                    return; // Calculations would be useless and wouldn't be reliable anyways\r\n                }\r\n                dragWidth = dragger.width();\r\n                dragHeight = dragger.height();\r\n                dragHelperHeight = dragHelper.height();\r\n                slideWidth = slider.width();\r\n                slideHeight = slider.height();\r\n                slideHelperHeight = slideHelper.height();\r\n                alphaWidth = alphaSlider.width();\r\n                alphaSlideHelperWidth = alphaSlideHelper.width();\r\n\r\n                if (!flat) {\r\n                    container.css(\"position\", \"absolute\");\r\n                    if (opts.offset) {\r\n                        container.offset(opts.offset);\r\n                    } else {\r\n                        container.offset(getOffset(container, offsetElement));\r\n                    }\r\n                }\r\n\r\n                updateHelperLocations();\r\n\r\n                if (opts.showPalette) {\r\n                    drawPalette();\r\n                }\r\n\r\n                boundElement.trigger('reflow.ColorPicker');\r\n            }\r\n\r\n            function destroy() {\r\n                boundElement.show();\r\n                offsetElement.off(\"click.ColorPicker touchstart.ColorPicker\");\r\n                container.remove();\r\n                replacer.remove();\r\n                pickers[spect.id] = null;\r\n            }\r\n\r\n            function option(optionName, optionValue) {\r\n                if (optionName === undefined) {\r\n                    return langx.mixin({}, opts);\r\n                }\r\n                if (optionValue === undefined) {\r\n                    return opts[optionName];\r\n                }\r\n\r\n                opts[optionName] = optionValue;\r\n\r\n                if (optionName === \"preferredFormat\") {\r\n                    currentPreferredFormat = opts.preferredFormat;\r\n                }\r\n                applyOptions();\r\n            }\r\n\r\n            function enable() {\r\n                disabled = false;\r\n                boundElement.attr(\"disabled\", false);\r\n                offsetElement.removeClass(\"sp-disabled\");\r\n            }\r\n\r\n            function disable() {\r\n                hide();\r\n                disabled = true;\r\n                boundElement.attr(\"disabled\", true);\r\n                offsetElement.addClass(\"sp-disabled\");\r\n            }\r\n\r\n            function setOffset(coord) {\r\n                opts.offset = coord;\r\n                reflow();\r\n            }\r\n\r\n            initialize();\r\n\r\n            var spect = {\r\n                show: show,\r\n                hide: hide,\r\n                toggle: toggle,\r\n                reflow: reflow,\r\n                option: option,\r\n                enable: enable,\r\n                disable: disable,\r\n                offset: setOffset,\r\n                set: function (c) {\r\n                    set(c);\r\n                    updateOriginalInput();\r\n                },\r\n                get: get,\r\n                destroy: destroy,\r\n                container: container\r\n            };\r\n\r\n            spect.id = pickers.push(spect) - 1;\r\n\r\n            return spect;\r\n        }\r\n    });\r\n\r\n\r\n    /**\r\n    * checkOffset - get the offset below/above and left/right element depending on screen position\r\n    * Thanks https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.datepicker.js\r\n    */\r\n    function getOffset(picker, input) {\r\n        var extraY = 0;\r\n        var dpWidth = picker.outerWidth();\r\n        var dpHeight = picker.outerHeight();\r\n        var inputHeight = input.outerHeight();\r\n        var doc = picker[0].ownerDocument;\r\n        var docElem = doc.documentElement;\r\n        var viewWidth = docElem.clientWidth + $(doc).scrollLeft();\r\n        var viewHeight = docElem.clientHeight + $(doc).scrollTop();\r\n        var offset = input.offset();\r\n        var offsetLeft = offset.left;\r\n        var offsetTop = offset.top;\r\n\r\n        offsetTop += inputHeight;\r\n\r\n        offsetLeft -=\r\n            Math.min(offsetLeft, (offsetLeft + dpWidth > viewWidth && viewWidth > dpWidth) ?\r\n            Math.abs(offsetLeft + dpWidth - viewWidth) : 0);\r\n\r\n        offsetTop -=\r\n            Math.min(offsetTop, ((offsetTop + dpHeight > viewHeight && viewHeight > dpHeight) ?\r\n            Math.abs(dpHeight + inputHeight - extraY) : extraY));\r\n\r\n        return {\r\n            top: offsetTop,\r\n            bottom: offset.bottom,\r\n            left: offsetLeft,\r\n            right: offset.right,\r\n            width: offset.width,\r\n            height: offset.height\r\n        };\r\n    }\r\n\r\n    /**\r\n    * stopPropagation - makes the code only doing this a little easier to read in line\r\n    */\r\n    function stopPropagation(e) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n    * Create a function bound to a given object\r\n    * Thanks to underscore.js\r\n    */\r\n    function bind(func, obj) {\r\n        var slice = Array.prototype.slice;\r\n        var args = slice.call(arguments, 2);\r\n        return function () {\r\n            return func.apply(obj, args.concat(slice.call(arguments)));\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n    * Define a query plugin\r\n    */\r\n    var dataID = \"ColorPicker.id\";\r\n    \r\n    function Plugin(opts, extra) {\r\n\r\n        if (typeof opts == \"string\") {\r\n\r\n            var returnValue = this;\r\n            var args = Array.prototype.slice.call( arguments, 1 );\r\n\r\n            this.each(function () {\r\n                var spect = pickers[$(this).data(dataID)];\r\n                if (spect) {\r\n                    var method = spect[opts];\r\n                    if (!method) {\r\n                        throw new Error( \"skylark-ui-colorpicker: no such method: '\" + opts + \"'\" );\r\n                    }\r\n\r\n                    if (opts == \"get\") {\r\n                        returnValue = spect.get();\r\n                    }\r\n                    else if (opts == \"container\") {\r\n                        returnValue = spect.container;\r\n                    }\r\n                    else if (opts == \"option\") {\r\n                        returnValue = spect.option.apply(spect, args);\r\n                    }\r\n                    else if (opts == \"destroy\") {\r\n                        spect.destroy();\r\n                        $(this).removeData(dataID);\r\n                    }\r\n                    else {\r\n                        method.apply(spect, args);\r\n                    }\r\n                }\r\n            });\r\n\r\n            return returnValue;\r\n        }\r\n\r\n        // Initializing a new instance of ColorPicker\r\n        return this.colorPicker(\"destroy\").each(function () {\r\n            var options = langx.mixin({}, $(this).data(), opts);\r\n            var spect = ColorPicker(this, options);\r\n            $(this).data(dataID, spect.id);\r\n        });\r\n    }\r\n\r\n    ColorPicker.load = true;\r\n    ColorPicker.loadOpts = {};\r\n    ColorPicker.draggable = draggable;\r\n    ColorPicker.defaults = defaultOpts;\r\n\r\n    ColorPicker.localization = { };\r\n    ColorPicker.palettes = { };\r\n\r\n    $.fn.colorPicker = Plugin;\r\n\r\n    return skylark.attach(\"domx.ColorPicker\",ColorPicker);\r\n\r\n});\r\n\ndefine('skylark-domx-colorpicker/i18n/texts_ja',[\r\n\t\"../ColorPicker\"\r\n],function(ColorPicker) {\r\n    var localization = ColorPicker.localization[\"ja\"] = {\r\n        cancelText: \"中止\",\r\n        chooseText: \"選択\"\r\n    };\r\n\r\n    return localization;\r\n});\ndefine('skylark-domx-colorpicker/i18n/texts_zh-cn',[\r\n\t\"../ColorPicker\"\r\n],function(ColorPicker) {\r\n    var localization = ColorPicker.localization[\"zh-cn\"] = {\r\n        cancelText: \"取消\",\r\n        chooseText: \"选择\",\r\n        clearText: \"清除\",\r\n        togglePaletteMoreText: \"更多选项\",\r\n        togglePaletteLessText: \"隐藏\",\r\n        noColorSelectedText: \"尚未选择任何颜色\"\r\n    };\r\n\r\n    return localization;\r\n\r\n});\r\n\ndefine('skylark-domx-colorpicker/i18n/texts_zh-tw',[\r\n\t\"../ColorPicker\"\r\n],function(ColorPicker) {\r\n    var localization = ColorPicker.localization[\"zh-tw\"] = {\r\n        cancelText: \"取消\",\r\n        chooseText: \"選擇\",\r\n        clearText: \"清除\",\r\n        togglePaletteMoreText: \"更多選項\",\r\n        togglePaletteLessText: \"隱藏\",\r\n        noColorSelectedText: \"尚未選擇任何顏色\"\r\n    };\r\n\r\n    return localization;\r\n\r\n});\ndefine('skylark-domx-colorpicker/main',[\r\n    \"./ColorPicker\",\r\n    \"./i18n/texts_ja\",\r\n    \"./i18n/texts_zh-cn\",\r\n    \"./i18n/texts_zh-tw\"\r\n], function(ColorPicker) {\r\n    return ColorPicker;\r\n});\r\n\ndefine('skylark-domx-colorpicker', ['skylark-domx-colorpicker/main'], function (main) { return main; });\n\ndefine('skylark-domx-gradienter/Drag',[],function() {\r\n    /**************************************************\r\n     * dom-drag.js\r\n     * 09.25.2001\r\n     * www.youngpup.net\r\n     **************************************************\r\n     * 10.28.2001 - fixed minor bug where events\r\n     * sometimes fired off the handle, not the root.\r\n     **************************************************/\r\n\r\n    var Drag = {\r\n\r\n        obj : null,\r\n\r\n        gradx : null,\r\n\r\n        init : function(o, oRoot, minX, maxX, minY, maxY, bSwapHorzRef, bSwapVertRef, fXMapper, fYMapper)\r\n        {\r\n            o.onmousedown\t= Drag.start;\r\n\r\n            o.hmode\t\t\t= bSwapHorzRef ? false : true ;\r\n            o.vmode\t\t\t= bSwapVertRef ? false : true ;\r\n\r\n            o.root = oRoot && oRoot != null ? oRoot : o ;\r\n\r\n            if (o.hmode  && isNaN(parseInt(o.root.style.left  ))) o.root.style.left   = \"0px\";\r\n           //if (o.vmode  && isNaN(parseInt(o.root.style.top   ))) o.root.style.top    = \"0px\";\r\n            if (!o.hmode && isNaN(parseInt(o.root.style.right ))) o.root.style.right  = \"0px\";\r\n           // if (!o.vmode && isNaN(parseInt(o.root.style.bottom))) o.root.style.bottom = \"0px\";\r\n\r\n            o.minX\t= typeof minX != 'undefined' ? minX : null;\r\n            o.minY\t= typeof minY != 'undefined' ? minY : null;\r\n            o.maxX\t= typeof maxX != 'undefined' ? maxX : null;\r\n            o.maxY\t= typeof maxY != 'undefined' ? maxY : null;\r\n\r\n            o.xMapper = fXMapper ? fXMapper : null;\r\n            o.yMapper = fYMapper ? fYMapper : null;\r\n\r\n            o.root.onDragStart\t= new Function();\r\n            o.root.onDragEnd\t= new Function();\r\n            o.root.onDrag\t\t= new Function();\r\n        },\r\n\r\n        start : function(e)\r\n        {\r\n            Drag.gradx.current_slider_id = \"#\"+this.id;\r\n\r\n            var o = Drag.obj = this;\r\n            e = Drag.fixE(e);\r\n            var y = parseInt(o.vmode ? o.root.style.top  : o.root.style.bottom);\r\n            var x = parseInt(o.hmode ? o.root.style.left : o.root.style.right );\r\n            o.root.onDragStart(x, y);\r\n\r\n            o.lastMouseX\t= e.clientX;\r\n            o.lastMouseY\t= e.clientY;\r\n\r\n            if (o.hmode) {\r\n                if (o.minX != null)\to.minMouseX\t= e.clientX - x + o.minX;\r\n                if (o.maxX != null)\to.maxMouseX\t= o.minMouseX + o.maxX - o.minX;\r\n            } else {\r\n                if (o.minX != null) o.maxMouseX = -o.minX + e.clientX + x;\r\n                if (o.maxX != null) o.minMouseX = -o.maxX + e.clientX + x;\r\n            }\r\n\r\n            if (o.vmode) {\r\n                if (o.minY != null)\to.minMouseY\t= e.clientY - y + o.minY;\r\n                if (o.maxY != null)\to.maxMouseY\t= o.minMouseY + o.maxY - o.minY;\r\n            }\r\n            else {\r\n                if (o.minY != null) o.maxMouseY = -o.minY + e.clientY + y;\r\n                if (o.maxY != null) o.minMouseY = -o.maxY + e.clientY + y;\r\n            }\r\n\r\n            document.onmousemove\t= Drag.drag;\r\n            document.onmouseup\t= Drag.end;\r\n\r\n            return false;\r\n        },\r\n\r\n        drag : function(e)\r\n        {\r\n            e = Drag.fixE(e);\r\n            var o = Drag.obj;\r\n\r\n            Drag.gradx.update_style_array();\r\n            Drag.gradx.apply_style(Drag.gradx.panel, Drag.gradx.get_style_value());\r\n            var left = Drag.gradx.gx(\"#\"+o.id).css(\"left\");\r\n\r\n\r\n            if(parseInt(left) > 60 && parseInt(left) < 390) {\r\n                Drag.gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                .css(\"left\",left)\r\n                .show();\r\n                         \r\n            }/*else {\r\n                if(parseInt(left) > 120) {\r\n                    left = \"272px\";\r\n                }else{\r\n                    left = \"120px\";\r\n                }\r\n                    \r\n                gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                .css(\"left\",left)\r\n                .show();\r\n                     \r\n            }*/\r\n             var color = Drag.gradx.gx(\"#\"+o.id).css(\"backgroundColor\");\r\n            //but what happens if @color is not in RGB ? :(\r\n            var rgb = Drag.gradx.get_rgb_obj(color);\r\n            Drag.gradx.cp.colorPicker(\"set\",rgb);\r\n\r\n\r\n            var ey\t= e.clientY;\r\n            var ex\t= e.clientX;\r\n            var y = parseInt(o.vmode ? o.root.style.top  : o.root.style.bottom);\r\n            var x = parseInt(o.hmode ? o.root.style.left : o.root.style.right );\r\n            var nx, ny;\r\n\r\n            if (o.minX != null) ex = o.hmode ? Math.max(ex, o.minMouseX) : Math.min(ex, o.maxMouseX);\r\n            if (o.maxX != null) ex = o.hmode ? Math.min(ex, o.maxMouseX) : Math.max(ex, o.minMouseX);\r\n            if (o.minY != null) ey = o.vmode ? Math.max(ey, o.minMouseY) : Math.min(ey, o.maxMouseY);\r\n            if (o.maxY != null) ey = o.vmode ? Math.min(ey, o.maxMouseY) : Math.max(ey, o.minMouseY);\r\n\r\n            nx = x + ((ex - o.lastMouseX) * (o.hmode ? 1 : -1));\r\n            ny = y + ((ey - o.lastMouseY) * (o.vmode ? 1 : -1));\r\n\r\n            if (o.xMapper)\t\tnx = o.xMapper(y)\r\n            else if (o.yMapper)\tny = o.yMapper(x)\r\n\r\n            Drag.obj.root.style[o.hmode ? \"left\" : \"right\"] = nx + \"px\";\r\n            //Drag.obj.root.style[o.vmode ? \"top\" : \"bottom\"] = ny + \"px\";\r\n            Drag.obj.lastMouseX\t= ex;\r\n            Drag.obj.lastMouseY\t= ey;\r\n\r\n            Drag.obj.root.onDrag(nx, ny);\r\n            return false;\r\n        },\r\n\r\n        end : function()\r\n        {\r\n            document.onmousemove = null;\r\n            document.onmouseup   = null;\r\n            Drag.obj.root.onDragEnd(\tparseInt(Drag.obj.root.style[Drag.obj.hmode ? \"left\" : \"right\"]), \r\n                parseInt(Drag.obj.root.style[Drag.obj.vmode ? \"top\" : \"bottom\"]));\r\n            Drag.obj = null;\r\n        },\r\n\r\n        fixE : function(e)\r\n        {\r\n            if (typeof e == 'undefined') e = window.event;\r\n            if (typeof e.layerX == 'undefined') e.layerX = e.offsetX;\r\n            if (typeof e.layerY == 'undefined') e.layerY = e.offsetY;\r\n            return e;\r\n        }\r\n    };\r\n\r\n    return Drag;\r\n});\ndefine('skylark-domx-gradienter/Gradienter',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-plugins\",    \r\n    \"skylark-data-color/colors\",\r\n    \"skylark-data-color/Color\",\r\n    \"skylark-domx-colorpicker/ColorPicker\",\r\n    \"./Drag\"\r\n],function(skylark, langx, browser, noder, eventer,finder, $, plugins,colors, Color, ColorPicker,Drag) {\r\n\r\n\r\n    /*\r\n     *\r\n     * SAMPLE USAGE DETAILS :\r\n     * \r\n     * sliders structure :\r\n     *\r\n     * [\r\n     *  {\r\n     *     color: \"COLOR\",\r\n     *     position: \"POSITION\" //0 to 100 without % symbol\r\n     *  },\r\n     *  {\r\n     *     ....\r\n     *     ....\r\n     *  },\r\n     *  ....\r\n     * ]\r\n     *\r\n     */\r\n\r\n    'use strict';\r\n\r\n    //make me jquery UI  independent\r\n    if (typeof $.fn.draggable === \"undefined\") {\r\n\r\n        $.fn.draggable = function() {\r\n            //console.log(this);\r\n            var ele = document.getElementById(this.attr(\"id\"));\r\n            ele.style.top = \"121px\";\r\n            Drag.init(ele, null, 26, 426, 86, 86);\r\n            return this;\r\n        };\r\n\r\n\r\n    }\r\n\r\n\r\n    var gradX  = function(id, _options) {\r\n\r\n\r\n        var options = {\r\n            targets: [], //[element selector] -> array\r\n            sliders: [],\r\n            direction: 'left',\r\n            //if linear left | top | right | bottom\r\n            //if radial left | center | right , top | center | bottom \r\n            type: 'linear', //linear | circle | ellipse\r\n            code_shown: false, //false | true\r\n            change: function(sliders, styles) {\r\n                //nothing to do here by default\r\n            }\r\n        },\r\n    \t\r\n        //make global\t\r\n        gradx = Drag.gradx = {\r\n            rand_RGB: [],\r\n            rand_pos: [],\r\n            id: null,\r\n            slider_ids: [],\r\n            slider_index: 0, //global index for sliders\r\n            sliders: [], //contains styles of each slider\r\n            direction: \"left\", //direction of gradient or position of centre in case of radial gradients\r\n            type: \"linear\", //linear or radial\r\n            shape: \"cover\", //radial gradient size\r\n            slider_hovered: [],\r\n            jQ_present: true,\r\n            code_shown: false,\r\n            load_jQ: function() {\r\n\r\n                //handle any library conflicts here\r\n                this.gx = $;\r\n            },\r\n            //very lazy to replace this by jQuery\r\n            add_event: function(el, evt, evt_func) {\r\n                add_event(el, evt, evt_func);\r\n            },\r\n            get_random_position: function() {\r\n                var pos;\r\n\r\n                do {\r\n                    pos = parseInt(Math.random() * 100);\r\n                }\r\n                while (this.rand_pos.indexOf(pos) > -1);\r\n\r\n                this.rand_pos.push(pos);\r\n                return pos;\r\n\r\n            },\r\n            get_random_rgb: function() {\r\n\r\n                var R, G, B, color;\r\n\r\n                do {\r\n                    R = parseInt(Math.random() * 255);\r\n                    G = parseInt(Math.random() * 255);\r\n                    B = parseInt(Math.random() * 255);\r\n\r\n                    color = \"rgb(\" + R + \", \" + G + \", \" + B + \")\";\r\n                }\r\n                while (this.rand_RGB.indexOf(color) > -1);\r\n\r\n                this.rand_RGB.push(color);\r\n                return color;\r\n\r\n            },\r\n            //if target element is specified the target's style (background) is updated\r\n            update_target: function(values) {\r\n\r\n                if (this.targets.length > 0) {\r\n                    //target elements exist\r\n\r\n                    var i, j, ele, len = this.targets.length, v_len = values.length;\r\n                    for (i = 0; i < len; i++) {\r\n                        ele = gradx.gx(this.targets[i]);\r\n\r\n                        for (j = 0; j < v_len; j++) {\r\n                            ele.css(\"background-image\", values[j]);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            },\r\n            //apply styles on fly\r\n            apply_style: function(ele, value) {\r\n\r\n                var type = 'linear';\r\n\r\n                if (gradx.type != 'linear') {\r\n                    type = 'radial';\r\n                }\r\n\r\n                if (value.indexOf(this.direction) > -1) {\r\n                    //add cross-browser compatibility\r\n                    var values = [\r\n                        \"-webkit-\" + type + \"-gradient(\" + value + \")\",\r\n                        \"-moz-\" + type + \"-gradient(\" + value + \")\",\r\n                        \"-ms-\" + type + \"-gradient(\" + value + \")\",\r\n                        \"-o-\" + type + \"-gradient(\" + value + \")\",\r\n                        type + \"-gradient(\" + value + \")\"\r\n                    ];\r\n                } else {\r\n                    //normal color\r\n                    values = [value];\r\n                }\r\n\r\n\r\n\r\n                var len = values.length, css = '';\r\n\r\n                while (len > 0) {\r\n                    len--;\r\n                    ele.css(\"background\", values[len]);\r\n                    css += \"background: \" + values[len] + \";\\n\";\r\n                }\r\n\r\n                //call the userdefined change function\r\n                this.change(this.sliders, values);\r\n                this.update_target(values);\r\n\r\n\r\n                gradx.gx('#gradx_code').html(css);\r\n\r\n            },\r\n            //on load\r\n            apply_default_styles: function() {\r\n                this.update_style_array()\r\n                var value = this.get_style_value();\r\n                this.apply_style(this.panel, value);\r\n            },\r\n            //update the slider_values[] while dragging\r\n            update_style_array: function() {\r\n\r\n                this.sliders = [];\r\n\r\n                var len = gradx.slider_ids.length,\r\n                        i, offset, position, id;\r\n\r\n                for (i = 0; i < len; i++) {\r\n                    id = \"#\" + gradx.slider_ids[i];\r\n                    offset = parseInt(gradx.gx(id).css(\"left\"));\r\n                    position = parseInt((offset / gradx.container_width) * 100);\r\n                    position -= 6; //TODO: find why this is required\r\n                    gradx.sliders.push([gradx.gx(id).css(\"background-color\"), position]);\r\n\r\n                }\r\n\r\n                this.sliders.sort(function(A, B) {\r\n                    if (A[1] > B[1])\r\n                        return 1;\r\n                    else\r\n                        return -1;\r\n                });\r\n            },\r\n            //creates the complete css background value to later apply style\r\n            get_style_value: function() {\r\n\r\n                var len = gradx.slider_ids.length;\r\n\r\n                if (len === 1) {\r\n                    //since only one slider , so simple background\r\n\r\n                    style_str = this.sliders[0][0];\r\n                } else {\r\n                    var style_str = \"\", suffix = \"\";\r\n                    for (var i = 0; i < len; i++) {\r\n                        if (this.sliders[i][1] == \"\") {\r\n                            style_str += suffix + (this.sliders[i][0]);\r\n\r\n                        } else {\r\n                            if (this.sliders[i][1] > 100) {\r\n                                this.sliders[i][1] = 100;\r\n                            }\r\n                            style_str += suffix + (this.sliders[i][0] + \" \" + this.sliders[i][1] + \"%\");\r\n\r\n                        }\r\n                        suffix = \" , \"; //add , from next iteration\r\n                    }\r\n\r\n                    if (this.type == 'linear') {\r\n                        //direction, [color stoppers]\r\n                        style_str = this.direction + \" , \" + style_str; //add direction for gradient\r\n                    } else {\r\n                        //position, type size, [color stoppers]\r\n                        style_str = this.direction + \" , \" + this.type + \" \" + this.shape + \" , \" + style_str;\r\n                    }\r\n                }\r\n\r\n                return style_str;\r\n            },\r\n            //@input rgb string rgb(<red>,<green>,<blue>)\r\n            //@output rgb object of form { r: <red> , g: <green> , b : <blue>}\r\n            get_rgb_obj: function(rgb) {\r\n\r\n                //rgb(r,g,b)\r\n                rgb = rgb.split(\"(\");\r\n                //r,g,b)\r\n                rgb = rgb[1];\r\n                //r g b)\r\n                rgb = rgb.split(\",\");\r\n\r\n                return {\r\n                    r: parseInt(rgb[0]),\r\n                    g: parseInt(rgb[1]),\r\n                    b: parseInt(rgb[2])\r\n                };\r\n\r\n            },\r\n            load_info: function(ele) {\r\n                var id = \"#\" + ele.id;\r\n                this.current_slider_id = id;\r\n                //check if current clicked element is an slider\r\n                if (this.slider_ids.indexOf(ele.id) > -1) { //javascript does not has # in its id\r\n\r\n                    var color = gradx.gx(id).css(\"backgroundColor\");\r\n                    //but what happens if @color is not in RGB ? :(\r\n                    var rgb = this.get_rgb_obj(color);\r\n\r\n                    var left = gradx.gx(id).css(\"left\");\r\n                    if (parseInt(left) > 26 && parseInt(left) < 426) {\r\n                        gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                                .css(\"left\", left)\r\n                                .show();\r\n\r\n                    } \r\n                    \r\n                    this.set_colorpicker(rgb);\r\n                    console.log(rgb);\r\n                }\r\n\r\n            },\r\n            //add slider\r\n            add_slider: function(sliders) {\r\n\r\n\r\n                var id, slider, k, position, value, delta;\r\n\r\n\r\n                if (sliders.length === 0) {\r\n                    sliders = [//default sliders\r\n                        {\r\n                            color: gradx.get_random_rgb(),\r\n                            position: gradx.get_random_position() //x percent of gradient panel(400px)\r\n                        },\r\n                        {\r\n                            color: gradx.get_random_rgb(),\r\n                            position: gradx.get_random_position()\r\n                        }\r\n                    ];\r\n\r\n                }\r\n\r\n\r\n                var obj = sliders;\r\n\r\n                for (k in obj) {\r\n\r\n                    if (typeof obj[k].position === \"undefined\")\r\n                        break;\r\n\r\n                    //convert % to px based on containers width\r\n                    var delta = 26; //range: 26px tp 426px\r\n                    position = parseInt((obj[k].position * this.container_width) / 100) + delta + \"px\";\r\n\r\n                    id = \"gradx_slider_\" + (this.slider_index); //create an id for this slider\r\n                    this.sliders.push(\r\n                            [\r\n                                obj[k].color,\r\n                                obj[k].position\r\n                            ]\r\n                            );\r\n\r\n                    this.slider_ids.push(id); //for reference wrt to id\r\n\r\n                    slider = \"<div class='gradx_slider' id='\" + id + \"'></div>\";\r\n                    gradx.gx(\"#gradx_start_sliders_\" + this.id).append(slider);\r\n\r\n                    gradx.gx('#' + id).css(\"backgroundColor\", obj[k].color).css(\"left\", position);\r\n                    this.slider_index++;\r\n                }\r\n\r\n                for (var i = 0, len = this.slider_ids.length; i < len; i++) {\r\n\r\n                    gradx.gx('#' + this.slider_ids[i]).draggable({\r\n                        containment: 'parent',\r\n                        axis: 'x',\r\n                        start: function() {\r\n                            if (gradx.jQ_present)\r\n                                gradx.current_slider_id = \"#\" + gradx.gx(this).attr(\"id\"); //got full jQuery power here !\r\n                        },\r\n                        drag: function() {\r\n\r\n                            gradx.update_style_array();\r\n                            gradx.apply_style(gradx.panel, gradx.get_style_value());\r\n                            var left = gradx.gx(gradx.current_slider_id).css(\"left\");\r\n\r\n\r\n                            if (parseInt(left) > 26 && parseInt(left) < 426) {\r\n                                gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                                        .css(\"left\", left)\r\n                                        .show();\r\n\r\n                            } /*else {\r\n                             if (parseInt(left) > 120) {\r\n                             left = \"272px\";\r\n                             } else {\r\n                             left = \"120px\";\r\n                             }\r\n                             \r\n                             gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                             .css(\"left\", left)\r\n                             .show();\r\n                             \r\n                             }*/\r\n                            var color = gradx.gx(gradx.current_slider_id).css(\"backgroundColor\");\r\n                            //but what happens if @color is not in RGB ? :(\r\n                            var rgb = gradx.get_rgb_obj(color);\r\n                            gradx.cp.colorPicker(\"set\", rgb);\r\n\r\n                        }\r\n\r\n                    }).click(function() {\r\n                        gradx.load_info(this);\r\n                        return false;\r\n                    });\r\n                }\r\n\r\n\r\n            },\r\n            set_colorpicker: function(clr) {\r\n                gradx.cp.colorPicker({\r\n                    move: function(color) {\r\n                        if (gradx.current_slider_id != false) {\r\n                            var rgba = color.toRgbString();\r\n                            gradx.gx(gradx.current_slider_id).css('background-color', rgba);\r\n                            gradx.update_style_array();\r\n                            gradx.apply_style(gradx.panel, gradx.get_style_value());\r\n                        }\r\n                    },\r\n                    change: function() {\r\n                        gradx.gx(\"#gradx_slider_info\").hide();\r\n                    },\r\n                    flat: true,\r\n                    showAlpha: true,\r\n                    color: clr,\r\n                    clickoutFiresChange: true,\r\n                    showInput: true,\r\n                    showButtons: false\r\n\r\n                });\r\n            },\r\n            generate_options: function(options) {\r\n\r\n                var len = options.length,\r\n                        name, state,\r\n                        str = '';\r\n\r\n                for (var i = 0; i < len; i++) {\r\n\r\n                    name = options[i].split(\" \");\r\n\r\n                    name = name[0];\r\n\r\n                    if (i < 2) {\r\n                        state = name[1];\r\n                    } else {\r\n                        state = '';\r\n                    }\r\n\r\n                    name = name.replace(\"-\", \" \");\r\n\r\n                    str += '<option value=' + options[i] + ' ' + state + '>' + name + '</option>';\r\n\r\n                }\r\n\r\n                return str;\r\n            },\r\n            generate_radial_options: function() {\r\n\r\n                var options;\r\n                options = [\"horizontal-center disabled\", \"center selected\", \"left\", \"right\"];\r\n                gradx.gx('#gradx_gradient_subtype').html(gradx.generate_options(options));\r\n\r\n                options = [\"vertical-center disabled\", \"center selected\", \"top\", \"bottom\"];\r\n                gradx.gx('#gradx_gradient_subtype2').html(gradx.generate_options(options)).show();\r\n\r\n            },\r\n            generate_linear_options: function() {\r\n\r\n                var options;\r\n                options = [\"horizontal-center disabled\", \"left selected\", \"right\", \"top\", \"bottom\"];\r\n                gradx.gx('#gradx_gradient_subtype').html(gradx.generate_options(options));\r\n\r\n                gradx.gx('#gradx_gradient_subtype2').hide();\r\n\r\n            },\r\n            destroy: function() {\r\n                var options = {\r\n                    targets: [], //[element selector] -> array\r\n                    sliders: [],\r\n                    direction: 'left',\r\n                    //if linear left | top | right | bottom\r\n                    //if radial left | center | right , top | center | bottom \r\n                    type: 'linear', //linear | circle | ellipse\r\n                    code_shown: false, //false | true\r\n                    change: function(sliders, styles) {\r\n                        //nothing to do here by default\r\n                    }\r\n                };\r\n\r\n                for (var k in options) {\r\n                    gradx[k] = options[k];\r\n                }\r\n            },\r\n            load_gradx: function(id, sliders) {\r\n                this.me = gradx.gx(id);\r\n                this.id = id.replace(\"#\", \"\");\r\n                id = this.id;\r\n                this.current_slider_id = false;\r\n                var html = \"<div class='gradx'>\\n\"+\r\n                            \"<div id='gradx_add_slider' class='gradx_add_slider gradx_btn'><i class='icon icon-add'></i>add</div>\\n\"+\r\n                            \"<div class='gradx_slectboxes'>\\n\"+\r\n                            \"<select id='gradx_gradient_type' class='gradx_gradient_type'>\\n\"+\r\n                            \"    <option value='linear'>Linear</option>\\n\"+\r\n                            \"    <option value='circle'>Radial - Circle</option>\\n\"+\r\n                            \"    <option value='ellipse'>Radial - Ellipse</option>\\n\"+\r\n                            \"</select>\\n\"+\r\n                            \"<select id='gradx_gradient_subtype' class='gradx_gradient_type'>\\n\"+\r\n                            \"    <option id='gradx_gradient_subtype_desc' value='gradient-direction' disabled>gradient direction</option>\\n\"+\r\n                            \"    <option value='left' selected>Left</option>\\n\"+\r\n                            \"    <option value='right'>Right</option>\\n\"+\r\n                            \"    <option value='top'>Top</option>\\n\"+\r\n                            \"    <option value='bottom'>Bottom</option>\\n\"+\r\n                            \"</select>\\n\"+\r\n                            \"<select id='gradx_gradient_subtype2' class='gradx_gradient_type gradx_hide'>\\n\"+\r\n                            \"</select>\\n\"+\r\n                            \"<select id='gradx_radial_gradient_size' class='gradx_gradient_type gradx_hide'>\\n\"+\r\n                            \"</select>\\n\"+\r\n                            \"</div>\\n\"+\r\n                            \"<div class='gradx_container' id='gradx_\" + id + \"'>\\n\"+\r\n                            \"    <div id='gradx_stop_sliders_\" + id + \"'></div>\\n\"+\r\n                            \"    <div class='gradx_panel' id='gradx_panel_\" + id + \"'></div>\\n\"+\r\n                            \"    <div class='gradx_start_sliders' id='gradx_start_sliders_\" + id + \"'>\\n\"+\r\n                            \"        <div class='cp-default' id='gradx_slider_info'>\\n\"+\r\n                            \"            <div id='gradx_slider_controls'>\\n\"+\r\n                            \"                <div id='gradx_delete_slider' class='gradx_btn'><i class='icon icon-remove'></i>delete</div>\\n\"+\r\n                            \"            </div>\\n\"+\r\n                            \"            <div id='gradx_slider_content'></div>\\n\"+\r\n                            \"        </div> \\n\"+\r\n                            \"    </div>\\n\"+\r\n                            \"</div>\\n\"+\r\n                            \"<div id='gradx_show_code' class='gradx_show_code gradx_btn'><i class='icon icon-file-css'></i><span>show the code</span></div>\\n\"+\r\n                            \"<div id='gradx_show_presets' style='display:none' class='gradx_show_presets gradx_btn'><i class='icon icon-preset'></i><span>show presets</span></div>\\n\"+\r\n                            \"<textarea class='gradx_code' id='gradx_code'></textarea>\\n\"+\r\n                        \"</div>\";\r\n\r\n                this.me.html(html);\r\n\r\n\r\n                //generates html to select the different gradient sizes\r\n                // *only available for radial gradients\r\n                var gradient_size_val = [\"gradient-size disabled\", \"closest-side selected\", \"closest-corner\", \"farthest-side\", \"farthest-corner\", \"contain\", \"cover\"],\r\n                        option_str = '';\r\n\r\n\r\n                option_str = gradx.generate_options(gradient_size_val);\r\n\r\n                gradx.gx('#gradx_radial_gradient_size').html(option_str);\r\n\r\n\r\n                //cache divs for fast reference\r\n\r\n                this.container = gradx.gx(\"#gradx_\" + id);\r\n                this.panel = gradx.gx(\"#gradx_panel_\" + id);\r\n                //.hide();\r\n                //this.info.hide();\r\n                this.container_width = 400 //HARDCODE;\r\n                this.add_slider(sliders);\r\n\r\n\r\n                gradx.add_event(document, 'click', function() {\r\n    //            if(!gradx.jQ_present){\r\n                    if (!gradx.slider_hovered[id]) {\r\n                        gradx.gx(\"#gradx_slider_info\").hide();\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n\r\n\r\n                gradx.gx('#gradx_add_slider').click(function() {\r\n                    gradx.add_slider([\r\n                        {\r\n                            color: gradx.get_random_rgb(),\r\n                            position: gradx.get_random_position() //no % symbol\r\n                        }\r\n                    ]);\r\n                    gradx.update_style_array();\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n\r\n                });\r\n\r\n                //cache the element\r\n                gradx.cp = gradx.gx('#gradx_slider_content');\r\n\r\n                //call the colorpicker plugin\r\n                gradx.set_colorpicker(\"blue\");\r\n\r\n                gradx.gx('#gradx_delete_slider').click(function() {\r\n                    gradx.gx(gradx.current_slider_id).remove();\r\n                    gradx.gx(\"#gradx_slider_info\").hide();\r\n                    var id = gradx.current_slider_id.replace(\"#\", \"\");\r\n\r\n                    //remove all references from array for current deleted slider\r\n\r\n                    for (var i = 0; i < gradx.slider_ids.length; i++) {\r\n                        if (gradx.slider_ids[i] == id) {\r\n                            gradx.slider_ids.splice(i, 1);\r\n                        }\r\n                    }\r\n\r\n                    //apply modified style after removing the slider\r\n                    gradx.update_style_array();\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());\r\n\r\n                    gradx.current_slider_id = false; //no slider is selected\r\n\r\n                });\r\n\r\n                gradx.gx('#gradx_code').focus(function() {\r\n                    var $this = gradx.gx(this);\r\n                    $this.select();\r\n\r\n                    // Work around Chrome's little problem\r\n                    $this.mouseup(function() {\r\n                        // Prevent further mouseup intervention\r\n                        $this.off(\"mouseup\");\r\n                        return false;\r\n                    });\r\n                });\r\n\r\n                gradx.gx('#gradx_gradient_type').change(function() {\r\n\r\n                    var type = gradx.gx(this).val(), options, option_str = '';\r\n\r\n                    if (type !== \"linear\") {\r\n                        //gradx.gx('#gradx_radial_gradient_size').show();\r\n\r\n                        gradx.generate_radial_options();\r\n                    } else {\r\n\r\n                        gradx.generate_linear_options();\r\n                        gradx.gx('#gradx_gradient_subtype').val(\"left\");\r\n                    }\r\n\r\n                    gradx.type = type;\r\n                    gradx.direction = gradx.gx('#gradx_gradient_subtype').val();\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n                });\r\n\r\n                //change type onload userdefined\r\n                if (this.type !== \"linear\") {\r\n                    gradx.gx('#gradx_gradient_type').val(this.type);\r\n                    gradx.generate_radial_options();\r\n\r\n                    var h, v;\r\n\r\n                    if (this.direction !== 'left') {\r\n                        //user has passed his own direction\r\n                        var center;\r\n                        if (this.direction.indexOf(\",\") > -1) {\r\n                            center = this.direction.split(\",\");\r\n                        } else {\r\n                            //tolerate user mistakes\r\n                            center = this.direction.split(\" \");\r\n                        }\r\n\r\n                        h = center[0];\r\n                        v = center[1];\r\n\r\n                        //update the center points in the corr. select boxes\r\n                        gradx.gx('#gradx_gradient_subtype').val(h);\r\n                        gradx.gx('#gradx_gradient_subtype2').val(v);\r\n                    } else {\r\n                        var h = gradx.gx('#gradx_gradient_subtype').val();\r\n                        var v = gradx.gx('#gradx_gradient_subtype2').val();\r\n                    }\r\n\r\n                    gradx.direction = h + \" \" + v;\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n                } else {\r\n\r\n                    //change direction if not left\r\n                    if (this.direction !== 'left') {\r\n                        gradx.gx('#gradx_gradient_subtype').val(this.direction);\r\n                    }\r\n                }\r\n\r\n                gradx.gx('#gradx_gradient_subtype').change(function() {\r\n\r\n                    if (gradx.type === 'linear') {\r\n                        gradx.direction = gradx.gx(this).val();\r\n                    } else {\r\n                        var h = gradx.gx(this).val();\r\n                        var v = gradx.gx('#gradx_gradient_subtype2').val();\r\n                        gradx.direction = h + \" \" + v;\r\n                    }\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n\r\n                });\r\n\r\n                gradx.gx('#gradx_gradient_subtype2').change(function() {\r\n\r\n                    var h = gradx.gx('#gradx_gradient_subtype').val();\r\n                    var v = gradx.gx(this).val();\r\n                    gradx.direction = h + \" \" + v;\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n\r\n                });\r\n\r\n                //not visible\r\n                gradx.gx('#gradx_radial_gradient_size').change(function() {\r\n                    gradx.shape = gradx.gx(this).val();\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n\r\n                });\r\n\r\n                gradx.gx('#gradx_show_code').click(function() {\r\n\r\n                    if (gradx.code_shown) {\r\n                        //hide it\r\n\r\n                        gradx.code_shown = false;\r\n                        gradx.gx('#gradx_show_code span').text(\"show the code\");\r\n                        gradx.gx(\"#gradx_code\").hide();\r\n                    }\r\n                    else {\r\n                        //show it\r\n\r\n                        gradx.gx('#gradx_show_code span').text(\"hide the code\");\r\n                        gradx.gx(\"#gradx_code\").show();\r\n                        gradx.code_shown = true;\r\n                    }\r\n                });\r\n\r\n                //show or hide onload\r\n                if (gradx.code_shown) {\r\n                    //show it\r\n\r\n                    gradx.gx('#gradx_show_code span').text(\"hide the code\");\r\n                    gradx.gx(\"#gradx_code\").show();\r\n\r\n                }\r\n\r\n                gradx.add_event(document.getElementById('gradx_slider_info'), 'mouseout', function() {\r\n                    gradx.slider_hovered[id] = false;\r\n                });\r\n                gradx.add_event(document.getElementById('gradx_slider_info'), 'mouseover', function() {\r\n                    gradx.slider_hovered[id] = true;\r\n\r\n                });\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n        };\r\n\r\n\r\n\r\n        function  add_event(element, event, event_function)\r\n        {\r\n            if (element.attachEvent) //Internet Explorer\r\n                element.attachEvent(\"on\" + event, function() {\r\n                    event_function.call(element);\r\n                });\r\n            else if (element.addEventListener) //Firefox & company\r\n                element.addEventListener(event, event_function, false); //don't need the 'call' trick because in FF everything already works in the right way\r\n        }\r\n        ;\r\n\r\n\r\n\r\n        //load jQuery library into gradx.gx\r\n        gradx.load_jQ();\r\n\r\n\r\n        /* merge _options into options */\r\n        langx.mixin(options, _options);\r\n\r\n        //apply options to gradx object\r\n\r\n        for (var k in options) {\r\n\r\n            //load the options into gradx object\r\n            gradx[k] = options[k];\r\n\r\n        }\r\n\r\n        gradx.load_gradx(id, gradx.sliders);\r\n        gradx.apply_default_styles();\r\n\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.Gradienter\",gradX);\r\n});\ndefine('skylark-domx-gradienter/main',[\r\n    \"./Gradienter\",\r\n], function(Gradienter) {\r\n    return Gradienter;\r\n});\r\n\ndefine('skylark-domx-gradienter', ['skylark-domx-gradienter/main'], function (main) { return main; });\n\ndefine('skylark-domx-forms/forms',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"domx.forms\",{});\r\n});\ndefine('skylark-domx-forms/deserialize',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./forms\"\r\n],function(langx,$,forms){\r\n  /**\r\n   * Updates a key/valueArray with the given property and value. Values will always be stored as arrays.\r\n   *\r\n   * @param prop The property to add the value to.\r\n   * @param value The value to add.\r\n   * @param obj The object to update.\r\n   * @returns {object} Updated object.\r\n   */\r\n  function updateKeyValueArray( prop, value, obj ) {\r\n    var current = obj[ prop ];\r\n\r\n    if ( current === undefined ) {\r\n      obj[ prop ] = [ value ];\r\n    } else {\r\n      current.push( value );\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Get all of the fields contained within the given elements by name.\r\n   *\r\n   * @param formElm The form element.\r\n   * @param filter Custom filter to apply to the list of fields.\r\n   * @returns {object} All of the fields contained within the given elements, keyed by name.\r\n   */\r\n  function getFieldsByName(formElm, filter ) {\r\n    var elementsByName = {};\r\n\r\n    // Extract fields from elements\r\n    var fields = $(formElm)\r\n      .map(function convertFormToElements() {\r\n        return this.elements ? langx.makeArray( this.elements ) : this;\r\n      })\r\n      .filter( filter || \":input:not(:disabled)\" )\r\n      .get();\r\n\r\n    langx.each( fields, function( index, field ) {\r\n      updateKeyValueArray( field.name, field, elementsByName );\r\n    });\r\n\r\n    return elementsByName;\r\n  }\r\n\r\n  /**\r\n   * Figure out the type of an element. Input type will be used first, falling back to nodeName.\r\n   *\r\n   * @param element DOM element to check type of.\r\n   * @returns {string} The element's type.\r\n   */\r\n  function getElementType( element ) {\r\n    return ( element.type || element.nodeName ).toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Normalize the provided data into a key/valueArray store.\r\n   *\r\n   * @param data The data provided by the user to the plugin.\r\n   * @returns {object} The data normalized into a key/valueArray store.\r\n   */\r\n  function normalizeData( data ) {\r\n    var normalized = {};\r\n    var rPlus = /\\+/g;\r\n\r\n    // Convert data from .serializeObject() notation\r\n    if ( langx.isPlainObject( data ) ) {\r\n      langx.extend( normalized, data );\r\n\r\n      // Convert non-array values into an array\r\n      langx.each( normalized, function( name, value ) {\r\n        if ( !langx.isArray( value ) ) {\r\n          normalized[ name ] = [ value ];\r\n        }\r\n      });\r\n\r\n    // Convert data from .serializeArray() notation\r\n    } else if ( langx.isArray( data ) ) {\r\n      langx.each( data, function( index, field ) {\r\n        updateKeyValueArray( field.name, field.value, normalized );\r\n      });\r\n\r\n    // Convert data from .serialize() notation\r\n    } else if ( typeof data === \"string\" ) {\r\n      langx.each( data.split( \"&\" ), function( index, field ) {\r\n        var current = field.split( \"=\" );\r\n        var name = decodeURIComponent( current[ 0 ].replace( rPlus, \"%20\" ) );\r\n        var value = decodeURIComponent( current[ 1 ].replace( rPlus, \"%20\" ) );\r\n        updateKeyValueArray( name, value, normalized );\r\n      });\r\n    }\r\n\r\n    return normalized;\r\n  }\r\n\r\n  /**\r\n   * Map of property name -> element types.\r\n   *\r\n   * @type {object}\r\n   */\r\n  var updateTypes = {\r\n    checked: [\r\n      \"radio\",\r\n      \"checkbox\"\r\n    ],\r\n    selected: [\r\n      \"option\",\r\n      \"select-one\",\r\n      \"select-multiple\"\r\n    ],\r\n    value: [\r\n      \"button\",\r\n      \"color\",\r\n      \"date\",\r\n      \"datetime\",\r\n      \"datetime-local\",\r\n      \"email\",\r\n      \"hidden\",\r\n      \"month\",\r\n      \"number\",\r\n      \"password\",\r\n      \"range\",\r\n      \"reset\",\r\n      \"search\",\r\n      \"submit\",\r\n      \"tel\",\r\n      \"text\",\r\n      \"textarea\",\r\n      \"time\",\r\n      \"url\",\r\n      \"week\"\r\n    ]\r\n  };\r\n\r\n  /**\r\n   * Get the property to update on an element being updated.\r\n   *\r\n   * @param element The DOM element to get the property for.\r\n   * @returns The name of the property to update if element is supported, otherwise `undefined`.\r\n   */\r\n  function getPropertyToUpdate( element ) {\r\n    var type = getElementType( element );\r\n    var elementProperty = undefined;\r\n\r\n    langx.each( updateTypes, function( property, types ) {\r\n      if ( langx.inArray( type, types ) > -1 ) {\r\n        elementProperty = property;\r\n        return false;\r\n      }\r\n    });\r\n\r\n    return elementProperty;\r\n  }\r\n\r\n  /**\r\n   * Update the element based on the provided data.\r\n   *\r\n   * @param element The DOM element to update.\r\n   * @param elementIndex The index of this element in the list of elements with the same name.\r\n   * @param value The serialized element value.\r\n   * @param valueIndex The index of the value in the list of values for elements with the same name.\r\n   * @param callback A function to call if the value of an element was updated.\r\n   */\r\n  function update( element, elementIndex, value, valueIndex, callback ) {\r\n    var property = getPropertyToUpdate( element );\r\n\r\n    // Handle value inputs\r\n    // If there are multiple value inputs with the same name, they will be populated by matching indexes.\r\n    if ( property == \"value\" && elementIndex == valueIndex ) {\r\n      element.value = value;\r\n      callback.call( element, value );\r\n\r\n    // Handle select menus, checkboxes and radio buttons\r\n    } else if ( property == \"checked\" || property == \"selected\" ) {\r\n      var fields = [];\r\n\r\n      // Extract option fields from select menus\r\n      if ( element.options ) {\r\n        langx.each( element.options, function( index, option ) {\r\n          fields.push( option );\r\n        });\r\n\r\n      } else {\r\n        fields.push( element );\r\n      }\r\n\r\n      // #37: Remove selection from multiple select menus before deserialization\r\n      if ( element.multiple && valueIndex == 0 ) {\r\n        element.selectedIndex = -1;\r\n      }\r\n\r\n      langx.each( fields, function( index, field ) {\r\n        if ( field.value == value ) {\r\n          field[ property ] = true;\r\n          callback.call( field, value );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Default plugin options.\r\n   *\r\n   * @type {object}\r\n   */\r\n  var defaultOptions = {\r\n    change: langx.noop,\r\n    complete: langx.noop\r\n  };\r\n\r\n  /**\r\n   * The $.deserialize function.\r\n   *\r\n   * @param data The data to deserialize.\r\n   * @param options Additional options.\r\n   * @returns {jQuery} The jQuery object that was provided to the plugin.\r\n   */\r\n  function deserialize(formElm,data, options ) {\r\n\r\n    // Backwards compatible with old arguments: data, callback\r\n    if ( langx.isFunction( options ) ) {\r\n      options = { complete: options };\r\n    }\r\n\r\n    options = langx.extend( defaultOptions, options || {} );\r\n    data = normalizeData( data );\r\n\r\n    var elementsByName = getFieldsByName( formElm, options.filter );\r\n\r\n    langx.each( data, function( name, values ) {\r\n      langx.each( elementsByName[ name ], function( elementIndex, element ) {\r\n        langx.each( values, function( valueIndex, value ) {\r\n          update( element, elementIndex, value, valueIndex, options.change );\r\n        });\r\n      });\r\n    });\r\n\r\n    options.complete.call( formElm );\r\n\r\n    return this;\r\n  };\r\n\r\n  return forms.deserialize = deserialize;\r\n});\ndefine('skylark-domx-forms/serializeArray',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-data\",\r\n  \"./forms\"\r\n],function(langx,datax,forms){\r\n    function serializeArray(formElm) {\r\n        var name, type, result = [],\r\n            add = function(value) {\r\n                if (value.forEach) return value.forEach(add)\r\n                result.push({ name: name, value: value })\r\n            }\r\n        langx.each(formElm.elements, function(_, field) {\r\n            type = field.type, name = field.name\r\n            if (name && field.nodeName.toLowerCase() != 'fieldset' &&\r\n                !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\r\n                ((type != 'radio' && type != 'checkbox') || field.checked))\r\n                add(datax.val(field))\r\n        })\r\n        return result\r\n    };\r\n\r\n    return forms.serializeArray = serializeArray;\r\n});\r\n\ndefine('skylark-domx-forms/serializeObject',[\r\n  \"skylark-langx/langx\",\r\n  \"./forms\",\r\n  \"./serializeArray\"\r\n],function(langx,forms,serializeArray){\r\n\r\n  function serializeObject(formElm){\r\n    var obj = {};\r\n    \r\n    langx.each(serializeArray(formElm), function(i,o){\r\n      var n = o.name,\r\n        v = o.value;\r\n        \r\n        obj[n] = obj[n] === undefined ? v\r\n          : langx.isArray( obj[n] ) ? obj[n].concat( v )\r\n          : [ obj[n], v ];\r\n    });\r\n    \r\n    return obj;\r\n  }\r\n\r\n  return forms.serializeObject = serializeObject;\r\n});  \ndefine('skylark-domx-forms/serialize',[\r\n  \"skylark-langx/langx\",\r\n  \"./forms\",\r\n  \"./serializeArray\"\r\n],function(langx,forms,serializeArray){\r\n    function serialize(formElm) {\r\n        var result = []\r\n        serializeArray(formElm).forEach(function(elm) {\r\n            result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\r\n        })\r\n        return result.join('&')\r\n    }\r\n\r\n    return forms.serialize = serialize;\r\n});\ndefine('skylark-domx-forms/main',[\r\n\t\"./forms\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\",\r\n    \"./deserialize\",\r\n    \"./serializeArray\",\r\n    \"./serializeObject\",\r\n    \"./serialize\"\r\n],function(forms,velm,$){\r\n\r\n    // from ./data\r\n    velm.delegate([\r\n        \"deserialize\",\r\n        \"serializeArray\",\r\n        \"serializeObject\",\r\n        \"serialize\"\r\n    ], forms);\r\n\r\n    $.fn.deserialize = $.wraps.wrapper_value(forms.deserialize, forms, forms.deserialize);\r\n    $.fn.serializeArray = $.wraps.wrapper_value(forms.serializeArray, forms, forms.serializeArray);\r\n    $.fn.serializeObject = $.wraps.wrapper_value(forms.serializeObject, forms, forms.serializeObject);\r\n    $.fn.serialize = $.wraps.wrapper_value(forms.serialize, forms, forms.serialize);\r\n\r\n\r\n\treturn forms;\r\n});\ndefine('skylark-domx-forms', ['skylark-domx-forms/main'], function (main) { return main; });\n\ndefine('skylark-jquery/core',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-domx-browser\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-data\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-finder\",\r\n\t\"skylark-domx-forms\",\r\n\t\"skylark-domx-fx\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-query\",\r\n\t\"skylark-domx-scripter\"\r\n],function(skylark,langx,browser,noder,datax,eventer,finder,forms,fx,styler,query,scripter){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tslice = Array.prototype.slice;\r\n\r\n    (function($){\r\n\t    $.fn.jquery = '2.2.0';\r\n\r\n\t    $.browser = browser;\r\n\t    \r\n\t    $.camelCase = langx.camelCase;\r\n\r\n\t\t$.cleanData = function( elems ) {\r\n\t\t\tvar elem,\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\t\tdatax.cleanData(elem);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$.removeData = function(elm,name) {\r\n\t\t\tdatax.removeData(elm,name);\r\n\t\t}\r\n\t\r\n\t    $.each = langx.each;\r\n\r\n\t    $.extend = langx.extend;\r\n\r\n\t    $.grep = function(elements, callback) {\r\n\t        return filter.call(elements, callback)\r\n\t    };\r\n\r\n\t    $.attr = function(elm,name) {\r\n\t    \treturn datax.attr(elm,name);\r\n\t    };\r\n\r\n\t    $.isArray = langx.isArray;\r\n\t    $.isEmptyObject = langx.isEmptyObject;\r\n\t    $.isFunction = langx.isFunction;\r\n\t    $.isWindow = langx.isWindow;\r\n\t    $.isPlainObject = langx.isPlainObject;\r\n        $.isNumeric = langx.isNumber;\r\n\r\n\t    $.inArray = langx.inArray;\r\n\r\n\t    $.makeArray = langx.makeArray;\r\n\t    $.map = langx.map;  // The behavior is somewhat different from the original jquery.\r\n\r\n\t    $.noop = function() {\r\n\t    };\r\n\r\n\t    $.parseJSON = window.JSON.parse;\r\n\r\n\t    $.proxy = langx.proxy;\r\n\r\n\t    $.trim = langx.trim;\r\n\t    $.type = langx.type;\r\n\r\n\t    $.fn.extend = function(props) {\r\n\t        langx.mixin($.fn, props);\r\n\t    };\r\n\r\n\r\n    })(query);\r\n\r\n    (function($){\r\n        $.Event = function Event(src, props) {\r\n            if (langx.isString(src)) {\r\n            \tvar type = src;\r\n            \treturn eventer.create(type, props);\r\n\t        }\r\n            return eventer.proxy(src, props);\r\n        };\r\n\r\n        $.event = {};\r\n\r\n\t    $.event.special = eventer.special;\r\n\r\n\t    $.fn.submit = function(callback) {\r\n\t        if (0 in arguments) this.bind('submit', callback)\r\n\t        else if (this.length) {\r\n\t            var event = $.Event('submit')\r\n\t            this.eq(0).trigger(event)\r\n\t            if (!event.isDefaultPrevented()) this.get(0).submit()\r\n\t        }\r\n\t        return this\r\n\t    };\r\n\r\n\t    // event\r\n\t    $.fn.triggerHandler = $.fn.trigger;\r\n\r\n\t    $.fn.delegate = function(selector, event, callback) {\r\n\t        return this.on(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.undelegate = function(selector, event, callback) {\r\n\t        return this.off(event, selector, callback)\r\n\t    };\r\n\r\n\t    $.fn.live = function(event, callback) {\r\n\t        $(document.body).delegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.die = function(event, callback) {\r\n\t        $(document.body).undelegate(this.selector, event, callback)\r\n\t        return this\r\n\t    };\r\n\r\n\t    $.fn.bind = function(event, selector, data, callback) {\r\n\t        return this.on(event, selector, data, callback)\r\n\t    };\r\n\r\n\t    $.fn.unbind = function(event, callback) {\r\n\t        return this.off(event, callback)\r\n\t    };\r\n\r\n\t    $.fn.ready = function(callback) {\r\n\t        eventer.ready(callback);\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.stop = function() {\r\n\t        // todo\r\n\t        return this;\r\n\t    };\r\n\r\n\t    $.fn.moveto = function(x, y) {\r\n\t        return this.animate({\r\n\t            left: x + \"px\",\r\n\t            top: y + \"px\"\r\n\t        }, 0.4);\r\n\r\n\t    };\r\n\r\n\t    $.ready = eventer.ready;\r\n\r\n\t    $.on = eventer.on;\r\n\r\n\t    $.off = eventer.off;\r\n    })(query);\r\n\r\n    (function($){\r\n\t    // plugin compatibility\r\n\t    $.uuid = 0;\r\n\t    $.support = browser.support;\r\n\t    $.expr = {};\r\n\r\n\t    $.expr[\":\"] = $.expr.pseudos = $.expr.filters = finder.pseudos;\r\n\r\n\t    $.expr.createPseudo = function(fn) {\r\n\t    \treturn fn;\r\n\t    };\r\n\r\n\t    $.cssHooks = styler.cssHooks;\r\n\r\n\t    $.contains = noder.contains;\r\n\r\n\t    $.css = styler.css;\r\n\r\n\t    $.data = datax.data;\r\n\r\n\t    $.fx = fx;\r\n\t    $.fx.step = {\r\n\r\n        };\r\n\r\n        $.speed = function( speed, easing, fn ) {\r\n            var opt = speed && typeof speed === \"object\" ? $.extend( {}, speed ) : {\r\n                complete: fn || !fn && easing ||\r\n                    $.isFunction( speed ) && speed,\r\n                duration: speed,\r\n                easing: fn && easing || easing && !$.isFunction( easing ) && easing\r\n            };\r\n\r\n            // Go to the end state if fx are off\r\n            if ( $.fx.off ) {\r\n                opt.duration = 0;\r\n\r\n            } else {\r\n                if ( typeof opt.duration !== \"number\" ) {\r\n                    if ( opt.duration in $.fx.speeds ) {\r\n                        opt.duration = $.fx.speeds[ opt.duration ];\r\n\r\n                    } else {\r\n                        opt.duration = $.fx.speeds._default;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Normalize opt.queue - true/undefined/null -> \"fx\"\r\n            if ( opt.queue == null || opt.queue === true ) {\r\n                opt.queue = \"fx\";\r\n            }\r\n\r\n            // Queueing\r\n            opt.old = opt.complete;\r\n\r\n            opt.complete = function() {\r\n                if ( $.isFunction( opt.old ) ) {\r\n                    opt.old.call( this );\r\n                }\r\n\r\n                if ( opt.queue ) {\r\n                    $.dequeue( this, opt.queue );\r\n                }\r\n            };\r\n\r\n            return opt;\r\n        };\r\n\r\n        $.easing = {};\r\n\r\n\t    $.offset = {};\r\n\t    $.offset.setOffset = function(elem, options, i) {\r\n\t        var position = $.css(elem, \"position\");\r\n\r\n\t        // set position first, in-case top/left are set even on static elem\r\n\t        if (position === \"static\") {\r\n\t            elem.style.position = \"relative\";\r\n\t        }\r\n\r\n\t        var curElem = $(elem),\r\n\t            curOffset = curElem.offset(),\r\n\t            curCSSTop = $.css(elem, \"top\"),\r\n\t            curCSSLeft = $.css(elem, \"left\"),\r\n\t            calculatePosition = (position === \"absolute\" || position === \"fixed\") && $.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1,\r\n\t            props = {},\r\n\t            curPosition = {},\r\n\t            curTop, curLeft;\r\n\r\n\t        // need to be able to calculate position if either top or left is auto and position is either absolute or fixed\r\n\t        if (calculatePosition) {\r\n\t            curPosition = curElem.position();\r\n\t            curTop = curPosition.top;\r\n\t            curLeft = curPosition.left;\r\n\t        } else {\r\n\t            curTop = parseFloat(curCSSTop) || 0;\r\n\t            curLeft = parseFloat(curCSSLeft) || 0;\r\n\t        }\r\n\r\n\t        if ($.isFunction(options)) {\r\n\t            options = options.call(elem, i, curOffset);\r\n\t        }\r\n\r\n\t        if (options.top != null) {\r\n\t            props.top = (options.top - curOffset.top) + curTop;\r\n\t        }\r\n\t        if (options.left != null) {\r\n\t            props.left = (options.left - curOffset.left) + curLeft;\r\n\t        }\r\n\r\n\t        if (\"using\" in options) {\r\n\t            options.using.call(elem, props);\r\n\t        } else {\r\n\t            curElem.css(props);\r\n\t        }\r\n\t    };\r\n\r\n        $._data = function(elm,propName) {\r\n            if (elm.hasAttribute) {\r\n                return datax.data(elm,propName);\r\n            } else {\r\n                return {};\r\n            }\r\n        };\r\n\r\n     \tvar t = $.fn.text;  \r\n\t    $.fn.text = function(v) {\r\n\t        var r = t.apply(this,arguments);\r\n\t        if (r === undefined) {\r\n\t            r = \"\";\r\n\t        }  \r\n\t        return r;\r\n\t    };       \r\n\r\n\t    $.fn.pos = $.fn.position;\r\n        \t    \r\n    })(query);\r\n\r\n    query.parseHTML = function(html) {\r\n        return  noder.createFragment(html);\r\n    };\r\n\r\n    query.uniqueSort = query.unique = langx.uniq;\r\n\r\n    query.skylark = skylark;\r\n\r\n    return window.jQuery = window.$ = query;\r\n});\r\n\ndefine('skylark-jquery/ajax',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-net-http/Xhr\",\r\n    \"./core\",\r\n], function(langx,Xhr,$) {\r\n    var jsonpID = 0;\r\n\r\n     // Attach a bunch of functions for handling common AJAX events\r\n    $.each( [\r\n        \"ajaxStart\",\r\n        \"ajaxStop\",\r\n        \"ajaxComplete\",\r\n        \"ajaxError\",\r\n        \"ajaxSuccess\",\r\n        \"ajaxSend\"\r\n    ], function( i, type ) {\r\n        $.fn[ type ] = function( fn ) {\r\n            return this.on( type, fn );\r\n        };\r\n    } );\r\n   \r\n\r\n    function appendQuery(url, query) {\r\n        if (query == '') return url\r\n        return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n    }\r\n    \r\n    $.ajaxJSONP = function(options) {\r\n        var deferred = new langx.Deferred();\r\n        var _callbackName = options.jsonpCallback,\r\n            callbackName = ($.isFunction(_callbackName) ?\r\n                _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\r\n            script = document.createElement('script'),\r\n            originalCallback = window[callbackName],\r\n            responseData,\r\n            abort = function(errorType) {\r\n                $(script).triggerHandler('error', errorType || 'abort')\r\n            },\r\n            xhr = { abort: abort },\r\n            abortTimeout;\r\n\r\n        for (var key in options.data) {\r\n            options.url = appendQuery(options.url, key + \"=\" + options.data[key]);\r\n        }\r\n         \r\n//        if (deferred) deferred.promise(xhr)\r\n\r\n        $(script).on('load error', function(e, errorType) {\r\n            clearTimeout(abortTimeout)\r\n            $(script).off().remove()\r\n\r\n            if (e.type == 'error' || !responseData) {\r\n                deferred.reject(e);\r\n            } else {\r\n                deferred.resolve(responseData[0],200,xhr);\r\n            }\r\n\r\n            window[callbackName] = originalCallback\r\n            if (responseData && $.isFunction(originalCallback))\r\n                originalCallback(responseData[0])\r\n\r\n            originalCallback = responseData = undefined\r\n        })\r\n\r\n        window[callbackName] = function() {\r\n            responseData = arguments\r\n        }\r\n\r\n        script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\r\n        document.head.appendChild(script)\r\n\r\n        if (options.timeout > 0) abortTimeout = setTimeout(function() {\r\n            abort('timeout')\r\n        }, options.timeout)\r\n\r\n        return deferred;\r\n    }\r\n\r\n    //$.ajaxSettings = Xhr.defaultOptions;\r\n    //$.ajaxSettings.xhr = function() {\r\n    //    return new window.XMLHttpRequest()\r\n    //};\r\n\r\n    $.ajaxSettings = {\r\n        processData : true\r\n    };\r\n\r\n\r\n    $.ajax = function(url,options) {\r\n        if (!url) {\r\n            options = {\r\n                url :  \"./\"\r\n            };\r\n        } else if (!options) {\r\n            if (langx.isString(url)) {\r\n                options = {\r\n                    url :  url\r\n                };\r\n            } else {\r\n                options = url;\r\n            }\r\n        } else {\r\n            options.url = url;\r\n        }\r\n\r\n        options = langx.mixin({},$.ajaxSettings,options);\r\n\r\n        if ('jsonp' == options.dataType) {\r\n            var hasPlaceholder = /\\?.+=\\?/.test(options.url);\r\n\r\n            if (!hasPlaceholder)\r\n                options.url = appendQuery(options.url,\r\n                    options.jsonp ? (options.jsonp + '=?') : options.jsonp === false ? '' : 'callback=?')\r\n            return $.ajaxJSONP(options);\r\n        }\r\n\r\n        function ajaxSuccess(data,status,xhr) {\r\n            $(document).trigger(\"ajaxSucess\");\r\n            if (options.success) {\r\n                options.success.apply(this,arguments);\r\n            }\r\n            if (options.complete) {\r\n                options.complete.apply(this,arguments);\r\n            }\r\n            return data;\r\n        }\r\n\r\n        function ajaxError() {\r\n            $(document).trigger(\"ajaxError\");\r\n            if (options.error) {\r\n                options.error.apply(this,arguments);\r\n            }\r\n        }\r\n\r\n        var p = Xhr.request(options.url,options);\r\n        p = p.then(ajaxSuccess,ajaxError);\r\n        p.success = p.done;\r\n        p.error = p.fail;\r\n        p.complete = p.always;\r\n        \r\n        return p;\r\n    };\r\n\r\n    // handle optional data/success arguments\r\n    function parseArguments(url, data, success, dataType) {\r\n        if ($.isFunction(url)) {\r\n            dataType = data, success = url, data = undefined,url = undefined;\r\n        } else if ($.isFunction(data)) {\r\n            dataType = success, success = data, data = undefined;\r\n        } \r\n        if (!$.isFunction(success)) dataType = success, success = undefined\r\n        return {\r\n            url: url,\r\n            data: data,\r\n            success: success,\r\n            dataType: dataType\r\n        }\r\n    }\r\n\r\n    $.get = function( /* url, data, success, dataType */ ) {\r\n        return $.ajax(parseArguments.apply(null, arguments))\r\n    }\r\n\r\n    $.post = function( /* url, data, success, dataType */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.type = 'POST'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    $.getJSON = function( /* url, data, success */ ) {\r\n        var options = parseArguments.apply(null, arguments)\r\n        options.dataType = 'json'\r\n        return $.ajax(options)\r\n    }\r\n\r\n    var originalLoad = $.fn.load;\r\n\r\n    $.fn.load = function(url, data, success) {\r\n        if (\"string\" != typeof url && originalLoad) {\r\n            return originalLoad.apply(this, arguments);\r\n        }\r\n        if (!this.length) return this\r\n        var self = this,\r\n            options = parseArguments(url, data, success),\r\n            parts = options.url && options.url.split(/\\s/),\r\n            selector,\r\n            callback = options.success\r\n        if (parts && parts.length > 1) options.url = parts[0], selector = parts[1]\r\n\r\n        if (options.data && typeof options.data === \"object\") {\r\n            options.type = \"POST\";\r\n        }\r\n        options.success = function(response) {\r\n            self.html(selector ?\r\n                $('<div>').html(response.replace(rscript, \"\")).find(selector) : response)\r\n            callback && callback.apply(self, arguments)\r\n        }\r\n        $.ajax(options)\r\n        return this\r\n    }\r\n\r\n    $.param = Xhr.param;\r\n\r\n\r\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\n    function addToPrefiltersOrTransports(structure) {\r\n\r\n        // dataTypeExpression is optional and defaults to \"*\"\r\n        return function(dataTypeExpression, func) {\r\n\r\n            if (typeof dataTypeExpression !== \"string\") {\r\n                func = dataTypeExpression;\r\n                dataTypeExpression = \"*\";\r\n            }\r\n\r\n            var dataType,\r\n                i = 0,\r\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\r\n\r\n            if (jQuery.isFunction(func)) {\r\n\r\n                // For each dataType in the dataTypeExpression\r\n                while ((dataType = dataTypes[i++])) {\r\n\r\n                    // Prepend if requested\r\n                    if (dataType[0] === \"+\") {\r\n                        dataType = dataType.slice(1) || \"*\";\r\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\r\n\r\n                        // Otherwise append\r\n                    } else {\r\n                        (structure[dataType] = structure[dataType] || []).push(func);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var\r\n        prefilters = {},\r\n        transports = {},\r\n        rnotwhite = (/\\S+/g);\r\n\r\n    $.ajaxPrefilter = addToPrefiltersOrTransports(prefilters);\r\n    $.ajaxTransport = addToPrefiltersOrTransports(transports);\r\n    $.ajaxSetup = function(target, settings) {\r\n        langx.mixin(Xhr.defaultOptions,target,settings);\r\n    };\r\n\r\n    $.getScript = function( url, callback ) {\r\n        return $.get( url, undefined, callback, \"script\" );\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/callbacks',[\r\n    \"./core\"\r\n], function($) {\r\n\r\n    //     This module is borrow from zepto.callback.js\r\n    //     (c) 2010-2014 Thomas Fuchs\r\n    //     Zepto.js may be freely distributed under the MIT license.\r\n\r\n    // Create a collection of callbacks to be fired in a sequence, with configurable behaviour\r\n    // Option flags:\r\n    //   - once: Callbacks fired at most one time.\r\n    //   - memory: Remember the most recent context and arguments\r\n    //   - stopOnFalse: Cease iterating over callback list\r\n    //   - unique: Permit adding at most one instance of the same callback\r\n    $.Callbacks = function(options) {\r\n        options = $.extend({}, options)\r\n\r\n        var memory, // Last fire value (for non-forgettable lists)\r\n            fired, // Flag to know if list was already fired\r\n            firing, // Flag to know if list is currently firing\r\n            firingStart, // First callback to fire (used internally by add and fireWith)\r\n            firingLength, // End of the loop when firing\r\n            firingIndex, // Index of currently firing callback (modified by remove if needed)\r\n            list = [], // Actual callback list\r\n            stack = !options.once && [], // Stack of fire calls for repeatable lists\r\n            fire = function(data) {\r\n                memory = options.memory && data\r\n                fired = true\r\n                firingIndex = firingStart || 0\r\n                firingStart = 0\r\n                firingLength = list.length\r\n                firing = true\r\n                for (; list && firingIndex < firingLength; ++firingIndex) {\r\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\r\n                        memory = false\r\n                        break\r\n                    }\r\n                }\r\n                firing = false\r\n                if (list) {\r\n                    if (stack) stack.length && fire(stack.shift())\r\n                    else if (memory) list.length = 0\r\n                    else Callbacks.disable()\r\n                }\r\n            },\r\n\r\n            Callbacks = {\r\n                add: function() {\r\n                    if (list) {\r\n                        var start = list.length,\r\n                            add = function(args) {\r\n                                $.each(args, function(_, arg) {\r\n                                    if (typeof arg === \"function\") {\r\n                                        if (!options.unique || !Callbacks.has(arg)) list.push(arg)\r\n                                    } else if (arg && arg.length && typeof arg !== 'string') add(arg)\r\n                                })\r\n                            }\r\n                        add(arguments)\r\n                        if (firing) firingLength = list.length\r\n                        else if (memory) {\r\n                            firingStart = start\r\n                            fire(memory)\r\n                        }\r\n                    }\r\n                    return this\r\n                },\r\n                remove: function() {\r\n                    if (list) {\r\n                        $.each(arguments, function(_, arg) {\r\n                            var index\r\n                            while ((index = $.inArray(arg, list, index)) > -1) {\r\n                                list.splice(index, 1)\r\n                                // Handle firing indexes\r\n                                if (firing) {\r\n                                    if (index <= firingLength) --firingLength\r\n                                    if (index <= firingIndex) --firingIndex\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    return this\r\n                },\r\n                has: function(fn) {\r\n                    return !!(list && (fn ? $.inArray(fn, list) > -1 : list.length))\r\n                },\r\n                empty: function() {\r\n                    firingLength = list.length = 0\r\n                    return this\r\n                },\r\n                disable: function() {\r\n                    list = stack = memory = undefined\r\n                    return this\r\n                },\r\n                disabled: function() {\r\n                    return !list\r\n                },\r\n                lock: function() {\r\n                    stack = undefined;\r\n                    if (!memory) Callbacks.disable()\r\n                    return this\r\n                },\r\n                locked: function() {\r\n                    return !stack\r\n                },\r\n                fireWith: function(context, args) {\r\n                    if (list && (!fired || stack)) {\r\n                        args = args || []\r\n                        args = [context, args.slice ? args.slice() : args]\r\n                        if (firing) stack.push(args)\r\n                        else fire(args)\r\n                    }\r\n                    return this\r\n                },\r\n                fire: function() {\r\n                    return Callbacks.fireWith(this, arguments)\r\n                },\r\n                fired: function() {\r\n                    return !!fired\r\n                }\r\n            }\r\n\r\n        return Callbacks\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/deferred',[\r\n    \"./core\",\r\n    \"skylark-langx/langx\"\r\n], function($,langx) {\r\n\r\n    $.Deferred = function() {\r\n        var d = new langx.Deferred(),\r\n            ret = {\r\n                promise : function() {\r\n                    return d.promise;\r\n                }\r\n            };\r\n\r\n        [\"resolve\",\"resolveWith\",\"reject\",\"rejectWith\",\"notify\",\"then\",\"done\",\"fail\",\"progress\",\"always\",\"state\"].forEach(function(name){\r\n            ret[name] = function() {\r\n              var ret2 =   d[name].apply(d,arguments);\r\n              if (ret2 == d) {\r\n                ret2 = ret;\r\n              }\r\n              return ret2;\r\n            }\r\n        });\r\n\r\n        return ret;\r\n    };\r\n    \r\n    $.when = function(){\r\n        var p = langx.Deferred.all(langx.makeArray(arguments)),\r\n            originThen = p.then;\r\n        p.then = function(onResolved,onRejected) {\r\n            var handler = function(results) {\r\n                //results = results.map(function(result){\r\n                //    return [result];\r\n                //});\r\n                return onResolved && onResolved.apply(null,results);\r\n            };\r\n            return originThen.call(p,handler,onRejected);\r\n        };\r\n        return p;\r\n    };\r\n\r\n    return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/queue',[\r\n    \"skylark-langx/langx\",\r\n    \"./core\",\r\n    \"./callbacks\"\r\n], function(langx, $) {\r\n\r\n // jQuery Data object\r\n  var rbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\r\n      rmultiDash = /([A-Z])/g,\r\n      expando = \"Sky\" + ( '1.0' + Math.random() ).replace( /\\D/g, \"\"),\r\n      optionsCache = {},\r\n      core_rnotwhite = /\\S+/g,\r\n      core_deletedIds = [],\r\n      core_push = core_deletedIds.push;\r\n\r\n// Convert String-formatted options into Object-formatted ones and store in cache\r\n  function createOptions( options ) {\r\n    var object = optionsCache[ options ] = {};\r\n    $.each( options.match( core_rnotwhite ) || [], function( _, flag ) {\r\n      object[ flag ] = true;\r\n    });\r\n    return object;\r\n  }\r\n\r\n  function isArraylike( obj ) {\r\n    var length = obj.length,\r\n        type = $.type( obj );\r\n\r\n    if ( $.isWindow( obj ) ) {\r\n      return false;\r\n    }\r\n\r\n    if ( obj.nodeType === 1 && length ) {\r\n      return true;\r\n    }\r\n\r\n    return type === \"array\" || type !== \"function\" &&\r\n        ( length === 0 ||\r\n            typeof length === \"number\" && length > 0 && ( length - 1 ) in obj );\r\n  }\r\n\r\n  \r\n\r\n  function Data() {\r\n    // Support: Android < 4,\r\n    // Old WebKit does not have Object.preventExtensions/freeze method,\r\n    // return new empty object instead with no [[set]] accessor\r\n    Object.defineProperty( this.cache = {}, 0, {\r\n      get: function() {\r\n        return {};\r\n      }\r\n    });\r\n\r\n    this.expando = expando + Math.random();\r\n  }\r\n\r\n  Data.uid = 1;\r\n\r\n  Data.accepts = function( owner ) {\r\n    // Accepts only:\r\n    //  - Node\r\n    //    - Node.ELEMENT_NODE\r\n    //    - Node.DOCUMENT_NODE\r\n    //  - Object\r\n    //    - Any\r\n    return owner.nodeType ?\r\n        owner.nodeType === 1 || owner.nodeType === 9 : true;\r\n  };\r\n\r\n  Data.prototype = {\r\n    key: function( owner ) {\r\n      // We can accept data for non-element nodes in modern browsers,\r\n      // but we should not, see #8335.\r\n      // Always return the key for a frozen object.\r\n      if ( !Data.accepts( owner ) ) {\r\n        return 0;\r\n      }\r\n\r\n      var descriptor = {},\r\n      // Check if the owner object already has a cache key\r\n          unlock = owner[ this.expando ];\r\n\r\n      // If not, create one\r\n      if ( !unlock ) {\r\n        unlock = Data.uid++;\r\n\r\n        // Secure it in a non-enumerable, non-writable property\r\n        try {\r\n          descriptor[ this.expando ] = { value: unlock };\r\n          Object.defineProperties( owner, descriptor );\r\n\r\n          // Support: Android < 4\r\n          // Fallback to a less secure definition\r\n        } catch ( e ) {\r\n          descriptor[ this.expando ] = unlock;\r\n          $.extend( owner, descriptor );\r\n        }\r\n      }\r\n\r\n      // Ensure the cache object\r\n      if ( !this.cache[ unlock ] ) {\r\n        this.cache[ unlock ] = {};\r\n      }\r\n\r\n      return unlock;\r\n    },\r\n    set: function( owner, data, value ) {\r\n      var prop,\r\n      // There may be an unlock assigned to this node,\r\n      // if there is no entry for this \"owner\", create one inline\r\n      // and set the unlock as though an owner entry had always existed\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      // Handle: [ owner, key, value ] args\r\n      if ( typeof data === \"string\" ) {\r\n        cache[ data ] = value;\r\n\r\n        // Handle: [ owner, { properties } ] args\r\n      } else {\r\n        // Fresh assignments by object are shallow copied\r\n        if ( $.isEmptyObject( cache ) ) {\r\n          $.extend( this.cache[ unlock ], data );\r\n          // Otherwise, copy the properties one-by-one to the cache object\r\n        } else {\r\n          for ( prop in data ) {\r\n            cache[ prop ] = data[ prop ];\r\n          }\r\n        }\r\n      }\r\n      return cache;\r\n    },\r\n    get: function( owner, key ) {\r\n      // Either a valid cache is found, or will be created.\r\n      // New caches will be created and the unlock returned,\r\n      // allowing direct access to the newly created\r\n      // empty data object. A valid owner object must be provided.\r\n      var cache = this.cache[ this.key( owner ) ];\r\n\r\n      return key === undefined ?\r\n          cache : cache[ key ];\r\n    },\r\n    access: function( owner, key, value ) {\r\n      var stored;\r\n      // In cases where either:\r\n      //\r\n      //   1. No key was specified\r\n      //   2. A string key was specified, but no value provided\r\n      //\r\n      // Take the \"read\" path and allow the get method to determine\r\n      // which value to return, respectively either:\r\n      //\r\n      //   1. The entire cache object\r\n      //   2. The data stored at the key\r\n      //\r\n      if ( key === undefined ||\r\n          ((key && typeof key === \"string\") && value === undefined) ) {\r\n\r\n        stored = this.get( owner, key );\r\n\r\n        return stored !== undefined ?\r\n            stored : this.get( owner, $.camelCase(key) );\r\n      }\r\n\r\n      // [*]When the key is not a string, or both a key and value\r\n      // are specified, set or extend (existing objects) with either:\r\n      //\r\n      //   1. An object of properties\r\n      //   2. A key and value\r\n      //\r\n      this.set( owner, key, value );\r\n\r\n      // Since the \"set\" path can have two possible entry points\r\n      // return the expected data based on which path was taken[*]\r\n      return value !== undefined ? value : key;\r\n    },\r\n    remove: function( owner, key ) {\r\n      var i, name, camel,\r\n          unlock = this.key( owner ),\r\n          cache = this.cache[ unlock ];\r\n\r\n      if ( key === undefined ) {\r\n        this.cache[ unlock ] = {};\r\n\r\n      } else {\r\n        // Support array or space separated string of keys\r\n        if ( $.isArray( key ) ) {\r\n          // If \"name\" is an array of keys...\r\n          // When data is initially created, via (\"key\", \"val\") signature,\r\n          // keys will be converted to camelCase.\r\n          // Since there is no way to tell _how_ a key was added, remove\r\n          // both plain key and camelCase key. #12786\r\n          // This will only penalize the array argument path.\r\n          name = key.concat( key.map( $.camelCase ) );\r\n        } else {\r\n          camel = $.camelCase( key );\r\n          // Try the string as a key before any manipulation\r\n          if ( key in cache ) {\r\n            name = [ key, camel ];\r\n          } else {\r\n            // If a key with the spaces exists, use it.\r\n            // Otherwise, create an array by matching non-whitespace\r\n            name = camel;\r\n            name = name in cache ?\r\n                [ name ] : ( name.match( core_rnotwhite ) || [] );\r\n          }\r\n        }\r\n\r\n        i = name.length;\r\n        while ( i-- ) {\r\n          delete cache[ name[ i ] ];\r\n        }\r\n      }\r\n    },\r\n    hasData: function( owner ) {\r\n      return !$.isEmptyObject(\r\n          this.cache[ owner[ this.expando ] ] || {}\r\n      );\r\n    },\r\n    discard: function( owner ) {\r\n      if ( owner[ this.expando ] ) {\r\n        delete this.cache[ owner[ this.expando ] ];\r\n      }\r\n    }\r\n  };\r\n\r\n  var data_priv = new Data();\r\n\r\n  $.extend($, {\r\n    queue: function( elem, type, data ) {\r\n      var queue;\r\n\r\n      if ( elem ) {\r\n        type = ( type || \"fx\" ) + \"queue\";\r\n        queue = data_priv.get( elem, type );\r\n\r\n        // Speed up dequeue by getting out quickly if this is just a lookup\r\n        if ( data ) {\r\n          if ( !queue || $.isArray( data ) ) {\r\n            queue = data_priv.access( elem, type, $.makeArray(data) );\r\n          } else {\r\n            queue.push( data );\r\n          }\r\n        }\r\n        return queue || [];\r\n      }\r\n    },\r\n\r\n    dequeue: function( elem, type ) {\r\n      type = type || \"fx\";\r\n\r\n      var queue = $.queue( elem, type ),\r\n          startLength = queue.length,\r\n          fn = queue.shift(),\r\n          hooks = $._queueHooks( elem, type ),\r\n          next = function() {\r\n            $.dequeue( elem, type );\r\n          };\r\n\r\n      // If the fx queue is dequeued, always remove the progress sentinel\r\n      if ( fn === \"inprogress\" ) {\r\n        fn = queue.shift();\r\n        startLength--;\r\n      }\r\n\r\n      if ( fn ) {\r\n\r\n        // Add a progress sentinel to prevent the fx queue from being\r\n        // automatically dequeued\r\n        if ( type === \"fx\" ) {\r\n          queue.unshift( \"inprogress\" );\r\n        }\r\n\r\n        // clear up the last queue stop function\r\n        delete hooks.stop;\r\n        fn.call( elem, next, hooks );\r\n      }\r\n\r\n      if ( !startLength && hooks ) {\r\n        hooks.empty.fire();\r\n      }\r\n    },\r\n\r\n    // not intended for public consumption - generates a queueHooks object, or returns the current one\r\n    _queueHooks: function( elem, type ) {\r\n      var key = type + \"queueHooks\";\r\n      return data_priv.get( elem, key ) || data_priv.access( elem, key, {\r\n        empty: $.Callbacks(\"once memory\").add(function() {\r\n          data_priv.remove( elem, [ type + \"queue\", key ] );\r\n        })\r\n      });\r\n    },\r\n\r\n    // array operations\r\n    makeArray: function( arr, results ) {\r\n      var ret = results || [];\r\n\r\n      if ( arr != null ) {\r\n        if ( isArraylike( Object(arr) ) ) {\r\n          $.merge( ret,\r\n              typeof arr === \"string\" ?\r\n                  [ arr ] : arr\r\n          );\r\n        } else {\r\n          core_push.call( ret, arr );\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    },\r\n    merge: function( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n  });\r\n\r\n  $.extend($.fn, {\r\n    queue: function( type, data ) {\r\n      var setter = 2;\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        data = type;\r\n        type = \"fx\";\r\n        setter--;\r\n      }\r\n\r\n      if ( arguments.length < setter ) {\r\n        return $.queue( this[0], type );\r\n      }\r\n\r\n      return data === undefined ?\r\n          this :\r\n          this.each(function() {\r\n            var queue = $.queue( this, type, data );\r\n\r\n            // ensure a hooks for this queue\r\n            $._queueHooks( this, type );\r\n\r\n            if ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\r\n              $.dequeue( this, type );\r\n            }\r\n          });\r\n    },\r\n    dequeue: function( type ) {\r\n      return this.each(function() {\r\n        $.dequeue( this, type );\r\n      });\r\n    },\r\n    // Based off of the plugin by Clint Helfers, with permission.\r\n    // http://blindsignals.com/index.php/2009/07/jquery-delay/\r\n    delay: function( time, type ) {\r\n      time = $.fx ? $.fx.speeds[ time ] || time : time;\r\n      type = type || \"fx\";\r\n\r\n      return this.queue( type, function( next, hooks ) {\r\n        var timeout = setTimeout( next, time );\r\n        hooks.stop = function() {\r\n          clearTimeout( timeout );\r\n        };\r\n      });\r\n    },\r\n    clearQueue: function( type ) {\r\n      return this.queue( type || \"fx\", [] );\r\n    },\r\n    // Get a promise resolved when queues of a certain type\r\n    // are emptied (fx is the type by default)\r\n    promise: function( type, obj ) {\r\n      var tmp,\r\n          count = 1,\r\n          defer = $.Deferred(),\r\n          elements = this,\r\n          i = this.length,\r\n          resolve = function() {\r\n            if ( !( --count ) ) {\r\n              defer.resolveWith( elements, [ elements ] );\r\n            }\r\n          };\r\n\r\n      if ( typeof type !== \"string\" ) {\r\n        obj = type;\r\n        type = undefined;\r\n      }\r\n      type = type || \"fx\";\r\n\r\n      while( i-- ) {\r\n        tmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\r\n        if ( tmp && tmp.empty ) {\r\n          count++;\r\n          tmp.empty.add( resolve );\r\n        }\r\n      }\r\n      resolve();\r\n      return defer.promise( obj );\r\n    }\r\n  });\r\n\r\n  return $;\r\n\r\n});\r\n\ndefine('skylark-jquery/JqueryPlugin',[\r\n\t\"skylark-langx-types\",\r\n\t\"skylark-langx-objects\",\r\n\t\"skylark-langx-arrays\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-domx-data\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-plugins\",\r\n\t\"skylark-domx-query\",\r\n],function(types, objects, arrays, langx, datax, eventer, plugins, $){\r\n\r\n    var pluginUuid = 0;\r\n\r\n\tvar JqPlugin = plugins.Plugin.inherit({\r\n\t\tklassName : \"JqPlugin\",\r\n\r\n        pluginEventPrefix: \"\",\r\n\r\n        options: {\r\n            // Callbacks\r\n            create: null\r\n        },\r\n\r\n        destroy: function() {\r\n            this.overrided();\r\n\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            this.element\r\n                .off( this.eventNamespace );\r\n\r\n            // Clean up events and states\r\n            this.bindings.off( this.eventNamespace );\r\n        },\r\n\r\n        _construct : function(element,options) {\r\n            //this.options = langx.mixin( {}, this.options );\r\n\r\n            element = $( element || this.defaultElement || this )[ 0 ];\r\n            this.element = $( element );\r\n            this.uuid = pluginUuid++;\r\n            this.eventNamespace = \".\" + this.pluginName + this.uuid;\r\n\r\n            this.bindings = $();\r\n            this.classesElementLookup = {};\r\n\r\n\t\t\tthis.hoverable = $();\r\n\t\t\tthis.focusable = $();\r\n\r\n            if ( element !== this ) {\r\n                datax.data( element, this.pluginName, this );\r\n                this._on( true, this.element, {\r\n                    remove: function( event ) {\r\n                        if ( event.target === element ) {\r\n                            this.destroy();\r\n                        }\r\n                    }\r\n                } );\r\n                this.document = $( element.style ?\r\n\r\n                    // Element within the document\r\n                    element.ownerDocument :\r\n\r\n                    // Element is window or document\r\n                    element.document || element );\r\n                this.window = $( this.document[ 0 ].defaultView || this.document[ 0 ].parentWindow );\r\n            }\r\n\r\n            this.overrided(element,options);\r\n\r\n//            this.options = langx.mixin( {},\r\n//                this.options,\r\n//                this._getCreateOptions(),\r\n//                options );\r\n\r\n            this._create();\r\n\r\n            this._trigger( \"create\", null, this._getCreateEventData() );\r\n\r\n            this._init();\r\n        },\r\n\r\n\r\n\t     _initOptions : function(options) {\r\n\t     \toptions = langx.mixin(this._getCreateOptions(),options);\r\n\r\n\t\t\tthis.overrided(options);\r\n\t\t},\r\n\r\n        _getCreateOptions: function() {\r\n            return {};\r\n        },\r\n\r\n        _getCreateEventData: langx.noop,\r\n\r\n\t\t_super : function() {\r\n\t\t\tif (this.overrided) {\r\n\t\t\t\treturn this.overrided.apply(this,arguments);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_superApply : function ( args ) {\r\n\t\t\tif (this.overrided) {\r\n\t\t\t\treturn this.overrided.apply(this,args);\r\n\t\t\t}\r\n\t\t},\r\n\r\n        _create: langx.noop,\r\n\r\n        _init: langx.noop,\r\n\r\n\t\t_classes: function( options ) {\r\n\t\t\tvar full = [];\r\n\t\t\tvar that = this;\r\n\r\n\t\t\toptions = objects.mixin( {\r\n\t\t\t\telement: this.element,\r\n\t\t\t\tclasses: this.options.classes || {}\r\n\t\t\t}, options );\r\n\r\n\r\n\t\t\tfunction bindRemoveEvent() {\r\n\t\t\t\toptions.element.each( function( _, element ) {\r\n\t\t\t\t\tvar isTracked = langx.map( that.classesElementLookup, function( elements ) {\r\n\t\t\t\t\t\treturn elements;\r\n\t\t\t\t\t} )\r\n\t\t\t\t\t\t.some( function(elements ) {\r\n\t\t\t\t\t\t\treturn $(elements).is( element );\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tif ( !isTracked ) {\r\n\t\t\t\t\t\tthat._on( $( element ), {\r\n\t\t\t\t\t\t\tremove: \"_untrackClassesElement\"\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\tfunction processClassString( classes, checkOption ) {\r\n\t\t\t\tvar current, i;\r\n\t\t\t\tfor ( i = 0; i < classes.length; i++ ) {\r\n\t\t\t\t\tcurrent = that.classesElementLookup[ classes[ i ] ] || $();\r\n\t\t\t\t\tif ( options.add ) {\r\n\t\t\t\t\t\tbindRemoveEvent();\r\n\t\t\t\t\t\tcurrent = $( langx.uniq( current.get().concat( options.element.get() ) ) );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcurrent = $( current.not( options.element ).get() );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.classesElementLookup[ classes[ i ] ] = current;\r\n\t\t\t\t\tfull.push( classes[ i ] );\r\n\t\t\t\t\tif ( checkOption && options.classes[ classes[ i ] ] ) {\r\n\t\t\t\t\t\tfull.push( options.classes[ classes[ i ] ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( options.keys ) {\r\n\t\t\t\tprocessClassString( options.keys.match( /\\S+/g ) || [], true );\r\n\t\t\t}\r\n\t\t\tif ( options.extra ) {\r\n\t\t\t\tprocessClassString( options.extra.match( /\\S+/g ) || [] );\r\n\t\t\t}\r\n\r\n\t\t\treturn full.join( \" \" );\r\n\t\t},\r\n\r\n\t\t_untrackClassesElement: function( event ) {\r\n\t\t\tvar that = this;\r\n\t\t\tlangx.each( that.classesElementLookup, function( key, value ) {\r\n\t\t\t\tif ( arrays.inArray( event.target, value ) !== -1 ) {\r\n\t\t\t\t\tthat.classesElementLookup[ key ] = $( value.not( event.target ).get() );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tthis._off( $( event.target ) );\r\n\t\t},\r\n\r\n\t\t_removeClass: function( element, keys, extra ) {\r\n\t\t\treturn this._toggleClass( element, keys, extra, false );\r\n\t\t},\r\n\r\n\t\t_addClass: function( element, keys, extra ) {\r\n\t\t\treturn this._toggleClass( element, keys, extra, true );\r\n\t\t},\r\n\r\n\t\t_toggleClass: function( element, keys, extra, add ) {\r\n\t\t\tadd = ( typeof add === \"boolean\" ) ? add : extra;\r\n\t\t\tvar shift = ( typeof element === \"string\" || element === null ),\r\n\t\t\t\toptions = {\r\n\t\t\t\t\textra: shift ? keys : extra,\r\n\t\t\t\t\tkeys: shift ? element : keys,\r\n\t\t\t\t\telement: shift ? this.element : element,\r\n\t\t\t\t\tadd: add\r\n\t\t\t\t};\r\n\t\t\toptions.element.toggleClass( this._classes( options ), add );\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t_on: function( suppressDisabledCheck, element, handlers ) {\r\n\t\t\tvar delegateElement;\r\n\t\t\tvar instance = this;\r\n\r\n\t\t\t// No suppressDisabledCheck flag, shuffle arguments\r\n\t\t\tif ( typeof suppressDisabledCheck !== \"boolean\" ) {\r\n\t\t\t\thandlers = element;\r\n\t\t\t\telement = suppressDisabledCheck;\r\n\t\t\t\tsuppressDisabledCheck = false;\r\n\t\t\t}\r\n\r\n\t\t\t// No element argument, shuffle and use this.element\r\n\t\t\tif ( !handlers ) {\r\n\t\t\t\thandlers = element;\r\n\t\t\t\telement = this.element;\r\n\t\t\t\tdelegateElement = this.widget();\r\n\t\t\t} else {\r\n\t\t\t\telement = delegateElement = $( element );\r\n\t\t\t\tthis.bindings = this.bindings.add( element );\r\n\t\t\t}\r\n\r\n\t\t\tobjects.each( handlers, function( event, handler ) {\r\n\t\t\t\tfunction handlerProxy() {\r\n\r\n\t\t\t\t\t// Allow widgets to customize the disabled handling\r\n\t\t\t\t\t// - disabled as an array instead of boolean\r\n\t\t\t\t\t// - disabled class as method for disabling individual parts\r\n\t\t\t\t\tif ( !suppressDisabledCheck &&\r\n\t\t\t\t\t\t\t( instance.options.disabled === true ||\r\n\t\t\t\t\t\t\t$( this ).hasClass( \"ui-state-disabled\" ) ) ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n\t\t\t\t\t\t.apply( instance, arguments );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Copy the guid so direct unbinding works\r\n\t\t\t\tif ( typeof handler !== \"string\" ) {\r\n\t\t\t\t\thandlerProxy.guid = handler.guid =\r\n\t\t\t\t\t\thandler.guid || handlerProxy.guid || $.guid++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar match = event.match( /^([\\w:-]*)\\s*(.*)$/ );\r\n\t\t\t\tvar eventName = match[ 1 ] + instance.eventNamespace;\r\n\t\t\t\tvar selector = match[ 2 ];\r\n\r\n\t\t\t\tif ( selector ) {\r\n\t\t\t\t\tdelegateElement.on( eventName, selector, handlerProxy );\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.on( eventName, handlerProxy );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t},\r\n\r\n\t\t_off: function( element, eventName ) {\r\n\t\t\teventName = ( eventName || \"\" ).split( \" \" ).join( this.eventNamespace + \" \" ) +\r\n\t\t\t\tthis.eventNamespace;\r\n\t\t\telement.off( eventName );\r\n\r\n\t\t\t// Clear the stack to avoid memory leaks (#10056)\r\n\t\t\tthis.bindings = $( this.bindings.not( element ).get() );\r\n\t\t\tthis.focusable = $( this.focusable.not( element ).get() );\r\n\t\t\tthis.hoverable = $( this.hoverable.not( element ).get() );\r\n\t\t},\r\n\r\n\t\t_trigger: function( type, event, data ) {\r\n\t\t\tvar prop, orig;\r\n\t\t\tvar callback = this.options[ type ];\r\n\r\n\t\t\tdata = data || {};\r\n\t\t\tevent = eventer.proxy( event );\r\n\t\t\tevent.type = ( type === this.widgetEventPrefix ?\r\n\t\t\t\ttype :\r\n\t\t\t\tthis.widgetEventPrefix + type ).toLowerCase();\r\n\r\n\t\t\t// The original event may come from any element\r\n\t\t\t// so we need to reset the target on the new event\r\n\t\t\tevent.target = this.element[ 0 ];\r\n\r\n\t\t\t// Copy original event properties over to the new event\r\n\t\t\torig = event.originalEvent;\r\n\t\t\tif ( orig ) {\r\n\t\t\t\tfor ( prop in orig ) {\r\n\t\t\t\t\tif ( !( prop in event ) ) {\r\n\t\t\t\t\t\tevent[ prop ] = orig[ prop ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.trigger( event, data );\r\n\t\t\treturn !( types.isFunction( callback ) &&\r\n\t\t\t\tcallback.apply( this.element[ 0 ], [ event ].concat( data ) ) === false ||\r\n\t\t\t\tevent.isDefaultPrevented() );\r\n\t\t},\r\n\r\n\r\n\t    enable: function() {\r\n\t      return this._setOptions( { disabled: false } );\r\n\t    },\r\n\r\n\t    disable: function() {\r\n\t      return this._setOptions( { disabled: true } );\r\n\t    }\r\n\r\n\r\n\t});\r\n\r\n\treturn JqPlugin;\r\n});\n/*!\r\n * jQuery UI Widget @VERSION\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Widget\r\n//>>group: Core\r\n//>>description: Provides a factory for creating stateful widgets with a common API.\r\n//>>docs: http://api.jqueryui.com/jQuery.widget/\r\n//>>demos: http://jqueryui.com/widget/\r\n\r\ndefine( 'skylark-jquery/widget',[ \r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-domx-plugins\",\r\n\t\"./core\",\r\n\t\"./JqueryPlugin\"\r\n],  function(langx,splugins, $,JqPlugin ) {\r\n\r\n\tvar widgetUuid = 0;\r\n\tvar widgetHasOwnProperty = Array.prototype.hasOwnProperty;\r\n\tvar widgetSlice = Array.prototype.slice;\r\n\r\n\t$.cleanData = ( function( orig ) {\r\n\t\treturn function( elems ) {\r\n\t\t\tvar events, elem, i;\r\n\t\t\tfor ( i = 0; ( elem = elems[ i ] ) != null; i++ ) {\r\n\r\n\t\t\t\t// Only trigger remove when necessary to save time\r\n\t\t\t\tevents = $._data( elem, \"events\" );\r\n\t\t\t\tif ( events && events.remove ) {\r\n\t\t\t\t\t$( elem ).triggerHandler( \"remove\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\torig( elems );\r\n\t\t};\r\n\t} )( $.cleanData );\r\n\t\r\n\t$.widget = function( name, base, prototype ) {\r\n\t\tvar existingConstructor, constructor, basePrototype;\r\n\r\n\t\t// ProxiedPrototype allows the provided prototype to remain unmodified\r\n\t\t// so that it can be used as a mixin for multiple widgets (#8876)\r\n\t\tvar proxiedPrototype = {};\r\n\r\n\t\tvar namespace = name.split( \".\" )[ 0 ];\r\n\t\tname = name.split( \".\" )[ 1 ];\r\n\t\tvar fullName = namespace + \"-\" + name;\r\n\r\n\t\tif ( !prototype ) {\r\n\t\t\tprototype = base;\r\n\t\t\tbase = $.Widget;\r\n\t\t}\r\n\r\n\t\tif ( $.isArray( prototype ) ) {\r\n\t\t\tprototype = $.extend.apply( null, [ {} ].concat( prototype ) );\r\n\t\t}\r\n\r\n\t\t// Create selector for plugin\r\n\t\t$.expr.pseudos[ fullName.toLowerCase() ] = function( elem ) {\r\n\t\t\treturn !!$.data( elem, fullName );\r\n\t\t};\r\n\r\n\t\t$[ namespace ] = $[ namespace ] || {};\r\n\r\n\t\texistingConstructor = $[ namespace ][ name ];\r\n\r\n\t\tvar basePrototype = base.prototype,\r\n\t\t\tnewPrototype = {};\r\n\r\n\t\tfor (var key in prototype) {\r\n\t\t\tvar value = prototype[key];\r\n\r\n\t\t\tif ( $.isPlainObject( value ) ) {\r\n\t\t\t\tnewPrototype[ key ] = $.isPlainObject( basePrototype[ key ] ) ?\r\n\t\t\t\t\t$.widget.extend( {}, basePrototype[ key ], value ) :\r\n\r\n\t\t\t\t\t// Don't extend strings, arrays, etc. with objects\r\n\t\t\t\t\t$.widget.extend( {}, value );\r\n\t\t\t} else {\r\n\t\t\t\tnewPrototype[key] = value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar _proto = $.widget.extend({\r\n\r\n\t\t\t// TODO: remove support for widgetEventPrefix\r\n\t\t\t// always use the name + a colon as the prefix, e.g., draggable:start\r\n\t\t\t// don't prefix for widgets that aren't DOM-based\r\n\t\t\twidgetEventPrefix: existingConstructor ? ( base.prototype.widgetEventPrefix || name ) : name\r\n\t\t}, {\r\n\t\t\toptions : base.prototype.options\r\n\t\t},newPrototype, {\r\n\t\t\tname : fullName,\r\n\t\t\tnamespace: namespace,\r\n\t\t\twidgetName: name,\r\n\t\t\tpluginName : \"jqueryui.\" + (namespace ? namespace + \".\" : \"\") + name,\r\n\t\t\twidgetFullName: fullName\r\n\t\t} );\r\n\r\n\t\tconstructor = $[ namespace ][ name ] = base.inherit(_proto);\r\n\t\t/*\r\n\r\n\t\tconstructor = $[ namespace ][ name ] = function( options, element ) {\r\n\r\n\t\t\t// Allow instantiation without \"new\" keyword\r\n\t\t\tif ( !this._createWidget ) {\r\n\t\t\t\treturn new constructor( options, element );\r\n\t\t\t}\r\n\r\n\t\t\t// Allow instantiation without initializing for simple inheritance\r\n\t\t\t// must use \"new\" keyword (the code above always passes args)\r\n\t\t\tif ( arguments.length ) {\r\n\t\t\t\tthis._createWidget( options, element );\r\n\t\t\t}\r\n\t\t};\r\n\t\t*/\r\n\t\t// Extend with the existing constructor to carry over any static properties\r\n\t\t$.extend( constructor, existingConstructor, {\r\n\t\t\tversion: prototype.version,\r\n\r\n\t\t\t// Copy the object used to create the prototype in case we need to\r\n\t\t\t// redefine the widget later\r\n\t\t\t_proto: _proto,\r\n\r\n\t\t\t// Track widgets that inherit from this widget in case this widget is\r\n\t\t\t// redefined after a widget inherits from it\r\n\t\t\t_childConstructors: []\r\n\t\t} );\r\n\r\n\t\t/*\r\n\t\tbasePrototype = new base();\r\n\r\n\t\t// We need to make the options hash a property directly on the new instance\r\n\t\t// otherwise we'll modify the options hash on the prototype that we're\r\n\t\t// inheriting from\r\n\t\tbasePrototype.options = $.widget.extend( {}, basePrototype.options );\r\n\t\t$.each( prototype, function( prop, value ) {\r\n\t\t\tif ( !$.isFunction( value ) ) {\r\n\t\t\t\tproxiedPrototype[ prop ] = value;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tproxiedPrototype[ prop ] = ( function() {\r\n\t\t\t\tfunction _super() {\r\n\t\t\t\t\treturn base.prototype[ prop ].apply( this, arguments );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction _superApply( args ) {\r\n\t\t\t\t\treturn base.prototype[ prop ].apply( this, args );\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tvar __super = this._super;\r\n\t\t\t\t\tvar __superApply = this._superApply;\r\n\t\t\t\t\tvar returnValue;\r\n\r\n\t\t\t\t\tthis._super = _super;\r\n\t\t\t\t\tthis._superApply = _superApply;\r\n\r\n\t\t\t\t\treturnValue = value.apply( this, arguments );\r\n\r\n\t\t\t\t\tthis._super = __super;\r\n\t\t\t\t\tthis._superApply = __superApply;\r\n\r\n\t\t\t\t\treturn returnValue;\r\n\t\t\t\t};\r\n\t\t\t} )();\r\n\t\t} );\r\n\t\tconstructor.prototype = $.widget.extend( basePrototype, {\r\n\r\n\t\t\t// TODO: remove support for widgetEventPrefix\r\n\t\t\t// always use the name + a colon as the prefix, e.g., draggable:start\r\n\t\t\t// don't prefix for widgets that aren't DOM-based\r\n\t\t\twidgetEventPrefix: existingConstructor ? ( basePrototype.widgetEventPrefix || name ) : name\r\n\t\t}, proxiedPrototype, {\r\n\t\t\tconstructor: constructor,\r\n\t\t\tnamespace: namespace,\r\n\t\t\twidgetName: name,\r\n\t\t\twidgetFullName: fullName\r\n\t\t} );\r\n\t\t*/\r\n\t\t// If this widget is being redefined then we need to find all widgets that\r\n\t\t// are inheriting from it and redefine all of them so that they inherit from\r\n\t\t// the new version of this widget. We're essentially trying to replace one\r\n\t\t// level in the prototype chain.\r\n\t\tif ( existingConstructor ) {\r\n\t\t\t$.each( existingConstructor._childConstructors, function( i, child ) {\r\n\t\t\t\tvar childPrototype = child.prototype;\r\n\r\n\t\t\t\t// Redefine the child widget using the same prototype that was\r\n\t\t\t\t// originally used, but inherit from the new version of the base\r\n\t\t\t\t$.widget( childPrototype.namespace + \".\" + childPrototype.widgetName, constructor,\r\n\t\t\t\t\tchild._proto );\r\n\t\t\t} );\r\n\r\n\t\t\t// Remove the list of existing child constructors from the old constructor\r\n\t\t\t// so the old child constructors can be garbage collected\r\n\t\t\tdelete existingConstructor._childConstructors;\r\n\t\t} else {\r\n\t\t\tif (base._childConstructors) {\r\n\t\t\t\tbase._childConstructors.push( constructor );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//$.widget.bridge( name, constructor );\r\n\r\n\t\tsplugins.register(constructor,name,fullName);\r\n\r\n\t\treturn constructor;\r\n\t};\r\n\r\n\t$.widget.extend = function( target ) {\r\n\t\tvar input = widgetSlice.call( arguments, 1 );\r\n\t\tvar inputIndex = 0;\r\n\t\tvar inputLength = input.length;\r\n\t\tvar key;\r\n\t\tvar value;\r\n\r\n\t\tfor ( ; inputIndex < inputLength; inputIndex++ ) {\r\n\t\t\tfor ( key in input[ inputIndex ] ) {\r\n\t\t\t\tvalue = input[ inputIndex ][ key ];\r\n\t\t\t\tif ( widgetHasOwnProperty.call( input[ inputIndex ], key ) && value !== undefined ) {\r\n\r\n\t\t\t\t\t// Clone objects\r\n\t\t\t\t\tif ( $.isPlainObject( value ) ) {\r\n\t\t\t\t\t\ttarget[ key ] = $.isPlainObject( target[ key ] ) ?\r\n\t\t\t\t\t\t\t$.widget.extend( {}, target[ key ], value ) :\r\n\r\n\t\t\t\t\t\t\t// Don't extend strings, arrays, etc. with objects\r\n\t\t\t\t\t\t\t$.widget.extend( {}, value );\r\n\r\n\t\t\t\t\t// Copy everything else by reference\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttarget[ key ] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\r\n\t$.Widget = \t JqPlugin.inherit({\r\n\t\twidgetName: \"widget\",\r\n\t\twidgetEventPrefix: \"\",\r\n\t\tdefaultElement: \"<div>\",\r\n\r\n\t\toptions: {\r\n\t\t\tclasses: {},\r\n\t\t\tdisabled: false,\r\n\r\n\t\t\t// Callbacks\r\n\t\t\tcreate: null\r\n\t\t},\r\n\r\n\t\twidget: function() {\r\n\t\t\treturn this.element;\r\n\t\t},\r\n\r\n\t\t_setOption: function( key, value ) {\r\n\t\t\tif ( key === \"classes\" ) {\r\n\t\t\t\tthis._setOptionClasses( value );\r\n\t\t\t}\r\n\r\n\t\t\tthis.options[ key ] = value;\r\n\r\n\t\t\tif ( key === \"disabled\" ) {\r\n\t\t\t\tthis._setOptionDisabled( value );\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t_setOptionClasses: function( value ) {\r\n\t\t\tvar classKey, elements, currentElements;\r\n\r\n\t\t\tfor ( classKey in value ) {\r\n\t\t\t\tcurrentElements = this.classesElementLookup[ classKey ];\r\n\t\t\t\tif ( value[ classKey ] === this.options.classes[ classKey ] ||\r\n\t\t\t\t\t\t!currentElements ||\r\n\t\t\t\t\t\t!currentElements.length ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// We are doing this to create a new jQuery object because the _removeClass() call\r\n\t\t\t\t// on the next line is going to destroy the reference to the current elements being\r\n\t\t\t\t// tracked. We need to save a copy of this collection so that we can add the new classes\r\n\t\t\t\t// below.\r\n\t\t\t\telements = $( currentElements.get() );\r\n\t\t\t\tthis._removeClass( currentElements, classKey );\r\n\r\n\t\t\t\t// We don't use _addClass() here, because that uses this.options.classes\r\n\t\t\t\t// for generating the string of classes. We want to use the value passed in from\r\n\t\t\t\t// _setOption(), this is the new value of the classes option which was passed to\r\n\t\t\t\t// _setOption(). We pass this value directly to _classes().\r\n\t\t\t\telements.addClass( this._classes( {\r\n\t\t\t\t\telement: elements,\r\n\t\t\t\t\tkeys: classKey,\r\n\t\t\t\t\tclasses: value,\r\n\t\t\t\t\tadd: true\r\n\t\t\t\t} ));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_setOptionDisabled: function( value ) {\r\n\t\t\tthis._toggleClass( this.widget(), this.widgetFullName + \"-disabled\", null, !!value );\r\n\r\n\t\t\t// If the widget is becoming disabled, then nothing is interactive\r\n\t\t\tif ( value ) {\r\n\t\t\t\tthis._removeClass( this.hoverable, null, \"ui-state-hover\" );\r\n\t\t\t\tthis._removeClass( this.focusable, null, \"ui-state-focus\" );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenable: function() {\r\n\t\t\treturn this._setOptions( { disabled: false } );\r\n\t\t},\r\n\r\n\t\tdisable: function() {\r\n\t\t\treturn this._setOptions( { disabled: true } );\r\n\t\t},\r\n\r\n\r\n\t\t_delay: function( handler, delay ) {\r\n\t\t\tfunction handlerProxy() {\r\n\t\t\t\treturn ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n\t\t\t\t\t.apply( instance, arguments );\r\n\t\t\t}\r\n\t\t\tvar instance = this;\r\n\t\t\treturn setTimeout( handlerProxy, delay || 0 );\r\n\t\t},\r\n\r\n\t\t_hoverable: function( element ) {\r\n\t\t\tthis.hoverable = this.hoverable.add( element );\r\n\t\t\tthis._on( element, {\r\n\t\t\t\tmouseenter: function( event ) {\r\n\t\t\t\t\tthis._addClass( $( event.currentTarget ), null, \"ui-state-hover\" );\r\n\t\t\t\t},\r\n\t\t\t\tmouseleave: function( event ) {\r\n\t\t\t\t\tthis._removeClass( $( event.currentTarget ), null, \"ui-state-hover\" );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t},\r\n\r\n\t\t_focusable: function( element ) {\r\n\t\t\tthis.focusable = this.focusable.add( element );\r\n\t\t\tthis._on( element, {\r\n\t\t\t\tfocusin: function( event ) {\r\n\t\t\t\t\tthis._addClass( $( event.currentTarget ), null, \"ui-state-focus\" );\r\n\t\t\t\t},\r\n\t\t\t\tfocusout: function( event ) {\r\n\t\t\t\t\tthis._removeClass( $( event.currentTarget ), null, \"ui-state-focus\" );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t});\r\n\r\n\t$.Widget._childConstructors = [];\r\n\r\n\t$.each( { show: \"fadeIn\", hide: \"fadeOut\" }, function( method, defaultEffect ) {\r\n\t\t$.Widget.prototype[ \"_\" + method ] = function( element, options, callback ) {\r\n\t\t\tif ( typeof options === \"string\" ) {\r\n\t\t\t\toptions = { effect: options };\r\n\t\t\t}\r\n\r\n\t\t\tvar hasOptions;\r\n\t\t\tvar effectName = !options ?\r\n\t\t\t\tmethod :\r\n\t\t\t\toptions === true || typeof options === \"number\" ?\r\n\t\t\t\t\tdefaultEffect :\r\n\t\t\t\t\toptions.effect || defaultEffect;\r\n\r\n\t\t\toptions = options || {};\r\n\t\t\tif ( typeof options === \"number\" ) {\r\n\t\t\t\toptions = { duration: options };\r\n\t\t\t}\r\n\r\n\t\t\thasOptions = !$.isEmptyObject( options );\r\n\t\t\toptions.complete = callback;\r\n\r\n\t\t\tif ( options.delay ) {\r\n\t\t\t\telement.delay( options.delay );\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasOptions && $.effects && $.effects.effect[ effectName ] ) {\r\n\t\t\t\telement[ method ]( options );\r\n\t\t\t} else if ( effectName !== method && element[ effectName ] ) {\r\n\t\t\t\telement[ effectName ]( options.duration, options.easing, callback );\r\n\t\t\t} else {\r\n\t\t\t\telement.queue( function( next ) {\r\n\t\t\t\t\t$( this )[ method ]();\r\n\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\tcallback.call( element[ 0 ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnext();\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t};\r\n\t} );\r\n\r\n\treturn $.widget;\r\n\r\n});\r\n\ndefine('skylark-jquery/main',[\r\n    \"./core\",\r\n    \"./ajax\",\r\n    \"./callbacks\",\r\n    \"./deferred\",\r\n    \"./queue\",\r\n    \"./JqueryPlugin\",\r\n    \"./widget\"\r\n], function($) {\r\n    return $;\r\n});\r\n\ndefine('skylark-jquery', ['skylark-jquery/main'], function (main) { return main; });\n\ndefine('skylark-ajaxfy-routers/routers',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\"\t\r\n],function(skylark,langx){\r\n\r\n\treturn skylark.attach(\"ajaxfy.routers\",{\r\n        createEvent : function (type,props) {\r\n            var e = new CustomEvent(type,props);\r\n            return langx.safeMixin(e, props);\r\n        }\r\n\r\n\t});\t\r\n});\r\n\ndefine('skylark-ajaxfy-routers/Route',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./routers\"\r\n],function(langx,routers){\r\n    var createEvent = routers.createEvent;\r\n    \r\n    var Route = langx.Evented.inherit({\r\n        klassName: \"Route\",\r\n        init: function(name, setting) {\r\n            setting = langx.mixin({}, setting);\r\n            var pathto = setting.pathto || \"\",\r\n                pattern = pathto,\r\n                paramNames = pattern.match(/\\:([a-zA-Z0-9_]+)/g);\r\n            if (paramNames !== null) {\r\n                paramNames = paramNames.map(function(paramName) {\r\n                    return paramName.substring(1);\r\n                });\r\n                pattern = pattern.replace(/\\:([a-zA-Z0-9_]+)/g, '(.*?)');\r\n            } else {\r\n                paramNames = [];\r\n            }\r\n            if (pattern === \"*\") {\r\n                pattern = \"(.*)\";\r\n            } else {\r\n                pattern = pattern.replace(\"/\", \"\\\\/\");\r\n            }\r\n\r\n            this._setting = setting;\r\n            this.name = name;\r\n            this.pathto = pathto;\r\n            this.paramNames = paramNames;\r\n            this.params = pattern;\r\n            this.regex = new RegExp(\"^\" + pattern + \"$\", \"\");\r\n\r\n            var self = this;\r\n            [\"entering\", \"entered\", \"exiting\", \"exited\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        enter: function(ctx,query) {\r\n            if (query) {\r\n                var r = this._entering(ctx),\r\n                    self = this;\r\n\r\n                return langx.Deferred.when(r).then(function(){\r\n                    var e = createEvent(\"entering\", {\r\n                        route: self,\r\n                        result: true\r\n                    });\r\n\r\n                    self.trigger(e);\r\n\r\n                    return e.result;\r\n                });\r\n            } else {\r\n                this._entered(ctx);\r\n\r\n                this.trigger(createEvent(\"entered\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n                return this;\r\n            }\r\n        },\r\n\r\n        exit: function(ctx, query) {\r\n            if (query) {\r\n                var ok = this._exiting(ctx);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n\r\n                var e = createEvent(\"exiting\", {\r\n                    route: this,\r\n                    result: true\r\n                });\r\n\r\n                this.trigger(e);\r\n\r\n                return e.result;\r\n            } else {\r\n                this._exited(ctx);\r\n                this.trigger(createEvent(\"exited\", langx.safeMixin({\r\n                    route: this\r\n                }, ctx)));\r\n\r\n                return this;\r\n            }\r\n        },\r\n\r\n        match: function(path) {\r\n            var names = this.paramNames,\r\n                x = path.indexOf('?'),\r\n                path = ~x ? path.slice(0, x) : decodeURIComponent(path),\r\n                m = this.regex.exec(path);\r\n\r\n            if (!m) {\r\n                return false\r\n            };\r\n\r\n            var params = {};\r\n            for (var i = 1, len = m.length; i < len; ++i) {\r\n                var name = names[i - 1],\r\n                    val = decodeURIComponent(m[i]);\r\n                params[name] = val;\r\n            }\r\n\r\n            return params;\r\n        },\r\n\r\n        path: function(params) {\r\n            var path = this.pathto;\r\n            if (params) {\r\n                path = path.replace(/:([a-zA-Z0-9_]+)/g, function(match, paramName) {\r\n                    return params[paramName];\r\n                });\r\n            }\r\n            return path;\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            return true;\r\n        },\r\n        _entered: function(ctx) {\r\n            return true;\r\n        },\r\n        _exiting: function(ctx) {\r\n            return true;\r\n        },\r\n        _exited: function(ctx) {\r\n            return true;\r\n        },\r\n    });\r\n\r\n\treturn routers.Route = Route;\t\r\n});\ndefine('skylark-ajaxfy-routers/Router',[\r\n    \"skylark-langx/langx\",\r\n    \"./routers\",\r\n    \"./Route\"\r\n],function(langx,routers,Route){\r\n    var createEvent = routers.createEvent;\r\n\r\n    function Router() {\r\n        var _curCtx,\r\n            _prevCtx,\r\n            _baseUrl,\r\n            _homePath,\r\n            _routes = {},\r\n            _cache = {},\r\n            _hub = new langx.Evented();\r\n\r\n        var router = this;\r\n\r\n\r\n        function current() {\r\n            return _curCtx;\r\n        }\r\n\r\n        // refresh the current route\r\n        function dispatch(ctx) {\r\n\r\n            if (_curCtx) {\r\n                var ret = _curCtx.route.exit({\r\n                    path: _curCtx.path,\r\n                    params: _curCtx.params\r\n                }, true);\r\n                if (!ret) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            _prevCtx = _curCtx;\r\n            _curCtx = ctx;\r\n            if (!_curCtx.route) {\r\n                var m = map(_curCtx.path);\r\n                _curCtx.route = m.route;\r\n                _curCtx.params = m.params;\r\n            }\r\n\r\n            var r = _curCtx.route.enter({\r\n                force: _curCtx.force,\r\n                path: _curCtx.path,\r\n                params: _curCtx.params\r\n            },true);\r\n\r\n            langx.Deferred.when(r).then(function() {\r\n                _hub.trigger(createEvent(\"routing\", {\r\n                    current: _curCtx,\r\n                    previous: _prevCtx\r\n                }));\r\n\r\n                _curCtx.route.enter({\r\n                    path: _curCtx.path,\r\n                    params: _curCtx.params\r\n                },false);\r\n\r\n                if (_prevCtx) {\r\n                    _prevCtx.route.exit({\r\n                        path: _prevCtx.path,\r\n                        params: _prevCtx.params\r\n                    }, false);\r\n                }\r\n\r\n                _hub.trigger(createEvent(\"routed\", {\r\n                    current: _curCtx,\r\n                    previous: _prevCtx\r\n                }));\r\n            });\r\n        }\r\n\r\n        function go(path, force) {\r\n            if (!force && _curCtx && _curCtx.path == path) {\r\n                return false;\r\n            }\r\n            var ctx = map(path);\r\n            if (ctx) {\r\n                ctx.path = path;\r\n\r\n                if (router.useHistoryApi) {\r\n                    var state = {\r\n                        force: force,\r\n                        path: path\r\n                    }\r\n\r\n                    window.history.pushState(state, document.title, (_baseUrl + path).replace(\"//\", \"/\"));\r\n                    window.dispatchEvent(createEvent(\"popstate\", {\r\n                        state: state\r\n                    }));\r\n                } else if (router.useHashbang) {\r\n                    var newHash = \"#!\" + path;\r\n                    if (window.location.hash !== newHash) {\r\n                        window.location.hash = newHash;\r\n                    } else {\r\n                        dispatch(ctx);\r\n                    };\r\n                } else {\r\n                    dispatch(ctx);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        function map(path, noCache) {\r\n            var finded = false;\r\n            if (!noCache) {\r\n                finded = _cache[path];\r\n                if (finded) {\r\n                    return finded;\r\n                }\r\n            }\r\n            langx.each(_routes, function(name, route) {\r\n                var ret = route.match(path);\r\n                if (ret) {\r\n                    finded = {\r\n                        route: route,\r\n                        params: ret\r\n                    }\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n            if (finded && !noCache) {\r\n                _cache[path] = finded;\r\n            }\r\n            return finded;\r\n        }\r\n\r\n        function path(routeName, params) {\r\n            var route = _routes[routeName],\r\n                path;\r\n            if (route) {\r\n                path = route.path(params);\r\n            }\r\n            return path;\r\n        }\r\n\r\n        function previous() {\r\n            return _prevCtx;\r\n        }\r\n\r\n        function baseUrl(path) {\r\n            if (langx.isDefined(path)) {\r\n                _baseUrl = path;\r\n                return this;\r\n            } else {\r\n                return _baseUrl;\r\n            }\r\n        }\r\n\r\n        function hub(){\r\n            return _hub;\r\n        }\r\n\r\n        function homePath(path) {\r\n            if (langx.isDefined(path)) {\r\n                _homePath = path;\r\n                return this;\r\n            } else {\r\n                return _homePath;\r\n            }\r\n        }\r\n\r\n        function route(name, setting) {\r\n            if (langx.isDefined(setting)) {\r\n                var settings = {};\r\n                settings[name] = setting;\r\n                routes(settings);\r\n                return this;\r\n            } else {\r\n                return _routes[name];\r\n            }\r\n        }\r\n\r\n        function routes(settings) {\r\n            if (!langx.isDefined(settings)) {\r\n                return langx.mixin({}, _routes);\r\n            } else {\r\n                for (var name in settings) {\r\n                    _routes[name] = new router.Route(name, settings[name]);\r\n                }\r\n            }\r\n        }\r\n\r\n        //starts routing urls\r\n        function start() {\r\n            if (router.useHashbang == null && router.useHistoryApi == null) {\r\n                if (window.location.host  && window.history.pushState) {\r\n                    //web access\r\n                    router.useHistoryApi = true;\r\n                } else {\r\n                    // local access\r\n                    router.useHashbang = true;\r\n                }\r\n            }\r\n\r\n            var initPath = \"\";\r\n\r\n            if (router.useHistoryApi) {\r\n                initPath = window.location.pathname;\r\n                if (_baseUrl === undefined) {\r\n                    _baseUrl = initPath.replace(/\\/$/, \"\");\r\n                }\r\n                initPath = initPath.replace(_baseUrl, \"\") || _homePath || \"/\";\r\n            } else if (router.useHashbang) {\r\n                initPath = window.location.hash.replace(\"#!\", \"\") || _homePath || \"/\";\r\n            } else {\r\n                initPath = \"/\";\r\n            }\r\n\r\n            if (!initPath.startsWith(\"/\")) {\r\n                initPath = \"/\" + initPath;\r\n            }\r\n            /*\r\n            eventer.on(document.body, \"click\", \"a[href]\", function(e) {\r\n                var elm = e.currentTarget,\r\n                    url = elm.getAttribute(\"href\");\r\n\r\n                if (url == \"#\") {\r\n                    return;\r\n                }\r\n                if (url && langx.isSameOrigin(elm.href)) {\r\n                    if (url.indexOf(_baseUrl) === 0) {\r\n                        url = url.substr(_baseUrl.length);\r\n                        eventer.stop(e);\r\n                        url = url.replace('#!', '');\r\n                        go(url);\r\n                    }\r\n                }\r\n            });\r\n            */\r\n            if (router.useHistoryApi) {\r\n                window.addEventListener(\"popstate\", function(e) {\r\n                    if(e.state) dispatch(e.state);\r\n                    e.preventDefault();\r\n                });\r\n            } else if (router.useHashbang) {\r\n                window.addEventListener(\"hashchange\", function(e) {\r\n                    dispatch({\r\n                        path: window.location.hash.replace(/^#!/, \"\")\r\n                    });\r\n                    e.preventDefault();\r\n                });\r\n            }\r\n\r\n            go(initPath);\r\n        }\r\n\r\n        langx.mixin(router, {\r\n            \"Route\": Route,\r\n\r\n            // Current path being processed\r\n            \"current\": current,\r\n\r\n            // Changes the current path\r\n            \"go\": go,\r\n\r\n            \"map\": map,\r\n\r\n            \"hub\": hub,\r\n\r\n            \"off\": function() {\r\n                _hub.off.apply(_hub, arguments);\r\n            },\r\n\r\n            \"on\": function() {\r\n                _hub.on.apply(_hub, arguments);\r\n            },\r\n\r\n            \"one\": function() {\r\n                _hub.one.apply(_hub, arguments);\r\n            },\r\n\r\n            // Returns the path of the named route\r\n            \"path\": path,\r\n\r\n            \"previous\": previous,\r\n\r\n            \"baseUrl\": baseUrl,\r\n\r\n            \"homePath\": homePath,\r\n\r\n            \"route\": route,\r\n\r\n            \"routes\": routes,\r\n\r\n            //starts routing urls\r\n            \"start\": start,\r\n\r\n            \"trigger\": function(e) {\r\n                _hub.trigger(e);\r\n                return this;\r\n            },\r\n\r\n            \"useHistoryApi\": null,\r\n            \"useHashbang\": null\r\n        });\r\n\r\n    }\r\n\r\n    return routers.Router = Router;\r\n});\r\n\ndefine('skylark-ajaxfy-routers/main',[\r\n    \"./routers\",\r\n    \"./Router\",\r\n    \"./Route\"\r\n], function(routers) {\r\n    return routers;\r\n});\r\n\ndefine('skylark-ajaxfy-routers', ['skylark-ajaxfy-routers/main'], function (main) { return main; });\n\ndefine('skylark-ajaxfy-spa/spa',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-ajaxfy-routers\"\r\n], function(skylark, langx, routers) {\r\n    var Deferred = langx.Deferred;\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n        return langx.safeMixin(e, props);\r\n    }\r\n\r\n    var router = new routers.Router();\r\n\r\n    var Route = router.Route = router.Route.inherit({\r\n        klassName: \"SpaRoute\",\r\n\r\n        init: function(name, setting) {\r\n            this.overrided(name, setting);\r\n            this.content = setting.content;\r\n            this.forceRefresh = setting.forceRefresh;\r\n            this.data = setting.data;\r\n            //this.lazy = !!setting.lazy;\r\n            var self = this;\r\n            [\"preparing\", \"rendering\", \"rendered\"].forEach(function(eventName) {\r\n                if (langx.isFunction(setting[eventName])) {\r\n                    self.on(eventName, setting[eventName]);\r\n                }\r\n            });\r\n        },\r\n\r\n        _entering: function(ctx) {\r\n            if (this.forceRefresh || ctx.force || !this._prepared) {\r\n                return this.prepare();\r\n            }\r\n            return this;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        getNamedValue: function() {\r\n            return window.location.pathname.match(this.regex);\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n\r\n                self = this,\r\n                content = setting.content,\r\n                contentPath = setting.contentPath;\r\n\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                d.resolve();\r\n            });\r\n\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    route: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        render: function(ctx) {\r\n            var e = createEvent(\"rendering\", {\r\n                route: this,\r\n                context: ctx,\r\n                content: this.content\r\n            });\r\n            this.trigger(e);\r\n            return e.content;\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    var RouteController = langx.Evented.inherit({\r\n        klassName: \"SpaRouteController\",\r\n\r\n        init: function(route, setting) {\r\n            setting = setting || {};\r\n            this.content = setting.content;\r\n            this.data = setting.data;\r\n        },\r\n\r\n        getConfigData: function(key) {\r\n            return key ? this.data[key] : this.data;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Page = langx.Evented.inherit({\r\n        klassName: \"SpaPage\",\r\n\r\n        init: function(params) {\r\n            params = langx.mixin({\r\n                \"routeViewer\": \"body\"\r\n            }, params);\r\n\r\n            this._params = params;\r\n            this._rvc = document.querySelector(params.routeViewer);\r\n            this._router = router;\r\n\r\n            router.on(\"routed\", langx.proxy(this, \"refresh\"));\r\n        },\r\n\r\n        prepare: function() {\r\n\r\n        },\r\n\r\n        //Refreshes the route\r\n        refresh: function() {\r\n            var curCtx = router.current(),\r\n                prevCtx = router.previous();\r\n            var content = curCtx.route.render(curCtx);\r\n            if (content===undefined || content===null) {\r\n                return;\r\n            }\r\n            if (langx.isString(content)) {\r\n                this._rvc.innerHTML = content;\r\n            } else {\r\n                this._rvc.innerHTML = \"\";\r\n                this._rvc.appendChild(content);\r\n            }\r\n            curCtx.route.trigger(createEvent(\"rendered\", {\r\n                route: curCtx.route,\r\n                content: content\r\n            }));\r\n        }\r\n    });\r\n\r\n    var Plugin = langx.Evented.inherit({\r\n        klassName: \"SpaPlugin\",\r\n\r\n        init: function(name, setting) {\r\n            this.name = name;\r\n\r\n            if (langx.isString(setting.hookers)) {\r\n                setting.hookers = setting.hookers.split(\" \");\r\n            }\r\n            this._setting = setting;\r\n        },\r\n\r\n        isHooked: function(eventName) {\r\n            var hookers = this._setting.hookers || [];\r\n            return hookers.indexOf(eventName) > -1;\r\n        },\r\n\r\n        prepare: function() {\r\n            var d = new Deferred(),\r\n                setting = this._setting,\r\n                controllerSetting = setting.controller,\r\n                controller = this.controller,\r\n                self = this;\r\n            require([controllerSetting.type], function(type) {\r\n                controller = self.controller = new type(controllerSetting);\r\n                router.on(setting.hookers, {\r\n                    plugin: self\r\n                }, langx.proxy(controller.perform, controller));\r\n                d.resolve();\r\n            });\r\n            return d.then(function() {\r\n                var e = createEvent(\"preparing\", {\r\n                    plugin: self,\r\n                    result: true\r\n                });\r\n                self.trigger(e);\r\n                return Deferred.when(e.result).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        trigger: function(e) {\r\n            var controller = this.controller;\r\n            if (controller) {\r\n                return controller.perform(e);\r\n            } else {\r\n                return this.overrided(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    var PluginController = langx.Evented.inherit({\r\n        klassName: \"SpaPluginController\",\r\n\r\n        init: function(plugin) {\r\n            this.plugin = plugin;\r\n        },\r\n\r\n        perform: function(e) {\r\n            var eventName = e.type;\r\n            if (this[eventName]) {\r\n                return this[eventName].call(this, e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n    var Application = langx.Evented.inherit({\r\n        klassName: \"SpaApplication\",\r\n\r\n        init: function(config) {\r\n            if (app) {\r\n                return app;\r\n            }\r\n            var plugins = this._plugins = {};\r\n\r\n            config = this._config = langx.mixin({\r\n                plugins: {}\r\n            }, config, true);\r\n\r\n            langx.each(config.plugins, function(pluginName, setting) {\r\n                plugins[pluginName] = new Plugin(pluginName, setting);\r\n            });\r\n\r\n            router.routes(config.routes);\r\n\r\n            this._router = router;\r\n\r\n            this._page = new spa.Page(config.page);\r\n\r\n            document.title = config.title;\r\n            var baseUrl = config.baseUrl;\r\n            if (baseUrl === undefined) {\r\n                baseUrl = config.baseUrl = (new langx.URL(document.baseURI)).pathname;\r\n            }\r\n            router.baseUrl(baseUrl);\r\n\r\n            if (config.homePath) {\r\n                router.homePath(config.homePath);\r\n            }\r\n\r\n            app = this;\r\n        },\r\n\r\n        baseUrl : function() {\r\n            return router.baseUrl();\r\n        },\r\n\r\n        getConfig: function(key) {\r\n            return key ? this._config[key] : this._config;\r\n        },\r\n\r\n        go: function(path, force) {\r\n            router.go(path, force);\r\n            return this;\r\n        },\r\n\r\n        page: function() {\r\n            return this._page;\r\n        },\r\n\r\n        prepare: function() {\r\n            if (this._prepared) {\r\n                return Deferred.resolve();\r\n            }\r\n            var self = this;\r\n\r\n            var promises0 = langx.map(this._plugins, function(plugin, name) {\r\n                if (plugin.isHooked(\"starting\")) {\r\n                    return plugin.prepare();\r\n                }\r\n            });\r\n\r\n            return Deferred.all(promises0).then(function() {\r\n                router.trigger(createEvent(\"starting\", {\r\n                    spa: self\r\n                }));\r\n                var promises1 = langx.map(router.routes(), function(route, name) {\r\n                        if (route.lazy === false) {\r\n                            return route.prepare();\r\n                        }\r\n                    }),\r\n                    promises2 = langx.map(self._plugins, function(plugin, name) {\r\n                        if (!plugin.isHooked(\"starting\")) {\r\n                            return plugin.prepare();\r\n                        }\r\n                    });\r\n\r\n\r\n                return Deferred.all(promises1.concat(promises2)).then(function() {\r\n                    self._prepared = true;\r\n                });\r\n            });\r\n        },\r\n\r\n        run: function() {\r\n            this._router.start();\r\n            router.trigger(createEvent(\"started\", {\r\n                spa: this\r\n            }));\r\n        }\r\n    });\r\n\r\n    var app;\r\n    var spa = function(config) {\r\n        if (!app) {\r\n            window[config.name || \"app\"] = app = new spa.Application(config);\r\n        }\r\n\r\n        return app;\r\n    }\r\n\r\n    langx.mixin(spa, {\r\n        \"Application\": Application,\r\n\r\n        \"Page\": Page,\r\n\r\n        \"Plugin\": Plugin,\r\n        \"PluginController\": PluginController,\r\n\r\n        \"Route\": Route,\r\n\r\n        \"router\" : router,\r\n        \r\n        \"RouteController\": RouteController\r\n\r\n    });\r\n\r\n    return skylark.attach(\"ajaxfy.spa\",spa);\r\n});\r\n\ndefine('skylark-ajaxfy-spa/main',[\r\n    \"skylark-langx/skylark\",\r\n    \"./spa\"\r\n], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-ajaxfy-spa', ['skylark-ajaxfy-spa/main'], function (main) { return main; });\n\ndefine('skylark-data-entities/entities',[\r\n    \"skylark-langx/langx\"\r\n], function(langx) {\r\n    function entities() {\r\n        return entities;\r\n    }\r\n\r\n    langx.mixin(entities, {\r\n        // set a `X-Http-Method-Override` header.\r\n        emulateHTTP : false,\r\n\r\n        // Turn on `emulateJSON` to support legacy servers that can't deal with direct\r\n        // `application/json` requests ... this will encode the body as\r\n        // `application/x-www-form-urlencoded` instead and will send the model in a\r\n        // form param named `model`.\r\n        emulateJSON : false,\r\n\r\n        backends : {\r\n            \r\n        }\r\n    });\r\n\r\n\r\n    return entities;\r\n});\r\n\ndefine('skylark-data-entities/Entity',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./entities\"\r\n],function(langx,entities){\r\n   // Wrap an optional error callback with a fallback error event.\r\n  var wrapError = function(model, options) {\r\n    var error = options.error;\r\n    options.error = function(resp) {\r\n      if (error) error.call(options.context, model, resp, options);\r\n      model.trigger('error', model, resp, options);\r\n    };\r\n  };\r\n\r\n \r\n  var Entity = langx.Stateful.inherit({\r\n    sync: function() {\r\n      return entities.sync.apply(this, arguments);\r\n    },\r\n\r\n    // Get the HTML-escaped value of an attribute.\r\n    //escape: function(attr) {\r\n    //  return _.escape(this.get(attr));\r\n    //},\r\n\r\n    // Special-cased proxy to underscore's `_.matches` method.\r\n    matches: function(attrs) {\r\n      return langx.isMatch(this.attributes,attrs);\r\n    },\r\n\r\n    // Fetch the entity from the server, merging the response with the entity's\r\n    // local attributes. Any changed attributes will trigger a \"change\" event.\r\n    fetch: function(options) {\r\n      options = langx.mixin({parse: true}, options);\r\n      var entity = this;\r\n      var success = options.success;\r\n      options.success = function(resp) {\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (!entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n      return this.sync('read', this, options);\r\n    },\r\n\r\n    // Set a hash of entity attributes, and sync the entity to the server.\r\n    // If the server returns an attributes hash that differs, the entity's\r\n    // state will be `set` again.\r\n    save: function(key, val, options) {\r\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n      var attrs;\r\n      if (key == null || typeof key === 'object') {\r\n        attrs = key;\r\n        options = val;\r\n      } else {\r\n        (attrs = {})[key] = val;\r\n      }\r\n\r\n      options = langx.mixin({validate: true, parse: true}, options);\r\n      var wait = options.wait;\r\n\r\n      // If we're not waiting and attributes exist, save acts as\r\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\r\n      // the entity will be valid when the attributes, if any, are set.\r\n      if (attrs && !wait) {\r\n        if (!this.set(attrs, options)) return false;\r\n      } else if (!this._validate(attrs, options)) {\r\n        return false;\r\n      }\r\n\r\n      // After a successful server-side save, the client is (optionally)\r\n      // updated with the server-side state.\r\n      var entity = this;\r\n      var success = options.success;\r\n      var attributes = this.attributes;\r\n      options.success = function(resp) {\r\n        // Ensure attributes are restored during synchronous saves.\r\n        entity.attributes = attributes;\r\n        var serverAttrs = options.parse ? entity.parse(resp, options) : resp;\r\n        if (wait) serverAttrs = langx.mixin({}, attrs, serverAttrs);\r\n        if (serverAttrs && !entity.set(serverAttrs, options)) return false;\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        entity.trigger('sync', entity, resp, options);\r\n      };\r\n      wrapError(this, options);\r\n\r\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\r\n      if (attrs && wait) this.attributes = langx.mixin({}, attributes, attrs);\r\n\r\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\r\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\r\n      var xhr = this.sync(method, this, options);\r\n\r\n      // Restore attributes.\r\n      this.attributes = attributes;\r\n\r\n      return xhr;\r\n    },\r\n\r\n    // Destroy this entity on the server if it was already persisted.\r\n    // Optimistically removes the entity from its collection, if it has one.\r\n    // If `wait: true` is passed, waits for the server to respond before removal.\r\n    destroy: function(options) {\r\n      options = options ? langx.clone(options) : {};\r\n      var entity = this;\r\n      var success = options.success;\r\n      var wait = options.wait;\r\n\r\n      var destroy = function() {\r\n        entity.stopListening();\r\n        entity.trigger('destroy', entity, entity.collection, options);\r\n      };\r\n\r\n      options.success = function(resp) {\r\n        if (wait) destroy();\r\n        if (success) success.call(options.context, entity, resp, options);\r\n        if (!entity.isNew()) entity.trigger('sync', entity, resp, options);\r\n      };\r\n\r\n      var xhr = false;\r\n      if (this.isNew()) {\r\n        langx.defer(options.success);\r\n      } else {\r\n        wrapError(this, options);\r\n        xhr = this.sync('delete', this, options);\r\n      }\r\n      if (!wait) destroy();\r\n      return xhr;\r\n    },\r\n\r\n    // Default URL for the entity's representation on the server -- if you're\r\n    // using Backbone's restful methods, override this to change the endpoint\r\n    // that will be called.\r\n    url: function() {\r\n      var base =\r\n        langx.result(this, 'urlRoot') ||\r\n        langx.result(this.collection, 'url') ||\r\n        urlError();\r\n      if (this.isNew()) return base;\r\n      var id = this.get(this.idAttribute);\r\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\r\n    },\r\n\r\n    // **parse** converts a response into the hash of attributes to be `set` on\r\n    // the entity. The default implementation is just to pass the response along.\r\n    parse: function(resp, options) {\r\n      return resp;\r\n    }\r\n  });\r\n\r\n  return entities.Entity = Entity;\r\n\r\n});\ndefine('skylark-data-entities/Collection',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./entities\",\r\n\t\"./Entity\"\r\n],function(langx,entities,Entity){\r\n  // Wrap an optional error callback with a fallback error event.\r\n  var wrapError = function(model, options) {\r\n    var error = options.error;\r\n    options.error = function(resp) {\r\n      if (error) error.call(options.context, model, resp, options);\r\n      model.trigger('error', model, resp, options);\r\n    };\r\n  };\r\n\r\n\r\n\tvar Collection  = langx.Evented.inherit({\r\n\t\t\"_construct\" : function(entities, options) {\r\n\t\t\toptions || (options = {});\r\n\t\t\tif (options.entity) this.entity = options.entity;\r\n\t\t\tif (options.comparator !== void 0) this.comparator = options.comparator;\r\n\t\t\tthis._reset();\r\n\t\t\tif (entities) this.reset(entities, langx.mixin({silent: true}, options));\r\n\t\t}\r\n\t}); \r\n\r\n\t// Default options for `Collection#set`.\r\n\tvar setOptions = {add: true, remove: true, merge: true};\r\n\tvar addOptions = {add: true, remove: false};\r\n\r\n\t// Splices `insert` into `array` at index `at`.\r\n\tvar splice = function(array, insert, at) {\r\n\t\tat = Math.min(Math.max(at, 0), array.length);\r\n\t\tvar tail = Array(array.length - at);\r\n\t\tvar length = insert.length;\r\n\t\tvar i;\r\n\t\tfor (i = 0; i < tail.length; i++) tail[i] = array[i + at];\r\n\t\tfor (i = 0; i < length; i++) array[i + at] = insert[i];\r\n\t\tfor (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\r\n\t};\r\n\r\n  // Define the Collection's inheritable methods.\r\n\tCollection.partial({\r\n\r\n\t\t// The default entity for a collection is just a **Entity**.\r\n\t\t// This should be overridden in most cases.\r\n\t\tentity: Entity,\r\n\r\n\t\t// Initialize is an empty function by default. Override it with your own\r\n\t\t// initialization logic.\r\n\t\tinitialize: function(){},\r\n\r\n\t\t// The JSON representation of a Collection is an array of the\r\n\t\t// entities' attributes.\r\n\t\ttoJSON: function(options) {\r\n\t\t  return this.map(function(entity) { return entity.toJSON(options); });\r\n\t\t},\r\n\r\n\t\t// Proxy `entities.sync` by default.\r\n\t\tsync: function() {\r\n\t\t  return entities.sync.apply(this, arguments);\r\n\t\t},\r\n\r\n\t\t// Add a entity, or list of entities to the set. `entities` may be Backbone\r\n\t\t// Entitys or raw JavaScript objects to be converted to Entitys, or any\r\n\t\t// combination of the two.\r\n\t\tadd: function(entities, options) {\r\n\t\t  return this.set(entities, langx.mixin({merge: false}, options, addOptions));\r\n\t\t},\r\n\r\n\t\t// Remove a entity, or a list of entities from the set.\r\n\t\tremove: function(entities, options) {\r\n\t\t  options = langx.mixin({}, options);\r\n\t\t  var singular = !langx.isArray(entities);\r\n\t\t  entities = singular ? [entities] : entities.slice();\r\n\t\t  var removed = this._removeEntitys(entities, options);\r\n\t\t  if (!options.silent && removed.length) {\r\n\t\t    options.changes = {added: [], merged: [], removed: removed};\r\n\t\t    this.trigger('update', this, options);\r\n\t\t  }\r\n\t\t  return singular ? removed[0] : removed;\r\n\t\t},\r\n\r\n\t\t// Update a collection by `set`-ing a new list of entities, adding new ones,\r\n\t\t// removing entities that are no longer present, and merging entities that\r\n\t\t// already exist in the collection, as necessary. Similar to **Entity#set**,\r\n\t\t// the core operation for updating the data contained by the collection.\r\n\t\tset: function(entities, options) {\r\n\t\t  if (entities == null) return;\r\n\r\n\t\t  options = langx.mixin({}, setOptions, options);\r\n\t\t  if (options.parse && !this._isEntity(entities)) {\r\n\t\t    entities = this.parse(entities, options) || [];\r\n\t\t  }\r\n\r\n\t\t  var singular = !langx.isArray(entities);\r\n\t\t  entities = singular ? [entities] : entities.slice();\r\n\r\n\t\t  var at = options.at;\r\n\t\t  if (at != null) at = +at;\r\n\t\t  if (at > this.length) at = this.length;\r\n\t\t  if (at < 0) at += this.length + 1;\r\n\r\n\t\t  var set = [];\r\n\t\t  var toAdd = [];\r\n\t\t  var toMerge = [];\r\n\t\t  var toRemove = [];\r\n\t\t  var modelMap = {};\r\n\r\n\t\t  var add = options.add;\r\n\t\t  var merge = options.merge;\r\n\t\t  var remove = options.remove;\r\n\r\n\t\t  var sort = false;\r\n\t\t  var sortable = this.comparator && at == null && options.sort !== false;\r\n\t\t  var sortAttr = langx.isString(this.comparator) ? this.comparator : null;\r\n\r\n\t\t  // Turn bare objects into entity references, and prevent invalid entities\r\n\t\t  // from being added.\r\n\t\t  var entity, i;\r\n\t\t  for (i = 0; i < entities.length; i++) {\r\n\t\t    entity = entities[i];\r\n\r\n\t\t    // If a duplicate is found, prevent it from being added and\r\n\t\t    // optionally merge it into the existing entity.\r\n\t\t    var existing = this.get(entity);\r\n\t\t    if (existing) {\r\n\t\t      if (merge && entity !== existing) {\r\n\t\t        var attrs = this._isEntity(entity) ? entity.attributes : entity;\r\n\t\t        if (options.parse) attrs = existing.parse(attrs, options);\r\n\t\t        existing.set(attrs, options);\r\n\t\t        toMerge.push(existing);\r\n\t\t        if (sortable && !sort) sort = existing.hasChanged(sortAttr);\r\n\t\t      }\r\n\t\t      if (!modelMap[existing.cid]) {\r\n\t\t        modelMap[existing.cid] = true;\r\n\t\t        set.push(existing);\r\n\t\t      }\r\n\t\t      entities[i] = existing;\r\n\r\n\t\t    // If this is a new, valid entity, push it to the `toAdd` list.\r\n\t\t    } else if (add) {\r\n\t\t      entity = entities[i] = this._prepareEntity(entity, options);\r\n\t\t      if (entity) {\r\n\t\t        toAdd.push(entity);\r\n\t\t        this._addReference(entity, options);\r\n\t\t        modelMap[entity.cid] = true;\r\n\t\t        set.push(entity);\r\n\t\t      }\r\n\t\t    }\r\n\t\t  }\r\n\r\n\t\t  // Remove stale entities.\r\n\t\t  if (remove) {\r\n\t\t    for (i = 0; i < this.length; i++) {\r\n\t\t      entity = this.entities[i];\r\n\t\t      if (!modelMap[entity.cid]) toRemove.push(entity);\r\n\t\t    }\r\n\t\t    if (toRemove.length) this._removeEntitys(toRemove, options);\r\n\t\t  }\r\n\r\n\t\t  // See if sorting is needed, update `length` and splice in new entities.\r\n\t\t  var orderChanged = false;\r\n\t\t  var replace = !sortable && add && remove;\r\n\t\t  if (set.length && replace) {\r\n\t\t    orderChanged = this.length !== set.length || this.entities.some(function(m, index) {\r\n\t\t      return m !== set[index];\r\n\t\t    });\r\n\t\t    this.entities.length = 0;\r\n\t\t    splice(this.entities, set, 0);\r\n\t\t    this.length = this.entities.length;\r\n\t\t  } else if (toAdd.length) {\r\n\t\t    if (sortable) sort = true;\r\n\t\t    splice(this.entities, toAdd, at == null ? this.length : at);\r\n\t\t    this.length = this.entities.length;\r\n\t\t  }\r\n\r\n\t\t  // Silently sort the collection if appropriate.\r\n\t\t  if (sort) this.sort({silent: true});\r\n\r\n\t\t  // Unless silenced, it's time to fire all appropriate add/sort/update events.\r\n\t\t  if (!options.silent) {\r\n\t\t    for (i = 0; i < toAdd.length; i++) {\r\n\t\t      if (at != null) options.index = at + i;\r\n\t\t      entity = toAdd[i];\r\n\t\t      entity.trigger('add', entity, this, options);\r\n\t\t    }\r\n\t\t    if (sort || orderChanged) this.trigger('sort', this, options);\r\n\t\t    if (toAdd.length || toRemove.length || toMerge.length) {\r\n\t\t      options.changes = {\r\n\t\t        added: toAdd,\r\n\t\t        removed: toRemove,\r\n\t\t        merged: toMerge\r\n\t\t      };\r\n\t\t      this.trigger('update', this, options);\r\n\t\t    }\r\n\t\t  }\r\n\r\n\t\t  // Return the added (or merged) entity (or entities).\r\n\t\t  return singular ? entities[0] : entities;\r\n\t\t},\r\n\r\n\t\t// When you have more items than you want to add or remove individually,\r\n\t\t// you can reset the entire set with a new list of entities, without firing\r\n\t\t// any granular `add` or `remove` events. Fires `reset` when finished.\r\n\t\t// Useful for bulk operations and optimizations.\r\n\t\treset: function(entities, options) {\r\n\t\t  options = options ? langx.clone(options) : {};\r\n\t\t  for (var i = 0; i < this.entities.length; i++) {\r\n\t\t    this._removeReference(this.entities[i], options);\r\n\t\t  }\r\n\t\t  options.previousEntitys = this.entities;\r\n\t\t  this._reset();\r\n\t\t  entities = this.add(entities, langx.mixin({silent: true}, options));\r\n\t\t  if (!options.silent) this.trigger('reset', this, options);\r\n\t\t  return entities;\r\n\t\t},\r\n\r\n\t\t// Add a entity to the end of the collection.\r\n\t\tpush: function(entity, options) {\r\n\t\t  return this.add(entity, langx.mixin({at: this.length}, options));\r\n\t\t},\r\n\r\n\t\t// Remove a entity from the end of the collection.\r\n\t\tpop: function(options) {\r\n\t\t  var entity = this.at(this.length - 1);\r\n\t\t  return this.remove(entity, options);\r\n\t\t},\r\n\r\n\t\t// Add a entity to the beginning of the collection.\r\n\t\tunshift: function(entity, options) {\r\n\t\t  return this.add(entity, langx.mixin({at: 0}, options));\r\n\t\t},\r\n\r\n\t\t// Remove a entity from the beginning of the collection.\r\n\t\tshift: function(options) {\r\n\t\t  var entity = this.at(0);\r\n\t\t  return this.remove(entity, options);\r\n\t\t},\r\n\r\n\t\t// Slice out a sub-array of entities from the collection.\r\n\t\tslice: function() {\r\n\t\t  return slice.apply(this.entities, arguments);\r\n\t\t},\r\n\r\n\t\t// Get a entity from the set by id, cid, entity object with id or cid\r\n\t\t// properties, or an attributes object that is transformed through entityId.\r\n\t\tget: function(obj) {\r\n\t\t  if (obj == null) return void 0;\r\n\t\t  return this._byId[obj] ||\r\n\t\t    this._byId[this.entityId(obj.attributes || obj)] ||\r\n\t\t    obj.cid && this._byId[obj.cid];\r\n\t\t},\r\n\r\n\t\t// Returns `true` if the entity is in the collection.\r\n\t\thas: function(obj) {\r\n\t\t  return this.get(obj) != null;\r\n\t\t},\r\n\r\n\t\t// Get the entity at the given index.\r\n\t\tat: function(index) {\r\n\t\t  if (index < 0) index += this.length;\r\n\t\t  return this.entities[index];\r\n\t\t},\r\n\r\n\t\t// Return entities with matching attributes. Useful for simple cases of\r\n\t\t// `filter`.\r\n\t\twhere: function(attrs, first) {\r\n\t\t  return this[first ? 'find' : 'filter'](attrs);\r\n\t\t},\r\n\r\n\t\t// Return the first entity with matching attributes. Useful for simple cases\r\n\t\t// of `find`.\r\n\t\tfindWhere: function(attrs) {\r\n\t\t  return this.where(attrs, true);\r\n\t\t},\r\n\r\n\t\t// Force the collection to re-sort itself. You don't need to call this under\r\n\t\t// normal circumstances, as the set will maintain sort order as each item\r\n\t\t// is added.\r\n\t\tsort: function(options) {\r\n\t\t  var comparator = this.comparator;\r\n\t\t  if (!comparator) throw new Error('Cannot sort a set without a comparator');\r\n\t\t  options || (options = {});\r\n\r\n\t\t  var length = comparator.length;\r\n\t\t  if (langx.isFunction(comparator)) comparator = langx.proxy(comparator, this);\r\n\r\n\t\t  // Run sort based on type of `comparator`.\r\n\t\t  if (length === 1 || langx.isString(comparator)) {\r\n\t\t    this.entities = this.sortBy(comparator);\r\n\t\t  } else {\r\n\t\t    this.entities.sort(comparator);\r\n\t\t  }\r\n\t\t  if (!options.silent) this.trigger('sort', this, options);\r\n\t\t  return this;\r\n\t\t},\r\n\r\n\t\t// Pluck an attribute from each entity in the collection.\r\n\t\tpluck: function(attr) {\r\n\t\t  return this.map(attr + '');\r\n\t\t},\r\n\r\n\t\t// Fetch the default set of entities for this collection, resetting the\r\n\t\t// collection when they arrive. If `reset: true` is passed, the response\r\n\t\t// data will be passed through the `reset` method instead of `set`.\r\n\t\tfetch: function(options) {\r\n\t\t  options = langx.mixin({parse: true}, options);\r\n\t\t  var success = options.success;\r\n\t\t  var collection = this;\r\n\t\t  options.success = function(resp) {\r\n\t\t    var method = options.reset ? 'reset' : 'set';\r\n\t\t    collection[method](resp, options);\r\n\t\t    if (success) success.call(options.context, collection, resp, options);\r\n\t\t    collection.trigger('sync', collection, resp, options);\r\n\t\t  };\r\n\t\t  wrapError(this, options);\r\n\t\t  return this.sync('read', this, options);\r\n\t\t},\r\n\r\n\t\t// Create a new instance of a entity in this collection. Add the entity to the\r\n\t\t// collection immediately, unless `wait: true` is passed, in which case we\r\n\t\t// wait for the server to agree.\r\n\t\tcreate: function(entity, options) {\r\n\t\t  options = options ? langx.clone(options) : {};\r\n\t\t  var wait = options.wait;\r\n\t\t  entity = this._prepareEntity(entity, options);\r\n\t\t  if (!entity) return false;\r\n\t\t  if (!wait) this.add(entity, options);\r\n\t\t  var collection = this;\r\n\t\t  var success = options.success;\r\n\t\t  options.success = function(m, resp, callbackOpts) {\r\n\t\t    if (wait) collection.add(m, callbackOpts);\r\n\t\t    if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\r\n\t\t  };\r\n\t\t  entity.save(null, options);\r\n\t\t  return entity;\r\n\t\t},\r\n\r\n\t\t// **parse** converts a response into a list of entities to be added to the\r\n\t\t// collection. The default implementation is just to pass it through.\r\n\t\tparse: function(resp, options) {\r\n\t\t  return resp;\r\n\t\t},\r\n\r\n\t\t// Create a new collection with an identical list of entities as this one.\r\n\t\tclone: function() {\r\n\t\t  return new this.constructor(this.entities, {\r\n\t\t    entity: this.entity,\r\n\t\t    comparator: this.comparator\r\n\t\t  });\r\n\t\t},\r\n\r\n\t\t// Define how to uniquely identify entities in the collection.\r\n\t\tentityId: function(attrs) {\r\n\t\t  return attrs[this.entity.prototype.idAttribute || 'id'];\r\n\t\t},\r\n\r\n\t\t// Private method to reset all internal state. Called when the collection\r\n\t\t// is first initialized or reset.\r\n\t\t_reset: function() {\r\n\t\t  this.length = 0;\r\n\t\t  this.entities = [];\r\n\t\t  this._byId  = {};\r\n\t\t},\r\n\r\n\t\t// Prepare a hash of attributes (or other entity) to be added to this\r\n\t\t// collection.\r\n\t\t_prepareEntity: function(attrs, options) {\r\n\t\t  if (this._isEntity(attrs)) {\r\n\t\t    if (!attrs.collection) attrs.collection = this;\r\n\t\t    return attrs;\r\n\t\t  }\r\n\t\t  options = options ? langx.clone(options) : {};\r\n\t\t  options.collection = this;\r\n\t\t  var entity = new this.entity(attrs, options);\r\n\t\t  if (!entity.validationError) return entity;\r\n\t\t  this.trigger('invalid', this, entity.validationError, options);\r\n\t\t  return false;\r\n\t\t},\r\n\r\n\t\t// Internal method called by both remove and set.\r\n\t\t_removeEntitys: function(entities, options) {\r\n\t\t  var removed = [];\r\n\t\t  for (var i = 0; i < entities.length; i++) {\r\n\t\t    var entity = this.get(entities[i]);\r\n\t\t    if (!entity) continue;\r\n\r\n\t\t    var index = this.indexOf(entity);\r\n\t\t    this.entities.splice(index, 1);\r\n\t\t    this.length--;\r\n\r\n\t\t    // Remove references before triggering 'remove' event to prevent an\r\n\t\t    // infinite loop. #3693\r\n\t\t    delete this._byId[entity.cid];\r\n\t\t    var id = this.entityId(entity.attributes);\r\n\t\t    if (id != null) delete this._byId[id];\r\n\r\n\t\t    if (!options.silent) {\r\n\t\t      options.index = index;\r\n\t\t      entity.trigger('remove', entity, this, options);\r\n\t\t    }\r\n\r\n\t\t    removed.push(entity);\r\n\t\t    this._removeReference(entity, options);\r\n\t\t  }\r\n\t\t  return removed;\r\n\t\t},\r\n\r\n\t\t// Method for checking whether an object should be considered a entity for\r\n\t\t// the purposes of adding to the collection.\r\n\t\t_isEntity: function(entity) {\r\n\t\t  return entity instanceof Entity;\r\n\t\t},\r\n\r\n\t\t// Internal method to create a entity's ties to a collection.\r\n\t\t_addReference: function(entity, options) {\r\n\t\t  this._byId[entity.cid] = entity;\r\n\t\t  var id = this.entityId(entity.attributes);\r\n\t\t  if (id != null) this._byId[id] = entity;\r\n\t\t  entity.on('all', this._onEntityEvent, this);\r\n\t\t},\r\n\r\n\t\t// Internal method to sever a entity's ties to a collection.\r\n\t\t_removeReference: function(entity, options) {\r\n\t\t  delete this._byId[entity.cid];\r\n\t\t  var id = this.entityId(entity.attributes);\r\n\t\t  if (id != null) delete this._byId[id];\r\n\t\t  if (this === entity.collection) delete entity.collection;\r\n\t\t  entity.off('all', this._onEntityEvent, this);\r\n\t\t},\r\n\r\n\t\t// Internal method called every time a entity in the set fires an event.\r\n\t\t// Sets need to update their indexes when entities change ids. All other\r\n\t\t// events simply proxy through. \"add\" and \"remove\" events that originate\r\n\t\t// in other collections are ignored.\r\n\t\t_onEntityEvent: function(event, entity, collection, options) {\r\n\t\t  if (entity) {\r\n\t\t    if ((event === 'add' || event === 'remove') && collection !== this) return;\r\n\t\t    if (event === 'destroy') this.remove(entity, options);\r\n\t\t    if (event === 'change') {\r\n\t\t      var prevId = this.entityId(entity.previousAttributes());\r\n\t\t      var id = this.entityId(entity.attributes);\r\n\t\t      if (prevId !== id) {\r\n\t\t        if (prevId != null) delete this._byId[prevId];\r\n\t\t        if (id != null) this._byId[id] = entity;\r\n\t\t      }\r\n\t\t    }\r\n\t\t  }\r\n\t\t  this.trigger.apply(this, arguments);\r\n\t\t}\r\n\r\n  \t});\r\n\r\n\treturn entities.Collection = Collection;\r\n});\ndefine('skylark-data-entities/backends/registry',[\r\n\t\r\n],function(){\r\n\tvar providers = {\r\n\r\n\t};\r\n\r\n\tfunction add(name,setting) {\r\n\t\tproviders[name] = setting;\r\n\t}\r\n\r\n\tfunction remove(name) {\r\n\t\tdelete provides[name];\r\n\t}\r\n\r\n\tfunction get(name) {\r\n\t\treturn providers[name];\r\n\t}\r\n\r\n\treturn {\r\n\t\tadd : add,\r\n\t\tremove: remove,\r\n\t\tget : get\r\n\t}\r\n});\ndefine('skylark-data-entities/sync',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./entities\",\r\n  \t\"./backends/registry\"\r\n],function(langx,entities,registry){\r\n\r\n\t// Override 'Backbone.sync' to default to localSync,\r\n\t// the original 'Backbone.sync' is still available in 'Backbone.ajaxSync'\r\n\tfunction sync(method, model, options) {\r\n\t\tif (!options.backend) {\r\n\t\t\tthrow new Error(\"The backend is not specified\")\r\n\t\t}\r\n\t\tvar setting = registry.get(options.backend);\r\n\t\tif (!setting) {\r\n\t\t\tthrow new Error(\"The backend is not defined:\" + options.backend);\r\n\t\t}\r\n\t\tvar syncMethod = setting.sync;\r\n\t\tif (!syncMethod) {\r\n\t\t\tthrow new Error(\"The backend sync method is not defined:\" + options.backend);\r\n\t\t}\r\n\r\n\t\tvar options2 = langx.mixin({},setting.options,options);\r\n\t  \treturn syncMethod.apply(this, [method, model, options2]);\r\n\t};\r\n\r\n  \r\n   return entities.sync = sync;\r\n\r\n});\ndefine('skylark-data-entities/backends/ajaxSync',[\r\n\t\"skylark-langx/langx\",\r\n\t\"../entities\"\r\n],function(langx,entities){\r\n// Map from CRUD to HTTP for our default `Backbone.sync` implementation.\r\n  var methodMap = {\r\n    'create': 'POST',\r\n    'update': 'PUT',\r\n    'patch': 'PATCH',\r\n    'delete': 'DELETE',\r\n    'read': 'GET'\r\n  };\r\n  \r\n\r\n  var sync = function(method, entity, options) {\r\n    var type = methodMap[method];\r\n\r\n    // Default options, unless specified.\r\n    langx.defaults(options || (options = {}), {\r\n      emulateHTTP: entities.emulateHTTP,\r\n      emulateJSON: entities.emulateJSON\r\n    });\r\n\r\n    // Default JSON-request options.\r\n    var params = {type: type, dataType: 'json'};\r\n\r\n    // Ensure that we have a URL.\r\n    if (!options.url) {\r\n      params.url = langx.result(entity, 'url') || urlError();\r\n    }\r\n\r\n    // Ensure that we have the appropriate request data.\r\n    if (options.data == null && entity && (method === 'create' || method === 'update' || method === 'patch')) {\r\n      params.contentType = 'application/json';\r\n      params.data = JSON.stringify(options.attrs || entity.toJSON(options));\r\n    }\r\n\r\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\r\n    if (options.emulateJSON) {\r\n      params.contentType = 'application/x-www-form-urlencoded';\r\n      params.data = params.data ? {entity: params.data} : {};\r\n    }\r\n\r\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\r\n    // And an `X-HTTP-Method-Override` header.\r\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\r\n      params.type = 'POST';\r\n      if (options.emulateJSON) params.data._method = type;\r\n      var beforeSend = options.beforeSend;\r\n      options.beforeSend = function(xhr) {\r\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\r\n        if (beforeSend) return beforeSend.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    // Don't process data on a non-GET request.\r\n    if (params.type !== 'GET' && !options.emulateJSON) {\r\n      params.processData = false;\r\n    }\r\n\r\n    // Pass along `textStatus` and `errorThrown` from jQuery.\r\n    var error = options.error;\r\n    options.error = function(xhr, textStatus, errorThrown) {\r\n      options.textStatus = textStatus;\r\n      options.errorThrown = errorThrown;\r\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\r\n    };\r\n\r\n    // Make the request, allowing the user to override any Ajax options.\r\n    var xhr = options.xhr = langx.Xhr.request(langx.mixin(params, options));\r\n    entity.trigger('request', entity, xhr, options);\r\n    return xhr;\r\n  };\r\n\r\n \r\n  \r\n  return entities.backends.ajaxSync = sync;\r\n\r\n});\ndefine('skylark-data-entities/backends/localSync',[\r\n  \"skylark-langx/langx\",\r\n  \"../entities\"\r\n],function(langx,entities){\r\n\r\n  // A simple module to replace `Backbone.sync` with *localStorage*-based\r\n  // persistence. Models are given GUIDS, and saved into a JSON object. Simple\r\n  // as that.\r\n\r\n  // Hold reference to Underscore.js and Backbone.js in the closure in order\r\n  // to make things work even if they are removed from the global namespace\r\n\r\n  // Generate four random hex digits.\r\n  function S4() {\r\n     return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\r\n  };\r\n\r\n  // Generate a pseudo-GUID by concatenating random hexadecimal.\r\n  function guid() {\r\n     return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\r\n  };\r\n\r\n  // Our Store is represented by a single JS object in *localStorage*. Create it\r\n  // with a meaningful name, like the name you'd give a table.\r\n  // window.Store is deprecated, use Backbone.LocalStorage instead\r\n  var LocalStorage = langx.klass({\r\n    _construct : function(name) {\r\n      this.name = name;\r\n      var store = this.localStorage().getItem(this.name);\r\n      this.records = (store && store.split(\",\")) || [];\r\n    },\r\n\r\n    // Save the current state of the **Store** to *localStorage*.\r\n    save: function() {\r\n      this.localStorage().setItem(this.name, this.records.join(\",\"));\r\n    },\r\n\r\n    // Add a model, giving it a (hopefully)-unique GUID, if it doesn't already\r\n    // have an id of it's own.\r\n    create: function(model) {\r\n      if (!model.id) {\r\n        model.id = guid();\r\n        model.set(model.idAttribute, model.id);\r\n      }\r\n      this.localStorage().setItem(this.name+\"-\"+model.id, JSON.stringify(model));\r\n      this.records.push(model.id.toString());\r\n      this.save();\r\n      return this.find(model);\r\n    },\r\n\r\n    // Update a model by replacing its copy in `this.data`.\r\n    update: function(model) {\r\n      this.localStorage().setItem(this.name+\"-\"+model.id, JSON.stringify(model));\r\n      if (!_.include(this.records, model.id.toString()))\r\n        this.records.push(model.id.toString()); this.save();\r\n      return this.find(model);\r\n    },\r\n\r\n    // Retrieve a model from `this.data` by id.\r\n    find: function(model) {\r\n      return this.jsonData(this.localStorage().getItem(this.name+\"-\"+model.id));\r\n    },\r\n\r\n    // Return the array of all entities currently in storage.\r\n    findAll: function() {\r\n      return _(this.records).chain()\r\n        .map(function(id){\r\n          return this.jsonData(this.localStorage().getItem(this.name+\"-\"+id));\r\n        }, this)\r\n        .compact()\r\n        .value();\r\n    },\r\n\r\n    // Delete a model from `this.data`, returning it.\r\n    destroy: function(model) {\r\n      if (model.isNew())\r\n        return false\r\n      this.localStorage().removeItem(this.name+\"-\"+model.id);\r\n      this.records = _.reject(this.records, function(id){\r\n        return id === model.id.toString();\r\n      });\r\n      this.save();\r\n      return model;\r\n    },\r\n\r\n    localStorage: function() {\r\n      return localStorage;\r\n    },\r\n\r\n    // fix for \"illegal access\" error on Android when JSON.parse is passed null\r\n    jsonData: function (data) {\r\n        return data && JSON.parse(data);\r\n    }\r\n\r\n  });\r\n\r\n  // localSync delegate to the model or collection's\r\n  // *localStorage* property, which should be an instance of `Store`.\r\n  function sync(method, model, options) {\r\n    var store = model.localStorage || model.collection.localStorage;\r\n\r\n    var resp, errorMessage, syncDfd = langx.Deferred(); //If $ is having Deferred - use it.\r\n\r\n    try {\r\n\r\n      switch (method) {\r\n        case \"read\":\r\n          resp = model.id != undefined ? store.find(model) : store.findAll();\r\n          break;\r\n        case \"create\":\r\n          resp = store.create(model);\r\n          break;\r\n        case \"update\":\r\n          resp = store.update(model);\r\n          break;\r\n        case \"delete\":\r\n          resp = store.destroy(model);\r\n          break;\r\n      }\r\n\r\n    } catch(error) {\r\n      if (error.code === DOMException.QUOTA_EXCEEDED_ERR && window.localStorage.length === 0)\r\n        errorMessage = \"Private browsing is unsupported\";\r\n      else\r\n        errorMessage = error.message;\r\n    }\r\n\r\n    if (resp) {\r\n      model.trigger(\"sync\", model, resp, options);\r\n      if (options && options.success)\r\n        options.success(resp);\r\n      if (syncDfd)\r\n        syncDfd.resolve(resp);\r\n\r\n    } else {\r\n      errorMessage = errorMessage ? errorMessage\r\n                                  : \"Record Not Found\";\r\n\r\n      if (options && options.error)\r\n        options.error(errorMessage);\r\n      if (syncDfd)\r\n        syncDfd.reject(errorMessage);\r\n    }\r\n\r\n    // add compatibility with $.ajax\r\n    // always execute callback for success and error\r\n    if (options && options.complete) options.complete(resp);\r\n\r\n    return syncDfd && syncDfd.promise();\r\n  };\r\n\r\n  entities.backends.LocalStorage = sync.LocalStorage = LocalStorage;\r\n  \r\n  return entities.backends.localSync = sync;\r\n\r\n});\ndefine('skylark-data-entities/main',[\r\n\t\"./entities\",\r\n\t\"./Collection\",\r\n\t\"./Entity\",\r\n\t\"./sync\",\r\n\t\"./backends/ajaxSync\",\r\n\t\"./backends/localSync\",\r\n\t\"./backends/registry\"\r\n],function(entities){\r\n\treturn entities;\r\n});\ndefine('skylark-data-entities', ['skylark-data-entities/main'], function (main) { return main; });\n\ndefine('skylark-io-streams/streams',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    return skylark.attach(\"data.streams\",{});\r\n});\r\n\ndefine('skylark-io-streams/Stream',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"./streams\"\r\n], function(skylark, langx,streams) {\r\n\r\n   \tvar Stream = langx.Evented.inherit({\r\n        klassName: \"Stream\",\r\n        init: function(arrayBuffer, start, length, dict) {\r\n\t        this.bytes = new Uint8Array(arrayBuffer);\r\n\t        this.start = start || 0;\r\n\t        this.pos = this.start;\r\n\t        this.end = (start + length) || this.bytes.length;\r\n\t        this.dict = dict;\r\n        },\r\n\r\n\r\n        length : {\r\n        \tget : function() {\r\n            \treturn this.end - this.start;\r\n        \t}\r\n        },\r\n\r\n        getByte: function () {\r\n            if (this.pos >= this.end)\r\n                return null;\r\n            return this.bytes[this.pos++];\r\n        },\r\n        // returns subarray of original buffer\r\n        // should only be read\r\n        getBytes: function (length) {\r\n            var bytes = this.bytes;\r\n            var pos = this.pos;\r\n            var strEnd = this.end;\r\n\r\n            if (!length)\r\n                return bytes.subarray(pos, strEnd);\r\n\r\n            var end = pos + length;\r\n            if (end > strEnd)\r\n                end = strEnd;\r\n\r\n            this.pos = end;\r\n            return bytes.subarray(pos, end);\r\n        },\r\n\r\n        lookChar: function () {\r\n            if (this.pos >= this.end)\r\n                return null;\r\n            return String.fromCharCode(this.bytes[this.pos]);\r\n        },\r\n        getChar: function () {\r\n            if (this.pos >= this.end)\r\n                return null;\r\n            return String.fromCharCode(this.bytes[this.pos++]);\r\n        },\r\n        skip: function (n) {\r\n            if (!n)\r\n                n = 1;\r\n            this.pos += n;\r\n        },\r\n        reset: function () {\r\n            this.pos = this.start;\r\n        },\r\n        moveStart: function () {\r\n            this.start = this.pos;\r\n        },\r\n        makeSubStream: function (start, length, dict) {\r\n            return new Stream(this.bytes.buffer, start, length, dict);\r\n        },\r\n        isStream: true\r\n    });\r\n    \r\n    return streams.Stream = Stream;\r\n\t\r\n});\r\n\ndefine('skylark-io-streams/DecodeStream',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"./streams\",\r\n    \"./Stream\"\r\n], function(skylark, langx, streams, Stream) {\r\n\r\n    var DecodeStream = Stream.inherit({\r\n        klassName : \"DecodeStream\",\r\n\r\n        init : function() {\r\n            this.pos = 0;\r\n            this.bufferLength = 0;\r\n            this.eof = false;\r\n            this.buffer = null;     \r\n        },\r\n\r\n        ensureBuffer: function(requested) {\r\n            var buffer = this.buffer;\r\n            var current = buffer ? buffer.byteLength : 0;\r\n            if (requested < current)\r\n                return buffer;\r\n            var size = 512;\r\n            while (size < requested)\r\n                size <<= 1;\r\n            var buffer2 = new Uint8Array(size);\r\n            for (var i = 0; i < current; ++i)\r\n                buffer2[i] = buffer[i];\r\n            return (this.buffer = buffer2);\r\n        },\r\n        getByte: function () {\r\n            var pos = this.pos;\r\n            while (this.bufferLength <= pos) {\r\n                if (this.eof)\r\n                    return null;\r\n                this.readBlock();\r\n            }\r\n            return this.buffer[this.pos++];\r\n        },\r\n        getBytes: function(length) {\r\n            var end, pos = this.pos;\r\n\r\n            if (length) {\r\n                this.ensureBuffer(pos + length);\r\n                end = pos + length;\r\n\r\n                while (!this.eof && this.bufferLength < end)\r\n                    this.readBlock();\r\n\r\n                var bufEnd = this.bufferLength;\r\n                if (end > bufEnd)\r\n                    end = bufEnd;\r\n            } else {\r\n                while (!this.eof)\r\n                    this.readBlock();\r\n\r\n                end = this.bufferLength;\r\n\r\n                // checking if bufferLength is still 0 then\r\n                // the buffer has to be initialized\r\n                if (!end)\r\n                    this.buffer = new Uint8Array(0);\r\n            }\r\n\r\n            this.pos = end;\r\n            return this.buffer.subarray(pos, end);\r\n        },\r\n        lookChar: function() {\r\n            var pos = this.pos;\r\n            while (this.bufferLength <= pos) {\r\n                if (this.eof)\r\n                    return null;\r\n                this.readBlock();\r\n            }\r\n            return String.fromCharCode(this.buffer[this.pos]);\r\n        },\r\n        getChar: function () {\r\n            var pos = this.pos;\r\n            while (this.bufferLength <= pos) {\r\n                if (this.eof)\r\n                    return null;\r\n                this.readBlock();\r\n            }\r\n            return String.fromCharCode(this.buffer[this.pos++]);\r\n        },\r\n        makeSubStream: function (start, length, dict) {\r\n            var end = start + length;\r\n            while (this.bufferLength <= end && !this.eof)\r\n                this.readBlock();\r\n            return new Stream(this.buffer, start, length, dict);\r\n        },\r\n        skip: function (n) {\r\n            if (!n)\r\n                n = 1;\r\n            this.pos += n;\r\n        },\r\n        reset: function () {\r\n            this.pos = 0;\r\n        }\r\n\r\n    });\r\n\r\n    return streams.DecodeStream = DecodeStream;\r\n\r\n});\r\n\ndefine('skylark-io-streams/Ascii85Stream',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"./streams\",\r\n    \"./DecodeStream\"\r\n], function(skylark, langx, streams, DecodeStream) {\r\n\r\n    var Ascii85Stream = DecodeStream.inherit({\r\n        klassName : \"Ascii85Stream\",\r\n\r\n        init : function(str) {\r\n            this.str = str;\r\n            this.dict = str.dict;\r\n            this.input = new Uint8Array(5);\r\n\r\n            DecodeStream.prototype.init.call(this);          \r\n        },\r\n\r\n        readBlock : function() {\r\n            var tildaCode = '~'.charCodeAt(0);\r\n            var zCode = 'z'.charCodeAt(0);\r\n            var str = this.str;\r\n\r\n            var c = str.getByte();\r\n            while (Lexer.isSpace(String.fromCharCode(c)))\r\n                c = str.getByte();\r\n\r\n            if (!c || c === tildaCode) {\r\n                this.eof = true;\r\n                return;\r\n            }\r\n\r\n            var bufferLength = this.bufferLength,\r\n                buffer;\r\n\r\n            // special code for z\r\n            if (c == zCode) {\r\n                buffer = this.ensureBuffer(bufferLength + 4);\r\n                for (var i = 0; i < 4; ++i)\r\n                    buffer[bufferLength + i] = 0;\r\n                this.bufferLength += 4;\r\n            } else {\r\n                var input = this.input;\r\n                input[0] = c;\r\n                for (var i = 1; i < 5; ++i) {\r\n                    c = str.getByte();\r\n                    while (Lexer.isSpace(String.fromCharCode(c)))\r\n                        c = str.getByte();\r\n\r\n                    input[i] = c;\r\n\r\n                    if (!c || c == tildaCode)\r\n                        break;\r\n                }\r\n                buffer = this.ensureBuffer(bufferLength + i - 1);\r\n                this.bufferLength += i - 1;\r\n\r\n                // partial ending;\r\n                if (i < 5) {\r\n                    for (; i < 5; ++i)\r\n                        input[i] = 0x21 + 84;\r\n                    this.eof = true;\r\n                }\r\n                var t = 0;\r\n                for (var i = 0; i < 5; ++i)\r\n                    t = t * 85 + (input[i] - 0x21);\r\n\r\n                for (var i = 3; i >= 0; --i) {\r\n                    buffer[bufferLength + i] = t & 0xFF;\r\n                    t >>= 8;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    });\r\n\r\n    return streams.Ascii85Stream = Ascii85Stream;\r\n\r\n});\r\n\ndefine('skylark-io-streams/AsciiHexStream',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"./streams\",\r\n    \"./DecodeStream\"\r\n], function(skylark, langx, streams, DecodeStream) {\r\n    var hexvalueMap = {\r\n        9: -1, // \\t\r\n        32: -1, // space\r\n        48: 0,\r\n        49: 1,\r\n        50: 2,\r\n        51: 3,\r\n        52: 4,\r\n        53: 5,\r\n        54: 6,\r\n        55: 7,\r\n        56: 8,\r\n        57: 9,\r\n        65: 10,\r\n        66: 11,\r\n        67: 12,\r\n        68: 13,\r\n        69: 14,\r\n        70: 15,\r\n        97: 10,\r\n        98: 11,\r\n        99: 12,\r\n        100: 13,\r\n        101: 14,\r\n        102: 15\r\n    };\r\n\r\n    var AsciiHexStream = DecodeStream.inherit({\r\n        klassName : \"AsciiHexStream\",\r\n\r\n        init : function(str) {\r\n            this.str = str;\r\n            this.dict = str.dict;\r\n\r\n            DecodeStream.prototype.init.call(this);          \r\n        },\r\n\r\n        readBlock : function() {\r\n            var gtCode = '>'.charCodeAt(0),\r\n                bytes = this.str.getBytes(),\r\n                c, n,\r\n                decodeLength, buffer, bufferLength, i, length;\r\n\r\n            decodeLength = (bytes.length + 1) >> 1;\r\n            buffer = this.ensureBuffer(this.bufferLength + decodeLength);\r\n            bufferLength = this.bufferLength;\r\n\r\n            for (i = 0, length = bytes.length; i < length; i++) {\r\n                c = hexvalueMap[bytes[i]];\r\n                while (c == -1 && (i + 1) < length) {\r\n                    c = hexvalueMap[bytes[++i]];\r\n                }\r\n\r\n                if ((i + 1) < length && (bytes[i + 1] !== gtCode)) {\r\n                    n = hexvalueMap[bytes[++i]];\r\n                    buffer[bufferLength++] = c * 16 + n;\r\n                } else {\r\n                    // EOD marker at an odd number, behave as if a 0 followed the last\r\n                    // digit.\r\n                    if (bytes[i] !== gtCode) {\r\n                        buffer[bufferLength++] = c * 16;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.bufferLength = bufferLength;\r\n            this.eof = true;        \r\n       }\r\n\r\n    });\r\n\r\n    return streams.AsciiHexStream = AsciiHexStream;\r\n});\r\n\ndefine('skylark-io-streams/ChunkedStream',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"./streams\",\r\n    \"./Stream\"\r\n], function(skylark, langx,streams,Stream) {\r\n\r\n\r\n    var ChunkedStream = Stream.inherit({\r\n        klassName : \"ChunkedStream\",\r\n\r\n        \"numChunks\": 0,\r\n        \"numChunksLoaded\": 0,\r\n\r\n        init : function(str) {\r\n            var length = str.length;\r\n            var bytes = new Uint8Array(length);\r\n            for (var n = 0; n < length; ++n)\r\n                bytes[n] = str.charCodeAt(n);\r\n            DecodeStream.prototype.init.call(bytes);          \r\n            this.dict = stream.dict;\r\n        },\r\n\r\n        \"numChunks\": function() {\r\n\r\n        },\r\n\r\n\r\n        getMissingChunks: function ChunkedStream_getMissingChunks() {\r\n            var chunks = [];\r\n            for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\r\n                if (!(chunk in this.loadedChunks)) {\r\n                    chunks.push(chunk);\r\n                }\r\n            }\r\n            return chunks;\r\n        },\r\n\r\n        getBaseStreams: function ChunkedStream_getBaseStreams() {\r\n            return [this];\r\n        },\r\n\r\n        allChunksLoaded: function ChunkedStream_allChunksLoaded() {\r\n            var _ = this._;\r\n            return _.numChunksLoaded === _.numChunks;\r\n        },\r\n\r\n        onReceiveData: function(begin, chunk) {\r\n            var end = begin + chunk.byteLength;\r\n\r\n            assert(begin % this.chunkSize === 0, 'Bad begin offset: ' + begin);\r\n            // Using this.length is inaccurate here since this.start can be moved\r\n            // See ChunkedStream.moveStart()\r\n            var length = this.bytes.length;\r\n            assert(end % this.chunkSize === 0 || end === length,\r\n                'Bad end offset: ' + end);\r\n\r\n            this.bytes.set(new Uint8Array(chunk), begin);\r\n            var chunkSize = this.chunkSize;\r\n            var beginChunk = Math.floor(begin / chunkSize);\r\n            var endChunk = Math.floor((end - 1) / chunkSize) + 1;\r\n\r\n            for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\r\n                if (!(chunk in this.loadedChunks)) {\r\n                    this.loadedChunks[chunk] = true;\r\n                    ++this.numChunksLoaded;\r\n                }\r\n            }\r\n        },\r\n\r\n        onReceiveInitialData: function(data) {\r\n            this.bytes.set(data);\r\n            this.initialDataLength = data.length;\r\n            var endChunk = this.end === data.length ?\r\n                this.numChunks : Math.floor(data.length / this.chunkSize);\r\n            for (var i = 0; i < endChunk; i++) {\r\n                this.loadedChunks[i] = true;\r\n                ++this.numChunksLoaded;\r\n            }\r\n        },\r\n\r\n        ensureRange: function ChunkedStream_ensureRange(begin, end) {\r\n            if (begin >= end) {\r\n                return;\r\n            }\r\n\r\n            if (end <= this.initialDataLength) {\r\n                return;\r\n            }\r\n\r\n            var chunkSize = this.chunkSize;\r\n            var beginChunk = Math.floor(begin / chunkSize);\r\n            var endChunk = Math.floor((end - 1) / chunkSize) + 1;\r\n            for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\r\n                if (!(chunk in this.loadedChunks)) {\r\n                    throw new MissingDataException(begin, end);\r\n                }\r\n            }\r\n        },\r\n\r\n        nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\r\n            for (var chunk = beginChunk, n = this.numChunks; chunk < n; ++chunk) {\r\n                if (!(chunk in this.loadedChunks)) {\r\n                    return chunk;\r\n                }\r\n            }\r\n            // Wrap around to beginning\r\n            for (var chunk = 0; chunk < beginChunk; ++chunk) {\r\n                if (!(chunk in this.loadedChunks)) {\r\n                    return chunk;\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n\r\n        hasChunk: function ChunkedStream_hasChunk(chunk) {\r\n            return chunk in this._.loadedChunks;\r\n        },\r\n\r\n        getByte: function ChunkedStream_getByte() {\r\n            var pos = this.pos;\r\n            if (pos >= this.end) {\r\n                return -1;\r\n            }\r\n            this.ensureRange(pos, pos + 1);\r\n            return this.bytes[this.pos++];\r\n        },\r\n\r\n        // returns subarray of original buffer\r\n        // should only be read\r\n        getBytes: function ChunkedStream_getBytes(length) {\r\n            var bytes = this.bytes;\r\n            var pos = this.pos;\r\n            var strEnd = this.end;\r\n\r\n            if (!length) {\r\n                this.ensureRange(pos, strEnd);\r\n                return bytes.subarray(pos, strEnd);\r\n            }\r\n\r\n            var end = pos + length;\r\n            if (end > strEnd)\r\n                end = strEnd;\r\n            this.ensureRange(pos, end);\r\n\r\n            this.pos = end;\r\n            return bytes.subarray(pos, end);\r\n        },\r\n\r\n        peekBytes: function ChunkedStream_peekBytes(length) {\r\n            var bytes = this.getBytes(length);\r\n            this.pos -= bytes.length;\r\n            return bytes;\r\n        },\r\n\r\n        getByteRange: function ChunkedStream_getBytes(begin, end) {\r\n            this.ensureRange(begin, end);\r\n            return this.bytes.subarray(begin, end);\r\n        },\r\n\r\n        skip: function ChunkedStream_skip(n) {\r\n            if (!n)\r\n                n = 1;\r\n            this.pos += n;\r\n        },\r\n\r\n        reset: function ChunkedStream_reset() {\r\n            this.pos = this.start;\r\n        },\r\n\r\n        moveStart: function ChunkedStream_moveStart() {\r\n            this.start = this.pos;\r\n        },\r\n\r\n        makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\r\n            function ChunkedStreamSubstream() {}\r\n            ChunkedStreamSubstream.prototype = Object.create(this);\r\n            ChunkedStreamSubstream.prototype.getMissingChunks = function() {\r\n                var chunkSize = this.chunkSize;\r\n                var beginChunk = Math.floor(this.start / chunkSize);\r\n                var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\r\n                var missingChunks = [];\r\n                for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\r\n                    if (!(chunk in this.loadedChunks)) {\r\n                        missingChunks.push(chunk);\r\n                    }\r\n                }\r\n                return missingChunks;\r\n            };\r\n            var subStream = new ChunkedStreamSubstream();\r\n            subStream.pos = subStream.start = start;\r\n            subStream.end = start + length || this.end;\r\n            subStream.dict = dict;\r\n            return subStream;\r\n        }\r\n    });\r\n\r\n    return streams.ChunkedStream = ChunkedStream;\r\n\r\n});\r\n\n\r\ndefine('skylark-io-streams/DecryptStream',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"./streams\",\r\n    \"./DecodeStream\"\r\n], function(skylark, langx, streams, DecodeStream) {\r\n\r\n    var chunkSize = 512;\r\n\r\n    var DecryptStream = DecodeStream.inherit({\r\n        klassName : \"DecryptStream\",\r\n\r\n        init : function(str, decrypt) {\r\n            this.str = str;\r\n            this.dict = str.dict;\r\n            this.decrypt = decrypt;\r\n            DecodeStream.prototype.init.call(this);          \r\n        },\r\n\r\n        readBlock : function() {\r\n            var chunk = this.str.getBytes(chunkSize);\r\n            if (!chunk || chunk.length == 0) {\r\n                this.eof = true;\r\n                return;\r\n            }\r\n            var decrypt = this.decrypt;\r\n            chunk = decrypt(chunk);\r\n\r\n            var bufferLength = this.bufferLength;\r\n            var i, n = chunk.length;\r\n            var buffer = this.ensureBuffer(bufferLength + n);\r\n            for (i = 0; i < n; i++)\r\n                buffer[bufferLength++] = chunk[i];\r\n            this.bufferLength = bufferLength;\r\n        }\r\n    });\r\n\r\n    return streams.DecryptStream = DecryptStream;\r\n});\r\n\n\r\ndefine('skylark-io-streams/FakeStream',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"./streams\",\r\n    \"./DecodeStream\"\r\n], function(skylark, langx, streams, DecodeStream) {\r\n\r\n    var FakeStream = DecodeStream.inherit({\r\n        klassName : \"FakeStream\",\r\n\r\n        init : function(stream) {\r\n            this.dict = stream.dict;\r\n            Stream.prototype.init.call(this);          \r\n        },\r\n\r\n        readBlock : function() {\r\n            var bufferLength = this.bufferLength;\r\n            bufferLength += 1024;\r\n            var buffer = this.ensureBuffer(bufferLength);\r\n            this.bufferLength = bufferLength;\r\n        },\r\n\r\n        getBytes : function (length) {\r\n            var end, pos = this.pos;\r\n\r\n            if (length) {\r\n                this.ensureBuffer(pos + length);\r\n                end = pos + length;\r\n\r\n                while (!this.eof && this.bufferLength < end)\r\n                    this.readBlock();\r\n\r\n                var bufEnd = this.bufferLength;\r\n                if (end > bufEnd)\r\n                    end = bufEnd;\r\n            } else {\r\n                this.eof = true;\r\n                end = this.bufferLength;\r\n            }\r\n\r\n            this.pos = end;\r\n            return this.buffer.subarray(pos, end);\r\n        }\r\n\r\n    });\r\n\r\n    return streams.FakeStream = FakeStream;\r\n});\r\n\n\r\ndefine('skylark-io-streams/FlateStream',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"./streams\",\r\n    \"./DecodeStream\"\r\n], function(skylark, langx, streams, DecodeStream) {\r\n\r\n    var codeLenCodeMap = new Uint32Array([\r\n        16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15\r\n    ]);\r\n\r\n    var lengthDecode = new Uint32Array([\r\n        0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a,\r\n        0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f,\r\n        0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073,\r\n        0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102\r\n    ]);\r\n\r\n    var distDecode = new Uint32Array([\r\n        0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d,\r\n        0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1,\r\n        0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01,\r\n        0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001\r\n    ]);\r\n\r\n    var fixedLitCodeTab = [new Uint32Array([\r\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0,\r\n        0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0,\r\n        0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0,\r\n        0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0,\r\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8,\r\n        0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8,\r\n        0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8,\r\n        0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8,\r\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4,\r\n        0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4,\r\n        0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4,\r\n        0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4,\r\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc,\r\n        0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec,\r\n        0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc,\r\n        0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc,\r\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2,\r\n        0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2,\r\n        0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2,\r\n        0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2,\r\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca,\r\n        0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea,\r\n        0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da,\r\n        0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa,\r\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6,\r\n        0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6,\r\n        0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6,\r\n        0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6,\r\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce,\r\n        0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee,\r\n        0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de,\r\n        0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe,\r\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1,\r\n        0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1,\r\n        0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1,\r\n        0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1,\r\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9,\r\n        0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9,\r\n        0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9,\r\n        0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9,\r\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5,\r\n        0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5,\r\n        0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5,\r\n        0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5,\r\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd,\r\n        0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed,\r\n        0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd,\r\n        0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd,\r\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3,\r\n        0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3,\r\n        0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3,\r\n        0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3,\r\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb,\r\n        0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb,\r\n        0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db,\r\n        0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb,\r\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7,\r\n        0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7,\r\n        0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7,\r\n        0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7,\r\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf,\r\n        0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef,\r\n        0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df,\r\n        0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff\r\n    ]), 9];\r\n\r\n    var fixedDistCodeTab = [new Uint32Array([\r\n        0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c,\r\n        0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000,\r\n        0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d,\r\n        0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000\r\n    ]), 5];\r\n\r\n\r\n    var FlateStream = DecodeStream.inherit({\r\n        klassName : \"FlateStream\",\r\n\r\n        init : function(stream) {\r\n            var bytes = stream.getBytes();\r\n            var bytesPos = 0;\r\n\r\n            this.dict = stream.dict;\r\n            var cmf = bytes[bytesPos++];\r\n            var flg = bytes[bytesPos++];\r\n            if (cmf == -1 || flg == -1)\r\n                error('Invalid header in flate stream: ' + cmf + ', ' + flg);\r\n            if ((cmf & 0x0f) != 0x08)\r\n                error('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\r\n            if ((((cmf << 8) + flg) % 31) != 0)\r\n                error('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\r\n            if (flg & 0x20)\r\n                error('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\r\n\r\n            this.bytes = bytes;\r\n            this.bytesPos = bytesPos;\r\n\r\n            this.codeSize = 0;\r\n            this.codeBuf = 0;\r\n            DecodeStream.prototype.init.call(this);          \r\n        },\r\n\r\n        getBits : function(bits) {\r\n            var codeSize = this.codeSize;\r\n            var codeBuf = this.codeBuf;\r\n            var bytes = this.bytes;\r\n            var bytesPos = this.bytesPos;\r\n\r\n            var b;\r\n            while (codeSize < bits) {\r\n                if (typeof(b = bytes[bytesPos++]) == 'undefined')\r\n                    error('Bad encoding in flate stream');\r\n                codeBuf |= b << codeSize;\r\n                codeSize += 8;\r\n            }\r\n            b = codeBuf & ((1 << bits) - 1);\r\n            this.codeBuf = codeBuf >> bits;\r\n            this.codeSize = codeSize -= bits;\r\n            this.bytesPos = bytesPos;\r\n            return b;\r\n        },\r\n\r\n        getCode : function(table) {\r\n            var codes = table[0];\r\n            var maxLen = table[1];\r\n            var codeSize = this.codeSize;\r\n            var codeBuf = this.codeBuf;\r\n            var bytes = this.bytes;\r\n            var bytesPos = this.bytesPos;\r\n\r\n            while (codeSize < maxLen) {\r\n                var b;\r\n                if (typeof(b = bytes[bytesPos++]) == 'undefined')\r\n                    error('Bad encoding in flate stream');\r\n                codeBuf |= (b << codeSize);\r\n                codeSize += 8;\r\n            }\r\n            var code = codes[codeBuf & ((1 << maxLen) - 1)];\r\n            var codeLen = code >> 16;\r\n            var codeVal = code & 0xffff;\r\n            if (codeSize == 0 || codeSize < codeLen || codeLen == 0)\r\n                error('Bad encoding in flate stream');\r\n            this.codeBuf = (codeBuf >> codeLen);\r\n            this.codeSize = (codeSize - codeLen);\r\n            this.bytesPos = bytesPos;\r\n            return codeVal;\r\n        },\r\n\r\n        generateHuffmanTable : function(lengths) {\r\n                var n = lengths.length;\r\n\r\n                // find max code length\r\n                var maxLen = 0;\r\n                for (var i = 0; i < n; ++i) {\r\n                    if (lengths[i] > maxLen)\r\n                        maxLen = lengths[i];\r\n                }\r\n\r\n                // build the table\r\n                var size = 1 << maxLen;\r\n                var codes = new Uint32Array(size);\r\n                for (var len = 1, code = 0, skip = 2; len <= maxLen;\r\n                    ++len, code <<= 1, skip <<= 1) {\r\n                    for (var val = 0; val < n; ++val) {\r\n                        if (lengths[val] == len) {\r\n                            // bit-reverse the code\r\n                            var code2 = 0;\r\n                            var t = code;\r\n                            for (var i = 0; i < len; ++i) {\r\n                                code2 = (code2 << 1) | (t & 1);\r\n                                t >>= 1;\r\n                            }\r\n\r\n                            // fill the table entries\r\n                            for (var i = code2; i < size; i += skip)\r\n                                codes[i] = (len << 16) | val;\r\n\r\n                            ++code;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return [codes, maxLen];\r\n        },\r\n\r\n        readBlock : function() {\r\n            // read block header\r\n            var hdr = this.getBits(3);\r\n            if (hdr & 1)\r\n                this.eof = true;\r\n            hdr >>= 1;\r\n\r\n            if (hdr == 0) { // uncompressed block\r\n                var bytes = this.bytes;\r\n                var bytesPos = this.bytesPos;\r\n                var b;\r\n\r\n                if (typeof(b = bytes[bytesPos++]) == 'undefined')\r\n                    error('Bad block header in flate stream');\r\n                var blockLen = b;\r\n                if (typeof(b = bytes[bytesPos++]) == 'undefined')\r\n                    error('Bad block header in flate stream');\r\n                blockLen |= (b << 8);\r\n                if (typeof(b = bytes[bytesPos++]) == 'undefined')\r\n                    error('Bad block header in flate stream');\r\n                var check = b;\r\n                if (typeof(b = bytes[bytesPos++]) == 'undefined')\r\n                    error('Bad block header in flate stream');\r\n                check |= (b << 8);\r\n                if (check != (~blockLen & 0xffff))\r\n                    error('Bad uncompressed block length in flate stream');\r\n\r\n                this.codeBuf = 0;\r\n                this.codeSize = 0;\r\n\r\n                var bufferLength = this.bufferLength;\r\n                var buffer = this.ensureBuffer(bufferLength + blockLen);\r\n                var end = bufferLength + blockLen;\r\n                this.bufferLength = end;\r\n                for (var n = bufferLength; n < end; ++n) {\r\n                    if (typeof(b = bytes[bytesPos++]) == 'undefined') {\r\n                        this.eof = true;\r\n                        break;\r\n                    }\r\n                    buffer[n] = b;\r\n                }\r\n                this.bytesPos = bytesPos;\r\n                return;\r\n            }\r\n\r\n            var litCodeTable;\r\n            var distCodeTable;\r\n            if (hdr == 1) { // compressed block, fixed codes\r\n                litCodeTable = fixedLitCodeTab;\r\n                distCodeTable = fixedDistCodeTab;\r\n            } else if (hdr == 2) { // compressed block, dynamic codes\r\n                var numLitCodes = this.getBits(5) + 257;\r\n                var numDistCodes = this.getBits(5) + 1;\r\n                var numCodeLenCodes = this.getBits(4) + 4;\r\n\r\n                // build the code lengths code table\r\n                var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\r\n\r\n                for (var i = 0; i < numCodeLenCodes; ++i)\r\n                    codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\r\n                var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\r\n\r\n                // build the literal and distance code tables\r\n                var len = 0;\r\n                var i = 0;\r\n                var codes = numLitCodes + numDistCodes;\r\n                var codeLengths = new Uint8Array(codes);\r\n                while (i < codes) {\r\n                    var code = this.getCode(codeLenCodeTab);\r\n                    if (code == 16) {\r\n                        var bitsLength = 2,\r\n                            bitsOffset = 3,\r\n                            what = len;\r\n                    } else if (code == 17) {\r\n                        var bitsLength = 3,\r\n                            bitsOffset = 3,\r\n                            what = (len = 0);\r\n                    } else if (code == 18) {\r\n                        var bitsLength = 7,\r\n                            bitsOffset = 11,\r\n                            what = (len = 0);\r\n                    } else {\r\n                        codeLengths[i++] = len = code;\r\n                        continue;\r\n                    }\r\n\r\n                    var repeatLength = this.getBits(bitsLength) + bitsOffset;\r\n                    while (repeatLength-- > 0)\r\n                        codeLengths[i++] = what;\r\n                }\r\n\r\n                litCodeTable =\r\n                    this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\r\n                distCodeTable =\r\n                    this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\r\n            } else {\r\n                error('Unknown block type in flate stream');\r\n            }\r\n\r\n            var buffer = this.buffer;\r\n            var limit = buffer ? buffer.length : 0;\r\n            var pos = this.bufferLength;\r\n            while (true) {\r\n                var code1 = this.getCode(litCodeTable);\r\n                if (code1 < 256) {\r\n                    if (pos + 1 >= limit) {\r\n                        buffer = this.ensureBuffer(pos + 1);\r\n                        limit = buffer.length;\r\n                    }\r\n                    buffer[pos++] = code1;\r\n                    continue;\r\n                }\r\n                if (code1 == 256) {\r\n                    this.bufferLength = pos;\r\n                    return;\r\n                }\r\n                code1 -= 257;\r\n                code1 = lengthDecode[code1];\r\n                var code2 = code1 >> 16;\r\n                if (code2 > 0)\r\n                    code2 = this.getBits(code2);\r\n                var len = (code1 & 0xffff) + code2;\r\n                code1 = this.getCode(distCodeTable);\r\n                code1 = distDecode[code1];\r\n                code2 = code1 >> 16;\r\n                if (code2 > 0)\r\n                    code2 = this.getBits(code2);\r\n                var dist = (code1 & 0xffff) + code2;\r\n                if (pos + len >= limit) {\r\n                    buffer = this.ensureBuffer(pos + len);\r\n                    limit = buffer.length;\r\n                }\r\n                for (var k = 0; k < len; ++k, ++pos)\r\n                    buffer[pos] = buffer[pos - dist];\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return streams.FlateStream = FlateStream;\r\n});\r\n\ndefine('skylark-io-streams/LZWStream',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"./streams\",\r\n    \"./DecodeStream\"\r\n], function(skylark, langx, streams, DecodeStream) {\r\n\r\n    var LZWStream = DecodeStream.inherit({\r\n        klassName : \"LZWStream\",\r\n\r\n        init : function(str, earlyChange) {\r\n            this.str = str;\r\n            this.dict = str.dict;\r\n            this.cachedData = 0;\r\n            this.bitsCached = 0;\r\n\r\n            var maxLzwDictionarySize = 4096;\r\n            var lzwState = {\r\n                earlyChange: earlyChange,\r\n                codeLength: 9,\r\n                nextCode: 258,\r\n                dictionaryValues: new Uint8Array(maxLzwDictionarySize),\r\n                dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\r\n                dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\r\n                currentSequence: new Uint8Array(maxLzwDictionarySize),\r\n                currentSequenceLength: 0\r\n            };\r\n            for (var i = 0; i < 256; ++i) {\r\n                lzwState.dictionaryValues[i] = i;\r\n                lzwState.dictionaryLengths[i] = 1;\r\n            }\r\n            this.lzwState = lzwState;\r\n            DecodeStream.prototype.init.call(this);          \r\n        },\r\n\r\n        readBits : function(n) {\r\n            var bitsCached = this.bitsCached;\r\n            var cachedData = this.cachedData;\r\n            while (bitsCached < n) {\r\n                var c = this.str.getByte();\r\n                if (c == null) {\r\n                    this.eof = true;\r\n                    return null;\r\n                }\r\n                cachedData = (cachedData << 8) | c;\r\n                bitsCached += 8;\r\n            }\r\n            this.bitsCached = (bitsCached -= n);\r\n            this.cachedData = cachedData;\r\n            this.lastCode = null;\r\n            return (cachedData >>> bitsCached) & ((1 << n) - 1);\r\n        },\r\n\r\n        readBlock : function() {\r\n            var blockSize = 512;\r\n            var estimatedDecodedSize = blockSize * 2,\r\n                decodedSizeDelta = blockSize;\r\n            var i, j, q;\r\n\r\n            var lzwState = this.lzwState;\r\n            if (!lzwState)\r\n                return; // eof was found\r\n\r\n            var earlyChange = lzwState.earlyChange;\r\n            var nextCode = lzwState.nextCode;\r\n            var dictionaryValues = lzwState.dictionaryValues;\r\n            var dictionaryLengths = lzwState.dictionaryLengths;\r\n            var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\r\n            var codeLength = lzwState.codeLength;\r\n            var prevCode = lzwState.prevCode;\r\n            var currentSequence = lzwState.currentSequence;\r\n            var currentSequenceLength = lzwState.currentSequenceLength;\r\n\r\n            var decodedLength = 0;\r\n            var currentBufferLength = this.bufferLength;\r\n            var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\r\n\r\n            for (i = 0; i < blockSize; i++) {\r\n                var code = this.readBits(codeLength);\r\n                var hasPrev = currentSequenceLength > 0;\r\n                if (code < 256) {\r\n                    currentSequence[0] = code;\r\n                    currentSequenceLength = 1;\r\n                } else if (code >= 258) {\r\n                    if (code < nextCode) {\r\n                        currentSequenceLength = dictionaryLengths[code];\r\n                        for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\r\n                            currentSequence[j] = dictionaryValues[q];\r\n                            q = dictionaryPrevCodes[q];\r\n                        }\r\n                    } else {\r\n                        currentSequence[currentSequenceLength++] = currentSequence[0];\r\n                    }\r\n                } else if (code == 256) {\r\n                    codeLength = 9;\r\n                    nextCode = 258;\r\n                    currentSequenceLength = 0;\r\n                    continue;\r\n                } else {\r\n                    this.eof = true;\r\n                    delete this.lzwState;\r\n                    break;\r\n                }\r\n\r\n                if (hasPrev) {\r\n                    dictionaryPrevCodes[nextCode] = prevCode;\r\n                    dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\r\n                    dictionaryValues[nextCode] = currentSequence[0];\r\n                    nextCode++;\r\n                    codeLength = (nextCode + earlyChange) & (nextCode + earlyChange - 1) ?\r\n                        codeLength : Math.min(Math.log(nextCode + earlyChange) /\r\n                            0.6931471805599453 + 1, 12) | 0;\r\n                }\r\n                prevCode = code;\r\n\r\n                decodedLength += currentSequenceLength;\r\n                if (estimatedDecodedSize < decodedLength) {\r\n                    do {\r\n                        estimatedDecodedSize += decodedSizeDelta;\r\n                    } while (estimatedDecodedSize < decodedLength);\r\n                    buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\r\n                }\r\n                for (j = 0; j < currentSequenceLength; j++)\r\n                    buffer[currentBufferLength++] = currentSequence[j];\r\n            }\r\n            lzwState.nextCode = nextCode;\r\n            lzwState.codeLength = codeLength;\r\n            lzwState.prevCode = prevCode;\r\n            lzwState.currentSequenceLength = currentSequenceLength;\r\n\r\n            this.bufferLength = currentBufferLength;\r\n        }\r\n    });\r\n\r\n    return streams.LZWStream = LZWStream;\r\n});\r\n\n\r\ndefine('skylark-io-streams/PredictorStream',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"./streams\",\r\n    \"./DecodeStream\"\r\n], function(skylark, langx, streams, DecodeStream) {\r\n\r\n    var PredictorStream = DecodeStream.inherit({\r\n        klassName : \"PredictorStream\",\r\n\r\n        init : function(stream, params) {\r\n            var predictor = this.predictor = params.get('Predictor') || 1;\r\n\r\n            if (predictor <= 1)\r\n                return stream; // no prediction\r\n            if (predictor !== 2 && (predictor < 10 || predictor > 15))\r\n                error('Unsupported predictor: ' + predictor);\r\n\r\n            if (predictor === 2)\r\n                this.readBlock = this.readBlockTiff;\r\n            else\r\n                this.readBlock = this.readBlockPng;\r\n\r\n            this.stream = stream;\r\n            this.dict = stream.dict;\r\n\r\n            var colors = this.colors = params.get('Colors') || 1;\r\n            var bits = this.bits = params.get('BitsPerComponent') || 8;\r\n            var columns = this.columns = params.get('Columns') || 1;\r\n\r\n            this.pixBytes = (colors * bits + 7) >> 3;\r\n            this.rowBytes = (columns * colors * bits + 7) >> 3;\r\n            DecodeStream.prototype.init.call(this);          \r\n        },\r\n\r\n        readBlockTiff : function () {\r\n                var rowBytes = this.rowBytes;\r\n\r\n                var bufferLength = this.bufferLength;\r\n                var buffer = this.ensureBuffer(bufferLength + rowBytes);\r\n\r\n                var bits = this.bits;\r\n                var colors = this.colors;\r\n\r\n                var rawBytes = this.stream.getBytes(rowBytes);\r\n\r\n                var inbuf = 0,\r\n                    outbuf = 0;\r\n                var inbits = 0,\r\n                    outbits = 0;\r\n                var pos = bufferLength;\r\n\r\n                if (bits === 1) {\r\n                    for (var i = 0; i < rowBytes; ++i) {\r\n                        var c = rawBytes[i];\r\n                        inbuf = (inbuf << 8) | c;\r\n                        // bitwise addition is exclusive or\r\n                        // first shift inbuf and then add\r\n                        buffer[pos++] = (c ^ (inbuf >> colors)) & 0xFF;\r\n                        // truncate inbuf (assumes colors < 16)\r\n                        inbuf &= 0xFFFF;\r\n                    }\r\n                } else if (bits === 8) {\r\n                    for (var i = 0; i < colors; ++i)\r\n                        buffer[pos++] = rawBytes[i];\r\n                    for (; i < rowBytes; ++i) {\r\n                        buffer[pos] = buffer[pos - colors] + rawBytes[i];\r\n                        pos++;\r\n                    }\r\n                } else {\r\n                    var compArray = new Uint8Array(colors + 1);\r\n                    var bitMask = (1 << bits) - 1;\r\n                    var j = 0,\r\n                        k = bufferLength;\r\n                    var columns = this.columns;\r\n                    for (var i = 0; i < columns; ++i) {\r\n                        for (var kk = 0; kk < colors; ++kk) {\r\n                            if (inbits < bits) {\r\n                                inbuf = (inbuf << 8) | (rawBytes[j++] & 0xFF);\r\n                                inbits += 8;\r\n                            }\r\n                            compArray[kk] = (compArray[kk] +\r\n                                (inbuf >> (inbits - bits))) & bitMask;\r\n                            inbits -= bits;\r\n                            outbuf = (outbuf << bits) | compArray[kk];\r\n                            outbits += bits;\r\n                            if (outbits >= 8) {\r\n                                buffer[k++] = (outbuf >> (outbits - 8)) & 0xFF;\r\n                                outbits -= 8;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (outbits > 0) {\r\n                        buffer[k++] = (outbuf << (8 - outbits)) +\r\n                            (inbuf & ((1 << (8 - outbits)) - 1));\r\n                    }\r\n                }\r\n                this.bufferLength += rowBytes;\r\n        },\r\n\r\n        readBlockPng : function() {\r\n\r\n                var rowBytes = this.rowBytes;\r\n                var pixBytes = this.pixBytes;\r\n\r\n                var predictor = this.stream.getByte();\r\n                var rawBytes = this.stream.getBytes(rowBytes);\r\n\r\n                var bufferLength = this.bufferLength;\r\n                var buffer = this.ensureBuffer(bufferLength + rowBytes);\r\n\r\n                var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\r\n                if (prevRow.length == 0)\r\n                    prevRow = new Uint8Array(rowBytes);\r\n\r\n                var j = bufferLength;\r\n                switch (predictor) {\r\n                    case 0:\r\n                        for (var i = 0; i < rowBytes; ++i)\r\n                            buffer[j++] = rawBytes[i];\r\n                        break;\r\n                    case 1:\r\n                        for (var i = 0; i < pixBytes; ++i)\r\n                            buffer[j++] = rawBytes[i];\r\n                        for (; i < rowBytes; ++i) {\r\n                            buffer[j] = (buffer[j - pixBytes] + rawBytes[i]) & 0xFF;\r\n                            j++;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        for (var i = 0; i < rowBytes; ++i)\r\n                            buffer[j++] = (prevRow[i] + rawBytes[i]) & 0xFF;\r\n                        break;\r\n                    case 3:\r\n                        for (var i = 0; i < pixBytes; ++i)\r\n                            buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\r\n                        for (; i < rowBytes; ++i) {\r\n                            buffer[j] = (((prevRow[i] + buffer[j - pixBytes]) >> 1) +\r\n                                rawBytes[i]) & 0xFF;\r\n                            j++;\r\n                        }\r\n                        break;\r\n                    case 4:\r\n                        // we need to save the up left pixels values. the simplest way\r\n                        // is to create a new buffer\r\n                        for (var i = 0; i < pixBytes; ++i) {\r\n                            var up = prevRow[i];\r\n                            var c = rawBytes[i];\r\n                            buffer[j++] = up + c;\r\n                        }\r\n                        for (; i < rowBytes; ++i) {\r\n                            var up = prevRow[i];\r\n                            var upLeft = prevRow[i - pixBytes];\r\n                            var left = buffer[j - pixBytes];\r\n                            var p = left + up - upLeft;\r\n\r\n                            var pa = p - left;\r\n                            if (pa < 0)\r\n                                pa = -pa;\r\n                            var pb = p - up;\r\n                            if (pb < 0)\r\n                                pb = -pb;\r\n                            var pc = p - upLeft;\r\n                            if (pc < 0)\r\n                                pc = -pc;\r\n\r\n                            var c = rawBytes[i];\r\n                            if (pa <= pb && pa <= pc)\r\n                                buffer[j++] = left + c;\r\n                            else if (pb <= pc)\r\n                                buffer[j++] = up + c;\r\n                            else\r\n                                buffer[j++] = upLeft + c;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        error('Unsupported predictor: ' + predictor);\r\n                }\r\n                this.bufferLength += rowBytes;\r\n        }\r\n    });\r\n\r\n    return streams.PredictorStream = PredictorStream;\r\n});\r\n\n\r\ndefine('skylark-io-streams/StreamsSequenceStream',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"./streams\",\r\n    \"./DecodeStream\"\r\n], function(skylark, langx, streams, DecodeStream) {\r\n\r\n    var StreamsSequenceStream = DecodeStream.inherit({\r\n        klassName : \"StreamsSequenceStream\",\r\n\r\n        init : function(streams) {\r\n            this.dict = stream.dict;\r\n            DecodeStream.prototype.init.call(this);          \r\n        },\r\n\r\n        readBlock : function() {\r\n            var streams = this.streams;\r\n            if (streams.length == 0) {\r\n                this.eof = true;\r\n                return;\r\n            }\r\n            var stream = streams.shift();\r\n            var chunk = stream.getBytes();\r\n            var bufferLength = this.bufferLength;\r\n            var newLength = bufferLength + chunk.length;\r\n            var buffer = this.ensureBuffer(newLength);\r\n            buffer.set(chunk, bufferLength);\r\n            this.bufferLength = newLength;\r\n        }\r\n    });\r\n\r\n    return streams.StreamsSequenceStream = StreamsSequenceStream;\r\n});\r\n\ndefine('skylark-io-streams/StringStream',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"./streams\",\r\n    \"./Stream\"\r\n], function(skylark, langx, streams, Stream) {\r\n\r\n    var StringStream = Stream.inherit({\r\n        klassName : \"StringStream\",\r\n\r\n        init : function(str) {\r\n            var length = str.length;\r\n            var bytes = new Uint8Array(length);\r\n            for (var n = 0; n < length; ++n)\r\n                bytes[n] = str.charCodeAt(n);\r\n            DecodeStream.prototype.init.call(this);          \r\n        }\r\n    });\r\n\r\n\r\n    return streams.StringStream = StringStream;\r\n\r\n});\r\n\ndefine('skylark-io-streams/main',[\r\n    \"./streams\",\r\n    \"./Ascii85Stream\",\r\n    \"./AsciiHexStream\",\r\n    \"./ChunkedStream\",\r\n    \"./DecodeStream\",\r\n    \"./DecryptStream\",\r\n    \"./FakeStream\",\r\n    \"./FlateStream\",\r\n    \"./LZWStream\",\r\n    \"./PredictorStream\",\r\n    \"./Stream\",\r\n    \"./StreamsSequenceStream\",\r\n    \"./StringStream\"\r\n], function(streams) {\r\n\r\n\treturn streams;\r\n});\ndefine('skylark-io-streams', ['skylark-io-streams/main'], function (main) { return main; });\n\ndefine('skylark-slax-runtime/main',[\r\n\t\"./slax\",\r\n\t\"./cache\",\r\n\t\"skylark-langx\",\r\n\t\"skylark-domx\",\r\n\t\"skylark-domx-files\",\r\n\t\"skylark-domx-images\",\r\n\t\"skylark-domx-colorpicker\",\r\n\t\"skylark-domx-gradienter\",\r\n\t\"skylark-jquery\",\r\n\t\"skylark-ajaxfy-spa\",\r\n\t\"skylark-data-entities\",\r\n\t\"skylark-io-streams\"\r\n],function(slax){\r\n\treturn slax;\r\n});\ndefine('skylark-slax-runtime', ['skylark-slax-runtime/main'], function (main) { return main; });\n\n"]}