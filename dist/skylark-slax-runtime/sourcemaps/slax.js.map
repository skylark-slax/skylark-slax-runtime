{"version":3,"sources":["slax.js"],"names":["define","skylark","objects","hoster","async","Xhr","eventer","_config","_rootUrl","_baseUrl","slax","prepare","config","p","slaxRoot","slaxApp","d","global","slaxConfig","scripts","document","getElementsByTagName","i","script","slaxDir","src","match","length","getAttribute","eval","undefined","mixin","Deferred","resolve","promise","get","then","slaxAppPath","apps","name","dir","start","initPage","cfg","runtime","require","boot","bootFunc","window","spa","_cfg","page","go","path","force","run","spaModule","_start","attach"],"mappings":";;;;;;;AAAAA,OAAO,CACN,mBACA,wBACA,uBACA,sBACA,uBACA,wBACC,SAASC,QAASC,QAASC,OAAQC,MAAOC,IAAKC,SAE7C,IAAIC,QAAU,GAIdC,SAAW,GACXC,SAAW,GAIPC,KAAO,CACPC,QAAU,SAASC,QACf,IAAIC,EAAEC,SAASC,QAmCPC,EACAH,EAhCR,GAHKD,OAAAA,QACQT,OAAOc,OAAOC,WAEvB,CAACN,OAID,IAHA,IAAIO,QAAUC,SAASC,qBAAqB,QAAQ,EAChDC,EAAI,EACJC,OAAQC,QAASC,IAAKC,MACpBJ,EAAIH,QAAQQ,QAEd,GADAJ,OAASJ,QAAQG,CAAC,KACdG,IAAMF,OAAOK,aAAa,KAAK,KAAOF,MAAQD,IAAIC,MAAM,6DAA6D,GAAG,CAExHF,QAAUE,MAAM,IAAM,IAGnBD,IAAMF,OAAOK,aAAa,kBAAkB,GAC3ChB,OAASiB,KAAK,MAAQJ,IAAM,KAAK,GAEjCX,SAAWS,OAAOK,aAAa,gBAAgB,EAC/BE,MAAZhB,WACAA,SAAWU,SAEfT,QAAUQ,OAAOK,aAAa,gBAAgB,GAAKL,OAAOK,aAAa,eAAe,GAI1F,KACJ,CA+BR,OA3BIhB,QACAV,QAAQ6B,MAAMxB,QAAQK,MAAM,EAC5BC,EAAIT,MAAM4B,SAASC,QAAQ,IAEvBjB,EAAI,IAAIZ,MAAM4B,SACdnB,EAAIG,EAAEkB,QACV7B,IAAI8B,IAAIrB,SAAW,mBAAmB,EAAEsB,KAAK,SAASxB,GAClD,GAAIG,QAAS,CAET,IADA,IAAIsB,EACKf,EAAE,EAAGA,EAAEV,EAAO0B,KAAKX,OAAOL,CAAC,GAC5BV,EAAO0B,KAAKhB,GAAGiB,MAAQxB,UACvBsB,EAAcvB,SAAWF,EAAO0B,KAAKhB,GAAGkB,KAGhDnC,IAAI8B,IAAIE,EAAY,WAAW,EAAED,KAAK,SAASxB,GAC3CV,QAAQ6B,MAAMxB,QAAQK,CAAM,EAC5BI,EAAEiB,QAAQ,CACd,CAAC,CACL,MACI/B,QAAQ6B,MAAMxB,QAAQK,CAAM,EAC5BI,EAAEiB,QAAQ,CAGlB,CAAC,GAIEpB,CACX,EAEA4B,MAAQ,WACJ,IAcQC,EAdJC,EAAMpC,QAMNoC,EAAIC,SACJC,QAAQjC,OAAO+B,EAAIC,OAAO,EAG1BD,EAAIG,MAEJC,EADeC,OAAOL,EAAIG,OACjBH,CAAG,GAERD,EAAW,SAASO,EAAKC,GAGzB,IAAIC,EAAOzC,KAAKyC,KAAOF,EAFvBC,EAAOA,GAAQP,CAEgB,EAE/BxC,OAAOc,OAAOmC,GAAM,SAASC,EAAMC,GAC/BH,EAAKC,GAAGC,EAAMC,CAAK,CACvB,EAEAH,EAAKxC,QAAQ,EAAEyB,KAAK,WAChBe,EAAKI,IAAI,CACb,CAAC,CACL,EACGZ,EAAIa,UACHX,QAAQ,CAACF,EAAIa,WAAY,SAASP,GAC3BA,EAAIQ,OACHR,EAAIQ,OAAO,EAAErB,KAAK,SAASc,GACvBR,EAASO,EAAKC,CAAI,CACtB,CAAC,EAEDR,EAASO,CAAG,CAEpB,CAAC,EAEDP,EAASzC,QAAQgD,GAAG,EAGhC,CACJ,EAMA,OAJAjD,OAAO,OAAO,GAAG,WACb,OAAOU,IACX,CAAC,EAEMT,QAAQyD,OAAO,OAAOhD,IAAI,CAErC,CAAC","file":"../slax.js","sourcesContent":["define([\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-objects\",\r\n\t\"skylark-langx-hoster\",\r\n\t\"skylark-langx-async\",\r\n\t\"skylark-net-http/Xhr\",\r\n\t\"skylark-domx-eventer\"\r\n],function(skylark, objects, hoster, async, Xhr, eventer){\r\n\r\n    var _config = {\r\n\r\n\r\n    },\r\n    _rootUrl = \"\",  //The root url of slax system\r\n    _baseUrl = \"\";  //the base url of slax page\r\n\r\n\r\n\r\n    var slax = {\r\n        prepare : function(config) {\r\n            var p,slaxRoot,slaxApp;\r\n            if (!config) {\r\n                config = hoster.global.slaxConfig;\r\n            }\r\n            if (!config) {\r\n                var scripts = document.getElementsByTagName(\"script\"),\r\n                    i = 0,\r\n                    script, slaxDir, src, match;\r\n                while(i < scripts.length){\r\n                    script = scripts[i++];\r\n                    if((src = script.getAttribute(\"src\")) && (match = src.match(/(((.*)\\/)|^)skylark-slax-runtime([0-9A-Za-z\\-]*)\\.js(\\W|$)/i))){\r\n                        // sniff slaxDir and baseUrl\r\n                        slaxDir = match[3] || \"\";\r\n\r\n                        // sniff configuration on attribute in script element\r\n                        if(src = script.getAttribute(\"data-slax-config\") ){\r\n                            config = eval(\"({ \" + src + \" })\");\r\n                        } else {\r\n                            slaxRoot = script.getAttribute(\"data-slax-root\");\r\n                            if (slaxRoot == undefined) {\r\n                                slaxRoot = slaxDir;\r\n                            }\r\n                            slaxApp = script.getAttribute(\"data-slax-page\") || script.getAttribute(\"data-slax-app\");\r\n                        }\r\n\r\n\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (config) {\r\n                objects.mixin(_config,config);\r\n                p = async.Deferred.resolve()\r\n            } else {\r\n                var d = new async.Deferred(),\r\n                    p = d.promise;\r\n                Xhr.get(slaxRoot + \"/slax-config.json\").then(function(config){\r\n                    if (slaxApp) {\r\n                        var slaxAppPath;\r\n                        for (var i=0; i<config.apps.length;i++) {\r\n                            if (config.apps[i].name == slaxApp) {\r\n                                slaxAppPath = slaxRoot + config.apps[i].dir;\r\n                            } \r\n                        }\r\n                        Xhr.get(slaxAppPath+\"/spa.json\").then(function(config){\r\n                            objects.mixin(_config,config);\r\n                            d.resolve();\r\n                        });\r\n                    } else {\r\n                        objects.mixin(_config,config);\r\n                        d.resolve();\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            return p;\r\n        },\r\n\r\n        start : function() {\r\n            var cfg = _config;\r\n\r\n            //if (cfg.contextPath) {\r\n            //  _cfg.baseUrl = cfg.contextPath;\r\n            //}\r\n\r\n            if (cfg.runtime) {\r\n                require.config(cfg.runtime);\r\n            }\r\n\r\n            if (cfg.boot) {\r\n                let bootFunc = window[cfg.boot];\r\n                bootFunc(cfg);\r\n            } else {\r\n                var initPage = function(spa, _cfg) {\r\n                    _cfg = _cfg || cfg;\r\n      \r\n                    var page = slax.page = spa(_cfg);\r\n\r\n                    hoster.global.go =  function(path, force) {\r\n                        page.go(path, force);\r\n                    };\r\n\r\n                    page.prepare().then(function(){\r\n                        page.run();\r\n                    });\r\n                };\r\n                if(cfg.spaModule) {\r\n                    require([cfg.spaModule], function(spa) {\r\n                        if(spa._start) {\r\n                            spa._start().then(function(_cfg){\r\n                                initPage(spa, _cfg);\r\n                            });\r\n                        } else {\r\n                            initPage(spa);\r\n                        }\r\n                    });\r\n                } else {\r\n                    initPage(skylark.spa);\r\n                }                \r\n            }\r\n        }\r\n    };\r\n\r\n    define(\"slax\",[],function(){\r\n        return slax;\r\n    });\r\n\r\n    return skylark.attach(\"slax\",slax);\r\n\r\n});"]}