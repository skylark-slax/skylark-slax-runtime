{"version":3,"sources":["skylark-domx-plugins-panels.js"],"names":["define","skylark","langx","browser","eventer","noder","geom","$","plugins","panels","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isKey","keyCode","e","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","mixin","cleanInput","questionableMarkup","test","html","text","isShiftHeld","shiftKey","Resizable","Panel","Plugin","inherit","klassName","pluginName","options","_construct","elm","this","overrided","_velm","elmx","resizable","_resizable","handle","border","directions","top","left","right","bottom","topLeft","topRight","bottomLeft","bottomRight","classes","all","constraints","minWidth","minHeight","started","isResizing","moving","stopped","register","Collapse","Collapsible","toggler","selector","body","prototype","call","_expanded","$toggle","find","$body","on","toggle","expand","emit","plugin","show","collapse","hide","full","unfull","toogleFull","close","Accordion","panel","template","forEach","panelEl","Pane","group","push","_panels","get","addPanel","remove","expandAll","collapseAll","active","Movable","floatings","Floating","selectors","headerPane","contentPane","footerPane","titlebar","buttons","fullscreen","maximize","minimize","fixedContent","initMaximized","movable","dragHandle","dragCancel","$pane","_elm","isOpened","isMaximized","_movable","starting","elemCancel","target","closest","length","$close","$maximize","$minimize","$fullscreen","off","_keydown","trigger","idx","indexOf","splice","focus","$W","window","$D","document","removeClass","initModalLeft","width","modalWidth","scrollLeft","initModalTop","height","modalHeight","scrollTop","css","modalData","offset","addClass","resized","keyboard","which","charCode","ctrlKey","metaKey","altKey","i","Pagination","tagName","firstNavi","prevNavi","nextNavi","lastNavi","numericNavi","numericTxt","totalPages","maxButtonsVisible","currentPage","state","Number","$first","$prev","$last","$next","$numeric","self","checkCanAction","$elm","is","click","ret","numeric","pageNo","parseInt","_currentPage","_totalPages","_refresh","updates","totalPageNoBtns","Math","min","begin","end","count","size","visibles","filter","$btn","eq","changePageNoBtns","changeLabeldBtns","v","undefined","popups","backdrop","Dropdown","$el","$element","keydown","$this","$parent","getParent","isActive","hasClass","clearMenus","documentElement","createElement","insertAfter","relatedTarget","create","isDefaultPrevented","attr","toggleClass","preventDefault","stopPropagation","$items","index","replace","parent","each","type","contains","TabButton","TabStrip","header","tab","content","tabpane","droptabs","dropdown","dropdownMenu","dropdownTabs","dropdownCaret","visibleTabs","auto","pullDropdownRight","$header","$tabs","$content","$tabpanes","tabEl","arrange","dropdownTabsSelector","visibleTabsSelector","$container","dropdownLabel","clone","$dropdownTabs","$visibleTabs","tempElem","hiddenElementWidth","availableSpace","outerWidth","visibleTabsWidth","x","reverse","prependTo","first","appendTo","detach","activateTab","isNumber","addTab","removeTab","Toolbar","toolbarFloat","toolbarHidden","toolbarFloatOffset","separator","toolbarHeight","_this","opts","wrapper","list","editor","editable","util","reflow","os","mobile","position","outerHeight","placeholderEl","addToolItem","itemWidget","addSeparator","Wizard","disablePreviousStep","selectedItem","step","currentStep","numSteps","$prevBtn","$nextBtn","kids","children","nextText","trim","append","steps","console","warn","proxy","previous","next","stepclicked","destroy","outerHTML","addSteps","l","$startPane","$startStep","$step","items","slice","arguments","$steps","$stepContent","Array","label","badge","pane","before","syncSteps","setState","removeSteps","howMany","$start","action","prev","item","canMovePrev","isFirstStep","isLastStep","last","lastText","prevSelector","$prevSteps","currentSelector","$currentStep","totalWidth","containerWidth","newMargin","initialized","li","currentTarget","evt","isNaN","direction","firstFormField","retVal","stepname","main"],"mappings":"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","file":"../skylark-domx-plugins-panels.js","sourcesContent":["define('skylark-domx-plugins-panels/panels',[\n  \"skylark-langx/skylark\",\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base/plugins\"\n],function(skylark,langx,browser,eventer,noder,geom,$,plugins){\n\tvar panels = {};\n\n\tvar CONST = {\n\t\tBACKSPACE_KEYCODE: 8,\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\n\t\tDELETE_KEYCODE: 46,\n\t\tDOWN_ARROW_KEYCODE: 40,\n\t\tENTER_KEYCODE: 13,\n\t\tTAB_KEYCODE: 9,\n\t\tUP_ARROW_KEYCODE: 38\n\t};\n\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\n\n\tvar isKey = function isKey (keyCode) {\n\t\treturn function compareKeycodes (e) {\n\t\t\treturn e.keyCode === keyCode;\n\t\t};\n\t};\n\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\n\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\n\t/*\n\t * to prevent double encoding decodes content in loop until content is encoding free\n\t */\n\tvar cleanInput = function cleanInput (questionableMarkup) {\n\t\t// check for encoding and decode\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\n\t\t}\n\n\t\t// string completely decoded now encode it\n\t\treturn $('<i>').text(questionableMarkup).html();\n\t};\n\n\tlangx.mixin(panels, {\n\t\tCONST: CONST,\n\t\tcleanInput: cleanInput,\n\t\tisBackspaceKey: isBackspaceKey,\n\t\tisDeleteKey: isDeleteKey,\n\t\tisShiftHeld: isShiftHeld,\n\t\tisTabKey: isTabKey,\n\t\tisUpArrow: isUpArrow,\n\t\tisDownArrow: isDownArrow\n\t});\n\n\treturn plugins.panels = panels;\n\n});\n\ndefine('skylark-domx-plugins-panels/panel',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"skylark-domx-plugins-interact/resizable\",\r\n  \"./panels\",\r\n],function(langx,browser,eventer,noder,geom,$,plugins,Resizable,panels){\r\n\r\n  var Panel = plugins.Plugin.inherit({\r\n    klassName : \"Panel\",\r\n\r\n    pluginName : \"lark.panels.panel\",\r\n\r\n    options : {\r\n      /*\r\n      resizable : {\r\n          minWidth: 320,\r\n          minHeight: 320,\r\n          border : {\r\n              classes :  {\r\n                  all : \"resizable-handle\",\r\n                  top : \"resizable-handle-n\",\r\n                  left: \"resizable-handle-w\",\r\n                  right: \"resizable-handle-e\",\r\n                  bottom: \"resizable-handle-s\", \r\n                  topLeft : \"resizable-handle-nw\", \r\n                  topRight : \"resizable-handle-ne\",\r\n                  bottomLeft : \"resizable-handle-sw\",             \r\n                  bottomRight : \"resizable-handle-se\"     \r\n              }\r\n          }\r\n      }\r\n      */\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      this._velm = this.elmx();\r\n\r\n      if (this.options.resizable) {\r\n\r\n          this._resizable = new Resizable(elm,{\r\n              handle : {\r\n                  border : {\r\n                      directions : {\r\n                          top: true, //n\r\n                          left: true, //w\r\n                          right: true, //e\r\n                          bottom: true, //s\r\n                          topLeft : true, // nw\r\n                          topRight : true, // ne\r\n                          bottomLeft : true, // sw\r\n                          bottomRight : true // se                         \r\n                      },\r\n                      classes : {\r\n                          all : this.options.resizable.border.classes.all,\r\n                          top : this.options.resizable.border.classes.top,\r\n                          left: this.options.resizable.border.classes.left,\r\n                          right: this.options.resizable.border.classes.right,\r\n                          bottom: this.options.resizable.border.classes.bottom, \r\n                          topLeft : this.options.resizable.border.classes.topLeft, \r\n                          topRight : this.options.resizable.border.classes.topRight,\r\n                          bottomLeft : this.options.resizable.border.classes.bottomLeft,             \r\n                          bottomRight : this.options.resizable.border.classes.bottomRight                        \r\n                      }                        \r\n                  }\r\n              },\r\n              constraints : {\r\n                  minWidth : this.options.resizable.minWidth,\r\n                  minHeight : this.options.resizable.minHeight\r\n              },\r\n              started : () => {\r\n                  this.isResizing = true;\r\n              },\r\n              moving : function(e) {\r\n                  /*\r\n                  const imageWidth = $(image).width();\r\n                  const imageHeight = $(image).height();\r\n                  const stageWidth = $(stage).width();\r\n                  const stageHeight = $(stage).height();\r\n                  const left = (stageWidth - imageWidth) /2;\r\n                  const top = (stageHeight- imageHeight) /2;\r\n                  $(image).css({\r\n                      left,\r\n                      top\r\n                  });\r\n                  */\r\n              },\r\n              stopped : () => {\r\n                  this.isResizing = false;\r\n              }\r\n          });\r\n\r\n      }\r\n    },\r\n\r\n\r\n  });\r\n\r\n  plugins.register(Panel);\r\n\r\n  return Panel;\r\n\r\n});\ndefine('skylark-domx-plugins-panels/collapsible',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"skylark-domx-plugins-toggles/collapse\",\n  \"./panels\",\n  \"./panel\"\n],function(langx,browser,eventer,noder,geom,$,plugins,Collapse,panels,Panel){\n\n  var Collapsible = Panel.inherit({\n    klassName : \"Collapsible\",\n\n    pluginName : \"lark.panels.collapsible\",\n\n    options : {\n      toggler : {\n        selector : \".panel-heading [data-toggle=\\\"collapse\\\"]\"\n      },\n\n      body : {\n        selector : \".panel-body\"\n      }\n    },\n\n    _construct : function(elm,options) {\n      Panel.prototype._construct.call(this,elm,options);\n      \n      this._expanded = false;\n      this.$toggle = this._velm.find(this.options.toggler.selector);\n      this.$body = this._velm.find(this.options.body.selector);\n      this.$toggle.on('click.panel',(e) => {\n        this.toggle();\n      });\n\n    },\n\n    expand : function() {\n      // expand this panel\n      this.emit(\"expanding\");\n      this.$body.plugin(Collapse.prototype.pluginName).show();\n      this._expanded = true;\n      this.emit(\"expanded\");\n    },\n\n    collapse : function() {\n      // collapse this panel\n      this.emit(\"collapsing\");\n      this.$body.plugin(Collapse.prototype.pluginName).hide();\n      this._expanded = false;\n      this.emit(\"collapsed\");\n    },\n\n    toggle : function() {\n      // toggle this panel\n      if (this._expanded) {\n        this.collapse();\n      } else {\n        this.expand();\n      }\n    },\n\n    full : function() {\n\n    },\n\n    unfull : function() {\n\n    },\n\n    toogleFull : function() {\n\n    },\n    \n    close: function () {\n    }\n\n\n  });\n\n  plugins.register(Collapsible);\n\n  return panels.Collapsible = Collapsible;\n\n});\n define('skylark-domx-plugins-panels/accordion',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-query\",\n  \"skylark-domx-velm\",\n  \"skylark-domx-plugins-base\",\n  \"./panels\",\n  \"./panel\",\n  \"./collapsible\"\n],function(langx,$,elmx,plugins,panels,Panel,Collapsible){\n\n  var Accordion = Panel.inherit({\n    klassName : \"Accordion\",\n\n    pluginName : \"lark.panels.accordion\",\n\n    options : {\n      panel: {\n        selector : \"> .panel\",\n        template : null,\n      }\n    },\n\n     _construct : function(elm,options) {\n      Panel.prototype._construct.call(this,elm,options);\n      var panels = [];\n      this._velm.$(this.options.panel.selector).forEach((panelEl) => {\n        var panel = new Accordion.Pane(panelEl,{\n          group : this\n        });\n        panels.push(panel);\n      });\n      this._panels = panels;\n    },\n\n    panels : {\n      get : function() {\n\n      }\n    },\n\n\n    addPanel : function() {\n\n    },\n\n    /**\n     * Removes a group pane.\n     *\n     * @method remove\n     * @return {Accordion} The current widget.\n     */\n    remove : function() {\n\n    },\n\n    /**\n     * Expands a group pane.\n     *\n     * @method remove\n     * @return {Accordion} The current widget.\n     */\n    expand : function() {\n      // expand a panel\n\n    },\n\n    /**\n     * Expands all group panes.\n     *\n     * @method expandAll\n     * @return {Accordion} The current widget.\n     */\n    expandAll : function() {\n      // expand a panel\n\n    },\n\n    /**\n     * Collapse a group pane.\n     *\n     * @method collapse\n     * @return {Accordion} The current widget.\n     */\n    collapse : function() {\n\n    },\n\n    /**\n     * Collapses all group pane.\n     *\n     * @method collapseAll\n     * @return {Accordion} The current widget.\n     */\n    collapseAll : function() {\n\n    }\n  });\n\n  Accordion.Pane = Collapsible.inherit({\n    klassName : \"AccordionPane\",\n\n    expand : function() {\n      if (this.options.group.active) {\n        this.options.group.active.collapse();\n      }\n      this.overrided();\n      this.options.group.active = this;\n    },\n\n    collapse : function() {\n      this.overrided();\n      this.options.group.active = null;\n    },\n\n    toggle : function() {\n      this.overrided();\n    },\n\n    remove : function() {\n      this.overrided();\n    }\n\n  });\n\n  plugins.register(Accordion);\n\n  return panels.Accordion = Accordion;\n});\n\ndefine('skylark-domx-plugins-panels/floating',[\r\n    \"skylark-domx/noder\",\r\n    \"skylark-domx/eventer\",\r\n    \"skylark-domx/query\",\r\n    \"skylark-domx-plugins-base\",\r\n    \"skylark-domx-plugins-interact/movable\",\r\n    \"./panels\",\r\n    \"./panel\"\r\n], function (noder,eventer,$,plugins,Movable, panels,Panel) {\r\n    'use strict';\r\n\r\n    var floatings = [];\r\n\r\n    var Floating = Panel.inherit({\r\n        klassName : \"Floating\",\r\n\r\n        pluginName : \"lark.panels.floating\",\r\n\r\n        options : {\r\n            selectors : {\r\n                headerPane  : \"\",\r\n                contentPane : \"\",\r\n                footerPane  : \"\",\r\n                titlebar : \"\",\r\n                buttons : {\r\n                    \"fullscreen\" : \".button-fullscreen\",\r\n                    \"maximize\" : \".button-maximize\",\r\n                    \"minimize\" : \".button-minimize\",     \r\n                    \"close\" : \".button-close\"\r\n                }\r\n            },\r\n\r\n            classes : {\r\n                \"maximize\" : \"maximize\"\r\n            },\r\n\r\n            fixedContent: true,\r\n            initMaximized: false,\r\n\r\n            movable : {\r\n                dragHandle: false,\r\n                dragCancel: null\r\n            }\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n            Panel.prototype._construct.call(this,elm,options);\r\n            this.$pane = $(this._elm);\r\n\r\n            this.isOpened = false;\r\n            this.isMaximized = false;\r\n\r\n            if (this.options.movable) {\r\n                this._movable = new Movable(elm,{\r\n                    handle : this.options.movable.dragHandle,\r\n                    starting : (e) => {\r\n                        const   dragCancel = this.options.movable.dragCancel, \r\n                                elemCancel = $(e.target).closest(dragCancel);\r\n                        if (elemCancel.length) {\r\n                            return false;\r\n                        }\r\n                        if (this.isResizing || this.isMaximized) {\r\n                            return false;\r\n                        }\r\n\r\n                        return true;\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            this.$close = this._velm.$(this.options.selectors.buttons.close);\r\n            this.$maximize = this._velm.$(this.options.selectors.buttons.maximize);\r\n            this.$minimize = this._velm.$(this.options.selectors.buttons.minimize);\r\n            this.$fullscreen = this._velm.$(this.options.selectors.buttons.fullscreen);\r\n\r\n\r\n            this.$close.off(\"click.window\").on(\"click.window\", e => {\r\n                this.close();\r\n            });\r\n            this.$fullscreen.off(\"click.window\").on(\"click.window\", () => {\r\n                this.fullscreen();\r\n            });\r\n            this.$maximize.off(\"click.window\").on(\"click.window\", () => {\r\n                this.maximize();\r\n            });\r\n            this.$pane.off(\"keydown.window\").on(\"keydown.window\", e => {\r\n                this._keydown(e);\r\n            });\r\n\r\n            floatings.push(this);\r\n        },\r\n        close: function() {\r\n            this.trigger('closing', this);\r\n            this.$pane.remove();\r\n            this.isOpened = false;\r\n            this.isMaximized = false;\r\n\r\n            ///if (!$(Constants.CLASS_NS + '-modal').length) {\r\n            ///    if (this.options.fixedContent) {\r\n            ///        $('html').css({\r\n            ///            overflow: '',\r\n            ///            'padding-right': ''\r\n            ///        });\r\n            ///    }\r\n                ///if (this.options.multiInstances) {\r\n                ///    zIndex = this.options.zIndex;\r\n                ///}\r\n            ///    eventer.off(window,\"resize.window\");\r\n            var idx = floatings.indexOf(this);\r\n            if (idx>-1) {\r\n                floatings.splice(idx,1);\r\n            }\r\n            this.trigger('closed', this);\r\n        },\r\n\r\n        maximize: function() {\r\n            this.$pane.get(0).focus();\r\n            if (!this.isMaximized) {\r\n                this.modalData = {\r\n                    width: this.$pane.width(),\r\n                    height: this.$pane.height(),\r\n                    left: this.$pane.offset().left,\r\n                    top: this.$pane.offset().top\r\n                };\r\n                this.$pane.addClass(this.options.classes.maximize);\r\n                this.$pane.css({\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    left: 0,\r\n                    top: 0\r\n                });\r\n                this.isMaximized = true;\r\n            } else {\r\n                let $W = $(window),$D = $(document);\r\n                this.$pane.removeClass(this.options.classes.maximize);\r\n                const initModalLeft = ($W.width() - this.options.modalWidth) / 2 + $D.scrollLeft();\r\n                const initModalTop = ($W.height() - this.options.modalHeight) / 2 + $D.scrollTop();\r\n                this.$pane.css({\r\n                    width: this.modalData.width ? this.modalData.width : this.options.modalWidth,\r\n                    height: this.modalData.height ? this.modalData.height : this.options.modalHeight,\r\n                    left: this.modalData.left ? this.modalData.left : initModalLeft,\r\n                    top: this.modalData.top ? this.modalData.top : initModalTop\r\n                });\r\n                this.isMaximized = false;\r\n            }\r\n\r\n            eventer.resized(this._elm);\r\n        },\r\n        fullscreen: function() {\r\n            this.$pane.get(0).focus();\r\n            noder.fullscreen(this.$pane[0]);\r\n        },\r\n        _keydown: function(e) {\r\n            if (!this.options.keyboard) {\r\n                return false;\r\n            }\r\n            const keyCode = e.keyCode || e.which || e.charCode;\r\n            const ctrlKey = e.ctrlKey || e.metaKey;\r\n            const altKey = e.altKey || e.metaKey;\r\n            switch (keyCode) {\r\n\r\n                // Q\r\n                case 81:\r\n                    this.close();\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n    eventer.on(window,\"resize.window\", ()=>{\r\n        for (let i=0; i<floatings.length; i++ ) {\r\n            eventer.resized(floatings[i]._elm);\r\n        }\r\n    });\r\n\r\n    return panels.Floating = Floating;\r\n});\ndefine('skylark-domx-plugins-panels/pagination',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"./panels\",\n  \"./panel\"\n],function(langx,browser,eventer,noder,geom,$,plugins,panels,Panel){\n\n  'use strict';\n\n  var Pagination = Panel.inherit({\n      klassName : \"Pagination\",\n\n      pluginName : \"lark.panels.pagination\",\n\n      options : {\n          tagName : \"ul\",\n          css : \"\",\n          selectors : {\n              firstNavi : \"li[aria-label='first']\",\n              prevNavi : \"li[aria-label='prev']\",\n              nextNavi : \"li[aria-label='next']\",\n              lastNavi : \"li[aria-label='last']\",\n              numericNavi : \"li:not([aria-label])\",\n              numericTxt  : \"a\"\n          },\n          totalPages: 7,\n          maxButtonsVisible: 5,\n          currentPage: 1     \n      },\n\n      state : {\n          totalPages : Number,\n          currentPage : Number\n      },\n\n      _construct : function(elm,options) {\n        Panel.prototype._construct.call(this,elm,options);\n\n        this.$first = this._velm.$(this.options.selectors.firstNavi);\n        this.$prev = this._velm.$(this.options.selectors.prevNavi);\n        this.$last = this._velm.$(this.options.selectors.lastNavi);\n        this.$next = this._velm.$(this.options.selectors.nextNavi);\n        this.$numeric = this._velm.$(this.options.selectors.numericNavi);\n\n        var self = this;\n\n        function checkCanAction(elm) {\n          var $elm = $(elm);\n          if ($elm.is(\".disabled,.active\")) {\n            return false;\n          } else {\n            return $elm;\n          }\n        }\n\n        this.$first.click(function(){\n          if (!checkCanAction(this)) {\n            return;\n          }\n          self.currentPage(1);\n        });\n\n        this.$prev.click(function(){\n          if (!checkCanAction(this)) {\n            return;\n          }\n          self.currentPage(self.currentPage()-1);\n        });\n\n        this.$last.click(function(){\n          if (!checkCanAction(this)) {\n            return;\n          }\n          self.currentPage(self.totalPages());\n        });\n\n        this.$next.click(function(){\n          if (!checkCanAction(this)) {\n            return;\n          }\n          self.currentPage(self.currentPage()+1);\n        });\n\n        this.$numeric.click(function(){\n          var ret = checkCanAction(this)\n          if (!ret) {\n            return;\n          }\n          var numeric = ret.find(self.options.selectors.numericTxt).text(),\n              pageNo = parseInt(numeric);\n          self.currentPage(pageNo);\n\n        });\n\n        this._currentPage = this.options.currentPage;\n        this._totalPages = this.options.totalPages;\n\n        this._refresh({\n          currentPage : true,\n          totalPages : true\n        });\n      },\n\n      _refresh: function (updates) {\n        var self = this;\n\n        function changePageNoBtns(currentPage,totalPages) {\n\n          // Create the numeric buttons.\n          // Variable of number control in the buttons.\n          var totalPageNoBtns = Math.min(totalPages, self.options.maxButtonsVisible);\n          var begin = 1;\n          var end = begin + totalPageNoBtns - 1;\n\n          /*\n           * Align the values in the begin and end variables if the user has the\n           * possibility that select a page that doens't appear in the paginador.\n           * e.g currentPage = 1, and user go to the 20 page.\n           */\n          while ((currentPage < begin) || (currentPage > end)) {\n            if (currentPage > end) {\n               begin += totalPageNoBtns;\n               end += totalPageNoBtns;\n\n               if (end > totalPages) {\n                 begin = begin - (end - totalPages);\n                 end = totalPages;\n               }\n             } else {\n               begin -= totalPageNoBtns;\n               end -= totalPageNoBtns;\n\n               if (begin < 0) {\n                 end = end + (begin + totalPageNoBtns);\n                 begin = 1;\n               }\n             }\n          }\n         /*\n          * Verify if the user clicks in the last page show by paginator.\n          * If yes, the paginator advances.\n          */\n          if ((currentPage === end) && (totalPages != 1)) {\n            begin = currentPage - 1;\n            end = begin + totalPageNoBtns - 1;\n\n            if (end >= totalPages) {\n              begin = begin - (end - (totalPages));\n              end = totalPages;\n            }\n          }\n\n          /*\n           * Verify it the user clicks in the first page show by paginator.\n           * If yes, the paginator retrogress\n           */\n           if ((begin === currentPage) && (totalPages != 1)) {\n             if (currentPage != 1) {\n               end = currentPage + 1;\n               begin = end - (totalPageNoBtns - 1);\n             }\n           }\n\n           var count = self.$numeric.size(),\n               visibles = end-begin + 1,\n               i = 0;\n\n           self.$numeric.filter(\".active\").removeClass(\"active\");\n           while (i<visibles) {\n             var pageNo = i + begin,\n                 $btn = self.$numeric.eq(i);\n             $btn.find(self.options.selectors.numericTxt).text(i+begin).show();\n             if (pageNo == currentPage) {\n              $btn.addClass(\"active\");\n             }\n             i++;\n           }\n           while (i<count) {\n             self.$numeric.eq(i).find(self.options.selectors.numericTxt).text(i+begin).hide();\n             i++;\n           }\n\n\n        }\n\n        function changeLabeldBtns(currentPage,totalPages) {\n          if (currentPage < 1) {\n            throw('Page can\\'t be less than 1');\n          } else if (currentPage > totalPages) {\n            throw('Page is bigger than total pages');\n          }\n\n          if (totalPages < 1) {\n            throw('Total Pages can\\'t be less than 1');\n          }\n\n          if (currentPage == 1 ) {\n            self.$first.addClass(\"disabled\");\n            self.$prev.addClass(\"disabled\");\n          } else {\n            self.$first.removeClass(\"disabled\");\n            self.$prev.removeClass(\"disabled\");\n          }\n\n          if (currentPage == totalPages ) {\n            self.$last.addClass(\"disabled\");\n            self.$next.addClass(\"disabled\");\n          } else {\n            self.$last.removeClass(\"disabled\");\n            self.$next.removeClass(\"disabled\");\n          }\n        }\n\n        if (updates.currentPage || updates.totalPages) {\n          var currentPage = self.currentPage(),\n              totalPages = self.totalPages();\n\n          changePageNoBtns(currentPage,totalPages);\n          changeLabeldBtns(currentPage,totalPages);\n        }\n\n      },\n\n      currentPage : function(v) {\n        if (v !== undefined) {\n          this._currentPage = v;\n          this._refresh({\n            currentPage : true\n          });            \n          return this;\n        } else {\n          return this._currentPage;\n        }\n      },\n\n      totalPages : function(v) {\n        if (v !== undefined) {\n          this._totalPages = v;\n          this._refresh({\n            totalPages : true\n          });\n          return this;\n        } else {\n          return this._totalPages;\n        }\n      }\n  });\n\n  plugins.register(Pagination);\n\n\n  return panels.Pagination = Pagination;\n});\ndefine('skylark-domx-plugins-popups/Dropdown',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"./popups\"\n],function(langx,browser,eventer,noder,geom,$,plugins,popups){\n\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop';\n  var toggle   = '[data-toggle=\"dropdown\"]';\n\n  var Dropdown = plugins.Plugin.inherit({\n    klassName: \"Dropdown\",\n\n    pluginName : \"lark.popups.dropdown\",\n\n    options : {\n      \"selectors\" : {\n        \"toggler\" : '[data-toggle=\"dropdown\"],.dropdown-menu'\n      }\n\n    },\n\n    _construct : function(elm,options) {\n      this.overrided(elm,options);\n\n      var $el = this.$element = $(this._elm);\n      $el.on('click.dropdown', this.toggle);\n      $el.on('keydown.dropdown', this.options.selectors.toggler,this.keydown);\n    },\n\n    toggle : function (e) {\n      var $this = $(this)\n\n      if ($this.is('.disabled, :disabled')) {\n        return;\n      }\n\n      var $parent  = getParent($this)\n      var isActive = $parent.hasClass('open');\n\n      clearMenus()\n\n      if (!isActive) {\n        if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n          // if mobile we use a backdrop because click events don't delegate\n          $(document.createElement('div'))\n            .addClass('dropdown-backdrop')\n            .insertAfter($(this))\n            .on('click', clearMenus)\n        }\n\n        var relatedTarget = { relatedTarget: this }\n        $parent.trigger(e = eventer.create('show.dropdown', relatedTarget))\n\n        if (e.isDefaultPrevented()) {\n          return;\n        }\n\n        $this\n          .trigger('focus')\n          .attr('aria-expanded', 'true')\n\n        $parent\n          .toggleClass('open')\n          .trigger(eventer.create('shown.dropdown', relatedTarget))\n      }\n\n      return false\n    },\n\n    keydown : function (e) {\n      if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) {\n        return;\n      }\n\n      var $this = $(this);\n\n      e.preventDefault()\n      e.stopPropagation()\n\n      if ($this.is('.disabled, :disabled')) {\n        return;\n      }\n\n      var $parent  = getParent($this)\n      var isActive = $parent.hasClass('open')\n\n      if (!isActive && e.which != 27 || isActive && e.which == 27) {\n        if (e.which == 27) $parent.find(toggle).trigger('focus')\n        return $this.trigger('click')\n      }\n\n      var desc = ' li:not(.disabled):visible a'\n      var $items = $parent.find('.dropdown-menu' + desc)\n\n      if (!$items.length) return\n\n      var index = $items.index(e.target)\n\n      if (e.which == 38 && index > 0)                 index--         // up\n      if (e.which == 40 && index < $items.length - 1) index++         // down\n      if (!~index)                                    index = 0\n\n      $items.eq(index).trigger('focus');\n    }\n\n  });\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector);\n\n    return $parent && $parent.length ? $parent : $this.parent();\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && noder.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = eventer.create('hide.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger(eventer.create('hidden.dropdown', relatedTarget))\n    })\n  }\n\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n  $(document)\n    .on('click.dropdown.data-api', clearMenus)\n    .on('click.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() });\n\n  plugins.register(Dropdown);\n\n  return popups.Dropdown = Dropdown;\n\n});\n\ndefine('skylark-domx-plugins-panels/tabstrip',[\n    \"skylark-langx/langx\",\n    \"skylark-domx-browser\",\n    \"skylark-domx-eventer\",\n    \"skylark-domx-noder\",\n    \"skylark-domx-geom\",\n    \"skylark-domx-query\",\n    \"skylark-domx-plugins-base\",\n    \"skylark-domx-plugins-popups/Dropdown\",\n    \"skylark-domx-plugins-toggles/tab\",\n    \"./panels\",\n    \"./panel\"\n], function(langx, browser, eventer, noder, geom,  $, plugins,Dropdown, TabButton,panels,Panel) {\n\n    var TabStrip = Panel.inherit({\n        klassName : \"TabStrip\",\n        pluginName : \"lark.panels.tabstrip\",\n\n        options : {\n          selectors : {\n            header : \".nav-tabs\",\n            tab : \"[data-toggle=\\\"tab\\\"]\",\n            content : \".tab-content\",\n            tabpane : \".tab-pane\"\n          },\n\n          droptabs : {\n            selectors : {\n              dropdown : \"li.droptabs\",\n              dropdownMenu    : \"ul.dropdown-menu\",\n              dropdownTabs    : \"li\",\n              dropdownCaret   : \"b.caret\",\n              visibleTabs     : \">li:not(.dropdown)\",\n            },\n            auto              : true,\n            pullDropdownRight : true,\n\n\n          }\n        },\n\n     _construct : function(elm,options) {\n        Panel.prototype._construct.call(this,elm,options);\n\n        this.$header = this._velm.$(this.options.selectors.header); \n        this.$tabs = this.$header.find(this.options.selectors.tab);\n        this.$content = this._velm.$(this.options.selectors.content);\n        this.$tabpanes = this.$content.find(this.options.selectors.tabpane);\n\n        this.$header.find('[data-toggle=\"dropdown\"]').plugin(Dropdown.prototype.pluginName);\n\n        var self = this;\n        this.$tabs.each(function(idx,tabEl){\n          $(tabEl).plugin(TabButton.prototype.pluginName, {\n            target : self.$tabpanes[idx]\n          });\n        });\n\n      },\n\n      arrange : function () {\n\n        var dropdownTabsSelector = this.options.droptabs.selectors.dropdownTabs,\n            visibleTabsSelector = this.options.droptabs.selectors.visibleTabs;\n\n            $container = this.$header;\n        var dropdown = $container.find(this.options.droptabs.selectors.dropdown);\n        var dropdownMenu = dropdown.find(this.options.droptabs.selectors.dropdownMenu);\n        var dropdownLabel = $('>a', dropdown).clone();\n        var dropdownCaret = $(this.options.droptabs.selectors.dropdownCaret, dropdown);\n\n        // We only want the default label, strip the caret out\n        $(this.options.droptabs.selectors.dropdownCaret, dropdownLabel).remove();\n\n        if (this.options.droptabs.pullDropdownRight) {\n          $(dropdown).addClass('pull-right');\n        }\n\n        var $dropdownTabs = function () {\n          return $(dropdownTabsSelector, dropdownMenu);\n        }\n\n        var $visibleTabs = function () {\n          return $(visibleTabsSelector, $container);\n        }\n\n        function getFirstHiddenElementWidth() {\n          var tempElem=$dropdownTabs().first().clone().appendTo($container).css(\"position\",\"fixed\");\n          var hiddenElementWidth = $(tempElem).outerWidth();\n          $(tempElem).remove();\n          return hiddenElementWidth;\n        }\n\n        function getHiddenElementWidth(elem) {\n          var tempElem=$(elem).clone().appendTo($container).css(\"position\",\"fixed\");\n          var hiddenElementWidth = $(tempElem).outerWidth();\n          $(tempElem).remove();\n          return hiddenElementWidth;\n        }\n\n        function getDropdownLabel() {\n          var labelText = 'Dropdown';\n          if ($(dropdown).hasClass('active')) {\n            labelText = $('>li.active>a', dropdownMenu).html();\n          } else if (dropdownLabel.html().length > 0) {\n            labelText = dropdownLabel.html();\n          }\n\n          labelText = $.trim(labelText);\n\n          if (labelText.length > 10) {\n            labelText = labelText.substring(0, 10) + '...';\n          }\n\n          return labelText;\n        }\n\n        function renderDropdownLabel() {\n          $('>a', dropdown).html(getDropdownLabel() + ' ' + dropdownCaret.prop('outerHTML'));\n        }\n\n        function manageActive(elem) {\n          //fixes a bug where Bootstrap can't remove the 'active' class on elements after they've been hidden inside the dropdown\n          $('a', $(elem)).on('show.bs.tab', function (e) {\n            $(e.relatedTarget).parent().removeClass('active');\n          })\n          $('a', $(elem)).on('shown.bs.tab', function (e) {\n            renderDropdownLabel();\n          })\n\n        }\n\n        function checkDropdownSelection() {\n          if ($($dropdownTabs()).filter('.active').length > 0) {\n            $(dropdown).addClass('active');\n          } else {\n            $(dropdown).removeClass('active');\n          }\n\n          renderDropdownLabel();\n        }\n\n\n        var visibleTabsWidth = function () {\n          var visibleTabsWidth = 0;\n          $($visibleTabs()).each(function( index ) {\n            visibleTabsWidth += parseInt($(this).outerWidth(), 10);\n          });\n          visibleTabsWidth = visibleTabsWidth + parseInt($(dropdown).outerWidth(), 10);\n          return visibleTabsWidth;\n        }\n\n        var availableSpace = function () {\n          return $container.outerWidth()-visibleTabsWidth();\n        }\n\n        if (availableSpace()<0) {//we will hide tabs here\n          var x = availableSpace();\n          $($visibleTabs().get().reverse()).each(function( index ){\n            if (!($(this).hasClass('always-visible'))){\n                $(this).prependTo(dropdownMenu);\n                x=x+$(this).outerWidth();\n            }\n            if (x>=0) {return false;}\n          });\n        }\n\n        if (availableSpace()>getFirstHiddenElementWidth()) { //and here we bring the tabs out\n          var x = availableSpace();\n          $($dropdownTabs()).each(function( index ){\n            if (getHiddenElementWidth(this) < x && !($(this).hasClass('always-dropdown'))){\n              $(this).appendTo($container);\n              x = x-$(this).outerWidth();\n            } else {return false;}\n           });\n\n          if (!this.options.droptabs.pullDropdownRight && !$(dropdown).is(':last-child')) {\n            // If not pulling-right, keep the dropdown at the end of the container.\n            $(dropdown).detach().insertAfter($container.find('li:last-child'));\n          }\n        }\n\n        if ($dropdownTabs().length <= 0) {\n          dropdown.hide();\n        } else {\n          dropdown.show();\n        }\n      },\n\n      //Activates a tab specified as a selector. \n      activateTab : function(tab) {\n        if (langx.isNumber(tab)) {\n          $(this.$tabs[tab]).plugin(TabButton.prototype.pluginName).show();\n        }\n      },\n\n      addTab : function() {\n        //TODO\n      },\n\n      removeTab : function(){\n        //TODO\n      }\n    });\n\n    plugins.register(TabStrip);\n\n\n    return panels.TabStrip = TabStrip;\n\n});\ndefine('skylark-domx-plugins-panels/toolbar',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"./panels\",\n  \"./panel\"\n],function(langx,$,plugins,panels,Panel){ \n\n\n  var Toolbar = Panel.inherit({\n    klassName : \"Toolbar\",\n\n    pluginName : \"lark.panels.toolbar\",\n\n    options : {\n      toolbarFloat: true,\n      toolbarHidden: false,\n      toolbarFloatOffset: 0,\n      template : '<div class=\"domx-toolbar\"><ul></ul></div>',\n      separator : {\n        template :  '<li><span class=\"separator\"></span></li>'\n      }\n    },\n\n    _construct : function(elm,options) {\n      Panel.prototype._construct.call(this,elm,options);\n\n      var floatInitialized, initToolbarFloat, toolbarHeight;\n      //this.editor = editor;\n\n      //this.opts = langx.extend({}, this.opts, opts);\n      this.opts = this.options;\n\n\n      //if (!langx.isArray(this.opts.toolbar)) {\n      //  this.opts.toolbar = ['bold', 'italic', 'underline', 'strikethrough', '|', 'ol', 'ul', 'blockquote', 'code', '|', 'link', 'image', '|', 'indent', 'outdent'];\n      //}\n\n      this.wrapper = $(this._elm);\n      this.list = this.wrapper.find('ul');\n      this.list.on('click', function(e) {\n        return false;\n      });\n      this.wrapper.on('mousedown', (function(_this) {\n        return function(e) {\n          return _this.list.find('.menu-on').removeClass('.menu-on');\n        };\n      })(this));\n      $(document).on('mousedown.toolbar', (function(_this) {\n        return function(e) {\n          return _this.list.find('.menu-on').removeClass('menu-on');\n        };\n      })(this));\n      if (!this.opts.toolbarHidden && this.opts.toolbarFloat) {\n        this.wrapper.css('top', this.opts.toolbarFloatOffset);\n        toolbarHeight = 0;\n        initToolbarFloat = (function(_this) {\n          return function() {\n            _this.wrapper.css('position', 'static');\n            _this.wrapper.width('auto');\n            _this.editor.editable.util.reflow(_this.wrapper);\n            _this.wrapper.width(_this.wrapper.outerWidth());\n            _this.wrapper.css('left', _this.editor.editable.util.os.mobile ? _this.wrapper.position().left : _this.wrapper.offset().left);\n            _this.wrapper.css('position', '');\n            toolbarHeight = _this.wrapper.outerHeight();\n            _this.editor.placeholderEl.css('top', toolbarHeight);\n            return true;\n          };\n        })(this);\n        floatInitialized = null;\n\n        /*\n        $(window).on('resize.richeditor-' + this.editor.id, function(e) {\n          return floatInitialized = initToolbarFloat();\n        });\n        $(window).on('scroll.richeditor-' + this.editor.id, (function(_this) {\n          return function(e) {\n            var bottomEdge, scrollTop, topEdge;\n            if (!_this.wrapper.is(':visible')) {\n              return;\n            }\n            topEdge = _this.editor.wrapper.offset().top;\n            bottomEdge = topEdge + _this.editor.wrapper.outerHeight() - 80;\n            scrollTop = $(document).scrollTop() + _this.opts.toolbarFloatOffset;\n            if (scrollTop <= topEdge || scrollTop >= bottomEdge) {\n              _this.editor.wrapper.removeClass('toolbar-floating').css('padding-top', '');\n              if (_this.editor.editable.util.os.mobile) {\n                return _this.wrapper.css('top', _this.opts.toolbarFloatOffset);\n              }\n            } else {\n              floatInitialized || (floatInitialized = initToolbarFloat());\n              _this.editor.wrapper.addClass('toolbar-floating').css('padding-top', toolbarHeight);\n              if (_this.editor.editable.util.os.mobile) {\n                return _this.wrapper.css('top', scrollTop - topEdge + _this.opts.toolbarFloatOffset);\n              }\n            }\n          };\n        })(this));\n        */\n      }\n\n      /*\n      this.editor.on('destroy', (function(_this) {\n        return function() {\n          return _this.buttons.length = 0;\n        };\n      })(this));\n      */\n\n      \n    },\n\n    addToolItem : function(itemWidget) {\n      $(itemWidget._elm).appendTo(this.list);\n      return this;\n    },\n\n    addSeparator : function() {\n      $(this.options.separator.template).appendTo(this.list);\n      return this;\n    }\n\n  });\n\n  plugins.register(Toolbar);\n\n  return panels.Toolbar = Toolbar;\n\n});\ndefine('skylark-domx-plugins-panels/wizard',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"./panels\",\n  \"./panel\"\n ],function(langx,browser,eventer,noder,geom,$,plugins,panels,Panel){\n\n\n\tvar Wizard = Panel.inherit({\n\t\tklassName: \"Wizard\",\n\n\t    pluginName : \"lark.panels.wizard\",\n\n\t    options : {\n\t\t\tdisablePreviousStep: false,\n\t\t\tselectedItem: {\n\t\t\t\tstep: -1\n\t\t\t}//-1 means it will attempt to look for \"active\" class in order to set the step\n\t    },\n\n\t    _construct : function(elm,options) {\n      \t\tPanel.prototype._construct.call(this,elm,options);\n\n\t\t\tthis.$element = this.$();\n\t\t\tthis.options.disablePreviousStep = (this.$element.attr('data-restrict') === 'previous') ? true : this.options.disablePreviousStep;\n\t\t\tthis.currentStep = this.options.selectedItem.step;\n\t\t\tthis.numSteps = this.$element.find('.steps li').length;\n\t\t\tthis.$prevBtn = this.$element.find('button.btn-prev');\n\t\t\tthis.$nextBtn = this.$element.find('button.btn-next');\n\n\t\t\tvar kids = this.$nextBtn.children().detach();\n\t\t\tthis.nextText = langx.trim(this.$nextBtn.text());\n\t\t\tthis.$nextBtn.append(kids);\n\n\t\t\tvar steps = this.$element.children('.steps-container');\n\t\t\t// maintains backwards compatibility with < 3.8, will be removed in the future\n\t\t\tif (steps.length === 0) {\n\t\t\t\tsteps = this.$element;\n\t\t\t\tthis.$element.addClass('no-steps-container');\n\t\t\t\tif (window && window.console && window.console.warn) {\n\t\t\t\t\twindow.console.warn('please update your wizard markup to include \".steps-container\" as seen in http://getfuelux.com/javascript.html#wizard-usage-markup');\n\t\t\t\t}\n\t\t\t}\n\t\t\tsteps = steps.find('.steps');\n\n\t\t\t// handle events\n\t\t\tthis.$prevBtn.on('click.fu.wizard', langx.proxy(this.previous, this));\n\t\t\tthis.$nextBtn.on('click.fu.wizard', langx.proxy(this.next, this));\n\t\t\tsteps.on('click.fu.wizard', 'li.complete', langx.proxy(this.stepclicked, this));\n\n\t\t\tthis.selectedItem(this.options.selectedItem);\n\n\t\t\tif (this.options.disablePreviousStep) {\n\t\t\t\tthis.$prevBtn.attr('disabled', true);\n\t\t\t\tthis.$element.find('.steps').addClass('previous-disabled');\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings [none]\n\t\t\t// empty elements to return to original markup [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\t//index is 1 based\n\t\t//second parameter can be array of objects [{ ... }, { ... }] or you can pass n additional objects as args\n\t\t//object structure is as follows (all params are optional): { badge: '', label: '', pane: '' }\n\t\taddSteps: function (index) {\n\t\t\tvar items = [].slice.call(arguments).slice(1);\n\t\t\tvar $steps = this.$element.find('.steps');\n\t\t\tvar $stepContent = this.$element.find('.step-content');\n\t\t\tvar i, l, $pane, $startPane, $startStep, $step;\n\n\t\t\tindex = (index === -1 || (index > (this.numSteps + 1))) ? this.numSteps + 1 : index;\n\t\t\tif (items[0] instanceof Array) {\n\t\t\t\titems = items[0];\n\t\t\t}\n\n\t\t\t$startStep = $steps.find('li:nth-child(' + index + ')');\n\t\t\t$startPane = $stepContent.find('.step-pane:nth-child(' + index + ')');\n\t\t\tif ($startStep.length < 1) {\n\t\t\t\t$startStep = null;\n\t\t\t}\n\n\t\t\tfor (i = 0, l = items.length; i < l; i++) {\n\t\t\t\t$step = $('<li data-step=\"' + index + '\"><span class=\"badge badge-info\"></span></li>');\n\t\t\t\t$step.append(items[i].label || '').append('<span class=\"chevron\"></span>');\n\t\t\t\t$step.find('.badge').append(items[i].badge || index);\n\n\t\t\t\t$pane = $('<div class=\"step-pane\" data-step=\"' + index + '\"></div>');\n\t\t\t\t$pane.append(items[i].pane || '');\n\n\t\t\t\tif (!$startStep) {\n\t\t\t\t\t$steps.append($step);\n\t\t\t\t\t$stepContent.append($pane);\n\t\t\t\t} else {\n\t\t\t\t\t$startStep.before($step);\n\t\t\t\t\t$startPane.before($pane);\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis.syncSteps();\n\t\t\tthis.numSteps = $steps.find('li').length;\n\t\t\tthis.setState();\n\t\t},\n\n\t\t//index is 1 based, howMany is number to remove\n\t\tremoveSteps: function (index, howMany) {\n\t\t\tvar action = 'nextAll';\n\t\t\tvar i = 0;\n\t\t\tvar $steps = this.$element.find('.steps');\n\t\t\tvar $stepContent = this.$element.find('.step-content');\n\t\t\tvar $start;\n\n\t\t\thowMany = (howMany !== undefined) ? howMany : 1;\n\n\t\t\tif (index > $steps.find('li').length) {\n\t\t\t\t$start = $steps.find('li:last');\n\t\t\t} else {\n\t\t\t\t$start = $steps.find('li:nth-child(' + index + ')').prev();\n\t\t\t\tif ($start.length < 1) {\n\t\t\t\t\taction = 'children';\n\t\t\t\t\t$start = $steps;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$start[action]().each(function () {\n\t\t\t\tvar item = $(this);\n\t\t\t\tvar step = item.attr('data-step');\n\t\t\t\tif (i < howMany) {\n\t\t\t\t\titem.remove();\n\t\t\t\t\t$stepContent.find('.step-pane[data-step=\"' + step + '\"]:first').remove();\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t});\n\n\t\t\tthis.syncSteps();\n\t\t\tthis.numSteps = $steps.find('li').length;\n\t\t\tthis.setState();\n\t\t},\n\n\t\tsetState: function () {\n\t\t\tvar canMovePrev = (this.currentStep > 1);//remember, steps index is 1 based...\n\t\t\tvar isFirstStep = (this.currentStep === 1);\n\t\t\tvar isLastStep = (this.currentStep === this.numSteps);\n\n\t\t\t// disable buttons based on current step\n\t\t\tif (!this.options.disablePreviousStep) {\n\t\t\t\tthis.$prevBtn.attr('disabled', (isFirstStep === true || canMovePrev === false));\n\t\t\t}\n\n\t\t\t// change button text of last step, if specified\n\t\t\tvar last = this.$nextBtn.attr('data-last');\n\t\t\tif (last) {\n\t\t\t\tthis.lastText = last;\n\t\t\t\t// replace text\n\t\t\t\tvar text = this.nextText;\n\t\t\t\tif (isLastStep === true) {\n\t\t\t\t\ttext = this.lastText;\n\t\t\t\t\t// add status class to wizard\n\t\t\t\t\tthis.$element.addClass('complete');\n\t\t\t\t} else {\n\t\t\t\t\tthis.$element.removeClass('complete');\n\t\t\t\t}\n\n\t\t\t\tvar kids = this.$nextBtn.children().detach();\n\t\t\t\tthis.$nextBtn.text(text).append(kids);\n\t\t\t}\n\n\t\t\t// reset classes for all steps\n\t\t\tvar $steps = this.$element.find('.steps li');\n\t\t\t$steps.removeClass('active').removeClass('complete');\n\t\t\t$steps.find('span.badge').removeClass('badge-info').removeClass('badge-success');\n\n\t\t\t// set class for all previous steps\n\t\t\tvar prevSelector = '.steps li:lt(' + (this.currentStep - 1) + ')';\n\t\t\tvar $prevSteps = this.$element.find(prevSelector);\n\t\t\t$prevSteps.addClass('complete');\n\t\t\t$prevSteps.find('span.badge').addClass('badge-success');\n\n\t\t\t// set class for current step\n\t\t\tvar currentSelector = '.steps li:eq(' + (this.currentStep - 1) + ')';\n\t\t\tvar $currentStep = this.$element.find(currentSelector);\n\t\t\t$currentStep.addClass('active');\n\t\t\t$currentStep.find('span.badge').addClass('badge-info');\n\n\t\t\t// set display of target element\n\t\t\tvar $stepContent = this.$element.find('.step-content');\n\t\t\tvar target = $currentStep.attr('data-step');\n\t\t\t$stepContent.find('.step-pane').removeClass('active');\n\t\t\t$stepContent.find('.step-pane[data-step=\"' + target + '\"]:first').addClass('active');\n\n\t\t\t// reset the wizard position to the left\n\t\t\tthis.$element.find('.steps').first().attr('style', 'margin-left: 0');\n\n\t\t\t// check if the steps are wider than the container div\n\t\t\tvar totalWidth = 0;\n\t\t\tthis.$element.find('.steps > li').each(function () {\n\t\t\t\ttotalWidth += $(this).outerWidth();\n\t\t\t});\n\t\t\tvar containerWidth = 0;\n\t\t\tif (this.$element.find('.actions').length) {\n\t\t\t\tcontainerWidth = this.$element.width() - this.$element.find('.actions').first().outerWidth();\n\t\t\t} else {\n\t\t\t\tcontainerWidth = this.$element.width();\n\t\t\t}\n\n\t\t\tif (totalWidth > containerWidth) {\n\t\t\t\t// set the position so that the last step is on the right\n\t\t\t\tvar newMargin = totalWidth - containerWidth;\n\t\t\t\tthis.$element.find('.steps').first().attr('style', 'margin-left: -' + newMargin + 'px');\n\n\t\t\t\t// set the position so that the active step is in a good\n\t\t\t\t// position if it has been moved out of view\n\t\t\t\tif (this.$element.find('li.active').first().position().left < 200) {\n\t\t\t\t\tnewMargin += this.$element.find('li.active').first().position().left - 200;\n\t\t\t\t\tif (newMargin < 1) {\n\t\t\t\t\t\tthis.$element.find('.steps').first().attr('style', 'margin-left: 0');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.$element.find('.steps').first().attr('style', 'margin-left: -' + newMargin + 'px');\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only fire changed event after initializing\n\t\t\tif (typeof (this.initialized) !== 'undefined') {\n\t\t\t\tvar e = eventer.create('changed.fu.wizard');\n\t\t\t\tthis.$element.trigger(e, {\n\t\t\t\t\tstep: this.currentStep\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.initialized = true;\n\t\t},\n\n\t\tstepclicked: function (e) {\n\t\t\tvar li = $(e.currentTarget);\n\t\t\tvar index = this.$element.find('.steps li').index(li);\n\n\t\t\tif (index < this.currentStep && this.options.disablePreviousStep) {//enforce restrictions\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tvar evt = eventer.create('stepclicked.fu.wizard');\n\t\t\t\tthis.$element.trigger(evt, {\n\t\t\t\t\tstep: index + 1\n\t\t\t\t});\n\t\t\t\tif (evt.isDefaultPrevented()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.currentStep = (index + 1);\n\t\t\t\tthis.setState();\n\t\t\t}\n\t\t},\n\n\t\tsyncSteps: function () {\n\t\t\tvar i = 1;\n\t\t\tvar $steps = this.$element.find('.steps');\n\t\t\tvar $stepContent = this.$element.find('.step-content');\n\n\t\t\t$steps.children().each(function () {\n\t\t\t\tvar item = $(this);\n\t\t\t\tvar badge = item.find('.badge');\n\t\t\t\tvar step = item.attr('data-step');\n\n\t\t\t\tif (!isNaN(parseInt(badge.html(), 10))) {\n\t\t\t\t\tbadge.html(i);\n\t\t\t\t}\n\n\t\t\t\titem.attr('data-step', i);\n\t\t\t\t$stepContent.find('.step-pane[data-step=\"' + step + '\"]:last').attr('data-step', i);\n\t\t\t\ti++;\n\t\t\t});\n\t\t},\n\n\t\tprevious: function () {\n\t\t\tif (this.options.disablePreviousStep || this.currentStep === 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar e = eventer.create('actionclicked.fu.wizard');\n\t\t\tthis.$element.trigger(e, {\n\t\t\t\tstep: this.currentStep,\n\t\t\t\tdirection: 'previous'\n\t\t\t});\n\t\t\tif (e.isDefaultPrevented()) {\n\t\t\t\treturn;\n\t\t\t}// don't increment ...what? Why?\n\n\t\t\tthis.currentStep -= 1;\n\t\t\tthis.setState();\n\n\t\t\t// only set focus if focus is still on the $nextBtn (avoid stomping on a focus set programmatically in actionclicked callback)\n\t\t\tif (this.$prevBtn.is(':focus')) {\n\t\t\t\tvar firstFormField = this.$element.find('.active').find('input, select, textarea')[0];\n\n\t\t\t\tif (typeof firstFormField !== 'undefined') {\n\t\t\t\t\t// allow user to start typing immediately instead of having to click on the form field.\n\t\t\t\t\t$(firstFormField).focus();\n\t\t\t\t} else if (this.$element.find('.active input:first').length === 0 && this.$prevBtn.is(':disabled')) {\n\t\t\t\t\t//only set focus on a button as the last resort if no form fields exist and the just clicked button is now disabled\n\t\t\t\t\tthis.$nextBtn.focus();\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\tnext: function () {\n\t\t\tvar e = eventer.create('actionclicked.fu.wizard');\n\t\t\tthis.$element.trigger(e, {\n\t\t\t\tstep: this.currentStep,\n\t\t\t\tdirection: 'next'\n\t\t\t});\n\t\t\tif (e.isDefaultPrevented()) {\n\t\t\t\treturn;\n\t\t\t}// respect preventDefault in case dev has attached validation to step and wants to stop propagation based on it.\n\n\t\t\tif (this.currentStep < this.numSteps) {\n\t\t\t\tthis.currentStep += 1;\n\t\t\t\tthis.setState();\n\t\t\t} else {//is last step\n\t\t\t\tthis.$element.trigger('finished.fu.wizard');\n\t\t\t}\n\n\t\t\t// only set focus if focus is still on the $nextBtn (avoid stomping on a focus set programmatically in actionclicked callback)\n\t\t\tif (this.$nextBtn.is(':focus')) {\n\t\t\t\tvar firstFormField = this.$element.find('.active').find('input, select, textarea')[0];\n\n\t\t\t\tif (typeof firstFormField !== 'undefined') {\n\t\t\t\t\t// allow user to start typing immediately instead of having to click on the form field.\n\t\t\t\t\t$(firstFormField).focus();\n\t\t\t\t} else if (this.$element.find('.active input:first').length === 0 && this.$nextBtn.is(':disabled')) {\n\t\t\t\t\t//only set focus on a button as the last resort if no form fields exist and the just clicked button is now disabled\n\t\t\t\t\tthis.$prevBtn.focus();\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\n\t\tselectedItem: function (selectedItem) {\n\t\t\tvar retVal, step;\n\n\t\t\tif (selectedItem) {\n\t\t\t\tstep = selectedItem.step || -1;\n\t\t\t\t//allow selection of step by data-name\n\t\t\t\tstep = Number(this.$element.find('.steps li[data-name=\"' + step + '\"]').first().attr('data-step')) || Number(step);\n\n\t\t\t\tif (1 <= step && step <= this.numSteps) {\n\t\t\t\t\tthis.currentStep = step;\n\t\t\t\t\tthis.setState();\n\t\t\t\t} else {\n\t\t\t\t\tstep = this.$element.find('.steps li.active:first').attr('data-step');\n\t\t\t\t\tif (!isNaN(step)) {\n\t\t\t\t\t\tthis.currentStep = parseInt(step, 10);\n\t\t\t\t\t\tthis.setState();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tretVal = this;\n\t\t\t} else {\n\t\t\t\tretVal = {\n\t\t\t\t\tstep: this.currentStep\n\t\t\t\t};\n\t\t\t\tif (this.$element.find('.steps li.active:first[data-name]').length) {\n\t\t\t\t\tretVal.stepname = this.$element.find('.steps li.active:first').attr('data-name');\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn retVal;\n\t\t}\n\n\t});\n\n   plugins.register(Wizard);\n\n\treturn panels.Wizard = Wizard;\n\n});\n\ndefine('skylark-domx-plugins-panels/main',[\n    \"./panels\",\n    \"./accordion\",\n    \"./collapsible\",\n    \"./floating\",\n    \"./pagination\",\n    \"./panel\",\n    \"./tabstrip\",\n    \"./toolbar\",\n    \"./wizard\"\n], function(panels) {\n    return panels;\n});\ndefine('skylark-domx-plugins-panels', ['skylark-domx-plugins-panels/main'], function (main) { return main; });\n\n"]}