{"version":3,"sources":["toolbar.js"],"names":["define","langx","$","plugins","panels","Panel","Toolbar","inherit","klassName","pluginName","options","toolbarFloat","toolbarHidden","toolbarFloatOffset","template","separator","_construct","elm","toolbarHeight","_this","prototype","call","this","opts","wrapper","_elm","list","find","on","e","removeClass","document","css","width","editor","editable","util","reflow","outerWidth","os","mobile","position","left","offset","outerHeight","placeholderEl","addToolItem","itemWidget","appendTo","addSeparator","register"],"mappings":";;;;;;;AAAAA,QACE,sBACA,qBACA,4BACA,WACA,WACA,SAASC,EAAMC,EAAEC,EAAQC,EAAOC,GAGhC,IAAIC,EAAUD,EAAME,SAClBC,UAAY,UAEZC,WAAa,sBAEbC,SACEC,cAAc,EACdC,eAAe,EACfC,mBAAoB,EACpBC,SAAW,4CACXC,WACED,SAAY,6CAIhBE,WAAa,SAASC,EAAIP,GAGxB,IAAwCQ,EAgBDC,EAlBvCd,EAAMe,UAAUJ,WAAWK,KAAKC,KAAKL,EAAIP,GAMzCY,KAAKC,KAAOD,KAAKZ,QAOjBY,KAAKE,QAAUtB,EAAEoB,KAAKG,MACtBH,KAAKI,KAAOJ,KAAKE,QAAQG,KAAK,MAC9BL,KAAKI,KAAKE,GAAG,QAAS,SAASC,GAC7B,OAAO,IAETP,KAAKE,QAAQI,GAAG,aAAuBT,EAIpCG,KAHM,SAASO,GACd,OAAOV,EAAMO,KAAKC,KAAK,YAAYG,YAAY,eAGnD5B,EAAE6B,UAAUH,GAAG,oBAAqB,SAAUT,GAC5C,OAAO,SAASU,GACd,OAAOV,EAAMO,KAAKC,KAAK,YAAYG,YAAY,YAFf,CAIjCR,QACEA,KAAKC,KAAKX,eAAiBU,KAAKC,KAAKZ,eACxCW,KAAKE,QAAQQ,IAAI,MAAOV,KAAKC,KAAKV,oBAClCK,EAAgB,EACG,SAAUC,GAC3B,OAAO,WASL,OARAA,EAAMK,QAAQQ,IAAI,WAAY,UAC9Bb,EAAMK,QAAQS,MAAM,QACpBd,EAAMe,OAAOC,SAASC,KAAKC,OAAOlB,EAAMK,SACxCL,EAAMK,QAAQS,MAAMd,EAAMK,QAAQc,cAClCnB,EAAMK,QAAQQ,IAAI,OAAQb,EAAMe,OAAOC,SAASC,KAAKG,GAAGC,OAASrB,EAAMK,QAAQiB,WAAWC,KAAOvB,EAAMK,QAAQmB,SAASD,MACxHvB,EAAMK,QAAQQ,IAAI,WAAY,IAC9Bd,EAAgBC,EAAMK,QAAQoB,cAC9BzB,EAAMe,OAAOW,cAAcb,IAAI,MAAOd,IAC/B,GAVQ,CAYhBI,QA4CPwB,YAAc,SAASC,GAErB,OADA7C,EAAE6C,EAAWtB,MAAMuB,SAAS1B,KAAKI,MAC1BJ,MAGT2B,aAAe,WAEb,OADA/C,EAAEoB,KAAKZ,QAAQK,UAAUD,UAAUkC,SAAS1B,KAAKI,MAC1CJ,QAOX,OAFAnB,EAAQ+C,SAAS5C,GAEVF,EAAOE,QAAUA","file":"../toolbar.js","sourcesContent":["define([\n  \"skylark-langx/langx\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"./panels\",\n  \"./panel\"\n],function(langx,$,plugins,panels,Panel){ \n\n\n  var Toolbar = Panel.inherit({\n    klassName : \"Toolbar\",\n\n    pluginName : \"lark.panels.toolbar\",\n\n    options : {\n      toolbarFloat: true,\n      toolbarHidden: false,\n      toolbarFloatOffset: 0,\n      template : '<div class=\"domx-toolbar\"><ul></ul></div>',\n      separator : {\n        template :  '<li><span class=\"separator\"></span></li>'\n      }\n    },\n\n    _construct : function(elm,options) {\n      Panel.prototype._construct.call(this,elm,options);\n\n      var floatInitialized, initToolbarFloat, toolbarHeight;\n      //this.editor = editor;\n\n      //this.opts = langx.extend({}, this.opts, opts);\n      this.opts = this.options;\n\n\n      //if (!langx.isArray(this.opts.toolbar)) {\n      //  this.opts.toolbar = ['bold', 'italic', 'underline', 'strikethrough', '|', 'ol', 'ul', 'blockquote', 'code', '|', 'link', 'image', '|', 'indent', 'outdent'];\n      //}\n\n      this.wrapper = $(this._elm);\n      this.list = this.wrapper.find('ul');\n      this.list.on('click', function(e) {\n        return false;\n      });\n      this.wrapper.on('mousedown', (function(_this) {\n        return function(e) {\n          return _this.list.find('.menu-on').removeClass('.menu-on');\n        };\n      })(this));\n      $(document).on('mousedown.toolbar', (function(_this) {\n        return function(e) {\n          return _this.list.find('.menu-on').removeClass('menu-on');\n        };\n      })(this));\n      if (!this.opts.toolbarHidden && this.opts.toolbarFloat) {\n        this.wrapper.css('top', this.opts.toolbarFloatOffset);\n        toolbarHeight = 0;\n        initToolbarFloat = (function(_this) {\n          return function() {\n            _this.wrapper.css('position', 'static');\n            _this.wrapper.width('auto');\n            _this.editor.editable.util.reflow(_this.wrapper);\n            _this.wrapper.width(_this.wrapper.outerWidth());\n            _this.wrapper.css('left', _this.editor.editable.util.os.mobile ? _this.wrapper.position().left : _this.wrapper.offset().left);\n            _this.wrapper.css('position', '');\n            toolbarHeight = _this.wrapper.outerHeight();\n            _this.editor.placeholderEl.css('top', toolbarHeight);\n            return true;\n          };\n        })(this);\n        floatInitialized = null;\n\n        /*\n        $(window).on('resize.richeditor-' + this.editor.id, function(e) {\n          return floatInitialized = initToolbarFloat();\n        });\n        $(window).on('scroll.richeditor-' + this.editor.id, (function(_this) {\n          return function(e) {\n            var bottomEdge, scrollTop, topEdge;\n            if (!_this.wrapper.is(':visible')) {\n              return;\n            }\n            topEdge = _this.editor.wrapper.offset().top;\n            bottomEdge = topEdge + _this.editor.wrapper.outerHeight() - 80;\n            scrollTop = $(document).scrollTop() + _this.opts.toolbarFloatOffset;\n            if (scrollTop <= topEdge || scrollTop >= bottomEdge) {\n              _this.editor.wrapper.removeClass('toolbar-floating').css('padding-top', '');\n              if (_this.editor.editable.util.os.mobile) {\n                return _this.wrapper.css('top', _this.opts.toolbarFloatOffset);\n              }\n            } else {\n              floatInitialized || (floatInitialized = initToolbarFloat());\n              _this.editor.wrapper.addClass('toolbar-floating').css('padding-top', toolbarHeight);\n              if (_this.editor.editable.util.os.mobile) {\n                return _this.wrapper.css('top', scrollTop - topEdge + _this.opts.toolbarFloatOffset);\n              }\n            }\n          };\n        })(this));\n        */\n      }\n\n      /*\n      this.editor.on('destroy', (function(_this) {\n        return function() {\n          return _this.buttons.length = 0;\n        };\n      })(this));\n      */\n\n      \n    },\n\n    addToolItem : function(itemWidget) {\n      $(itemWidget._elm).appendTo(this.list);\n      return this;\n    },\n\n    addSeparator : function() {\n      $(this.options.separator.template).appendTo(this.list);\n      return this;\n    }\n\n  });\n\n  plugins.register(Toolbar);\n\n  return panels.Toolbar = Toolbar;\n\n});"]}