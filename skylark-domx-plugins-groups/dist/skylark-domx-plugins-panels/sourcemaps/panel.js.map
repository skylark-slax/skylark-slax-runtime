{"version":3,"sources":["panel.js"],"names":["define","langx","browser","eventer","noder","geom","$","plugins","Resizable","panels","Panel","Plugin","inherit","klassName","pluginName","options","_construct","elm","this","overrided","_velm","elmx","resizable","_resizable","handle","border","directions","top","left","right","bottom","topLeft","topRight","bottomLeft","bottomRight","classes","all","constraints","minWidth","minHeight","started","isResizing","moving","e","stopped","register"],"mappings":";;;;;;;AAAAA,QACE,sBACA,uBACA,uBACA,qBACA,oBACA,qBACA,4BACA,0CACA,YACA,SAASC,EAAMC,EAAQC,EAAQC,EAAMC,EAAKC,EAAEC,EAAQC,EAAUC,GAE9D,IAAIC,EAAQH,EAAQI,OAAOC,SACzBC,UAAY,QAEZC,WAAa,oBAEbC,WAsBAC,WAAa,SAASC,EAAIF,GACxBG,KAAKC,UAAUF,EAAIF,GACnBG,KAAKE,MAAQF,KAAKG,OAEdH,KAAKH,QAAQO,YAEbJ,KAAKK,WAAa,IAAIf,EAAUS,GAC5BO,QACIC,QACIC,YACIC,KAAK,EACLC,MAAM,EACNC,OAAO,EACPC,QAAQ,EACRC,SAAU,EACVC,UAAW,EACXC,YAAa,EACbC,aAAc,GAElBC,SACIC,IAAMlB,KAAKH,QAAQO,UAAUG,OAAOU,QAAQC,IAC5CT,IAAMT,KAAKH,QAAQO,UAAUG,OAAOU,QAAQR,IAC5CC,KAAMV,KAAKH,QAAQO,UAAUG,OAAOU,QAAQP,KAC5CC,MAAOX,KAAKH,QAAQO,UAAUG,OAAOU,QAAQN,MAC7CC,OAAQZ,KAAKH,QAAQO,UAAUG,OAAOU,QAAQL,OAC9CC,QAAUb,KAAKH,QAAQO,UAAUG,OAAOU,QAAQJ,QAChDC,SAAWd,KAAKH,QAAQO,UAAUG,OAAOU,QAAQH,SACjDC,WAAaf,KAAKH,QAAQO,UAAUG,OAAOU,QAAQF,WACnDC,YAAchB,KAAKH,QAAQO,UAAUG,OAAOU,QAAQD,eAIhEG,aACIC,SAAWpB,KAAKH,QAAQO,UAAUgB,SAClCC,UAAYrB,KAAKH,QAAQO,UAAUiB,WAEvCC,QAAU,KACNtB,KAAKuB,YAAa,GAEtBC,OAAS,SAASC,KAclBC,QAAU,KACN1B,KAAKuB,YAAa,SAYlC,OAFAlC,EAAQsC,SAASnC,GAEVA","file":"../panel.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"skylark-domx-plugins-interact/resizable\",\r\n  \"./panels\",\r\n],function(langx,browser,eventer,noder,geom,$,plugins,Resizable,panels){\r\n\r\n  var Panel = plugins.Plugin.inherit({\r\n    klassName : \"Panel\",\r\n\r\n    pluginName : \"lark.panels.panel\",\r\n\r\n    options : {\r\n      /*\r\n      resizable : {\r\n          minWidth: 320,\r\n          minHeight: 320,\r\n          border : {\r\n              classes :  {\r\n                  all : \"resizable-handle\",\r\n                  top : \"resizable-handle-n\",\r\n                  left: \"resizable-handle-w\",\r\n                  right: \"resizable-handle-e\",\r\n                  bottom: \"resizable-handle-s\", \r\n                  topLeft : \"resizable-handle-nw\", \r\n                  topRight : \"resizable-handle-ne\",\r\n                  bottomLeft : \"resizable-handle-sw\",             \r\n                  bottomRight : \"resizable-handle-se\"     \r\n              }\r\n          }\r\n      }\r\n      */\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      this._velm = this.elmx();\r\n\r\n      if (this.options.resizable) {\r\n\r\n          this._resizable = new Resizable(elm,{\r\n              handle : {\r\n                  border : {\r\n                      directions : {\r\n                          top: true, //n\r\n                          left: true, //w\r\n                          right: true, //e\r\n                          bottom: true, //s\r\n                          topLeft : true, // nw\r\n                          topRight : true, // ne\r\n                          bottomLeft : true, // sw\r\n                          bottomRight : true // se                         \r\n                      },\r\n                      classes : {\r\n                          all : this.options.resizable.border.classes.all,\r\n                          top : this.options.resizable.border.classes.top,\r\n                          left: this.options.resizable.border.classes.left,\r\n                          right: this.options.resizable.border.classes.right,\r\n                          bottom: this.options.resizable.border.classes.bottom, \r\n                          topLeft : this.options.resizable.border.classes.topLeft, \r\n                          topRight : this.options.resizable.border.classes.topRight,\r\n                          bottomLeft : this.options.resizable.border.classes.bottomLeft,             \r\n                          bottomRight : this.options.resizable.border.classes.bottomRight                        \r\n                      }                        \r\n                  }\r\n              },\r\n              constraints : {\r\n                  minWidth : this.options.resizable.minWidth,\r\n                  minHeight : this.options.resizable.minHeight\r\n              },\r\n              started : () => {\r\n                  this.isResizing = true;\r\n              },\r\n              moving : function(e) {\r\n                  /*\r\n                  const imageWidth = $(image).width();\r\n                  const imageHeight = $(image).height();\r\n                  const stageWidth = $(stage).width();\r\n                  const stageHeight = $(stage).height();\r\n                  const left = (stageWidth - imageWidth) /2;\r\n                  const top = (stageHeight- imageHeight) /2;\r\n                  $(image).css({\r\n                      left,\r\n                      top\r\n                  });\r\n                  */\r\n              },\r\n              stopped : () => {\r\n                  this.isResizing = false;\r\n              }\r\n          });\r\n\r\n      }\r\n    },\r\n\r\n\r\n  });\r\n\r\n  plugins.register(Panel);\r\n\r\n  return Panel;\r\n\r\n});"]}