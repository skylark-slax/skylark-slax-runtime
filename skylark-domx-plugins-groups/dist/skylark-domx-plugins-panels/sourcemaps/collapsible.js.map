{"version":3,"sources":["collapsible.js"],"names":["define","langx","browser","eventer","noder","geom","$","plugins","Collapse","panels","Panel","Collapsible","inherit","klassName","pluginName","options","toggler","selector","body","_construct","elm","prototype","call","this","_expanded","$toggle","_velm","find","$body","on","e","toggle","expand","emit","plugin","show","collapse","hide","full","unfull","toogleFull","close","register"],"mappings":";;;;;;;AAAAA,QACE,sBACA,uBACA,uBACA,qBACA,oBACA,qBACA,4BACA,wCACA,WACA,WACA,SAASC,EAAMC,EAAQC,EAAQC,EAAMC,EAAKC,EAAEC,EAAQC,EAASC,EAAOC,GAEpE,IAAIC,EAAcD,EAAME,SACtBC,UAAY,cAEZC,WAAa,0BAEbC,SACEC,SACEC,SAAW,2CAGbC,MACED,SAAW,gBAIfE,WAAa,SAASC,EAAIL,GACxBL,EAAMW,UAAUF,WAAWG,KAAKC,KAAKH,EAAIL,GAEzCQ,KAAKC,WAAY,EACjBD,KAAKE,QAAUF,KAAKG,MAAMC,KAAKJ,KAAKR,QAAQC,QAAQC,UACpDM,KAAKK,MAAQL,KAAKG,MAAMC,KAAKJ,KAAKR,QAAQG,KAAKD,UAC/CM,KAAKE,QAAQI,GAAG,cAAeC,IAC7BP,KAAKQ,YAKTC,OAAS,WAEPT,KAAKU,KAAK,aACVV,KAAKK,MAAMM,OAAO1B,EAASa,UAAUP,YAAYqB,OACjDZ,KAAKC,WAAY,EACjBD,KAAKU,KAAK,aAGZG,SAAW,WAETb,KAAKU,KAAK,cACVV,KAAKK,MAAMM,OAAO1B,EAASa,UAAUP,YAAYuB,OACjDd,KAAKC,WAAY,EACjBD,KAAKU,KAAK,cAGZF,OAAS,WAEHR,KAAKC,UACPD,KAAKa,WAELb,KAAKS,UAITM,KAAO,aAIPC,OAAS,aAITC,WAAa,aAIbC,MAAO,eAQT,OAFAlC,EAAQmC,SAAS/B,GAEVF,EAAOE,YAAcA","file":"../collapsible.js","sourcesContent":["define([\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"skylark-domx-plugins-toggles/collapse\",\n  \"./panels\",\n  \"./panel\"\n],function(langx,browser,eventer,noder,geom,$,plugins,Collapse,panels,Panel){\n\n  var Collapsible = Panel.inherit({\n    klassName : \"Collapsible\",\n\n    pluginName : \"lark.panels.collapsible\",\n\n    options : {\n      toggler : {\n        selector : \".panel-heading [data-toggle=\\\"collapse\\\"]\"\n      },\n\n      body : {\n        selector : \".panel-body\"\n      }\n    },\n\n    _construct : function(elm,options) {\n      Panel.prototype._construct.call(this,elm,options);\n      \n      this._expanded = false;\n      this.$toggle = this._velm.find(this.options.toggler.selector);\n      this.$body = this._velm.find(this.options.body.selector);\n      this.$toggle.on('click.panel',(e) => {\n        this.toggle();\n      });\n\n    },\n\n    expand : function() {\n      // expand this panel\n      this.emit(\"expanding\");\n      this.$body.plugin(Collapse.prototype.pluginName).show();\n      this._expanded = true;\n      this.emit(\"expanded\");\n    },\n\n    collapse : function() {\n      // collapse this panel\n      this.emit(\"collapsing\");\n      this.$body.plugin(Collapse.prototype.pluginName).hide();\n      this._expanded = false;\n      this.emit(\"collapsed\");\n    },\n\n    toggle : function() {\n      // toggle this panel\n      if (this._expanded) {\n        this.collapse();\n      } else {\n        this.expand();\n      }\n    },\n\n    full : function() {\n\n    },\n\n    unfull : function() {\n\n    },\n\n    toogleFull : function() {\n\n    },\n    \n    close: function () {\n    }\n\n\n  });\n\n  plugins.register(Collapsible);\n\n  return panels.Collapsible = Collapsible;\n\n});"]}